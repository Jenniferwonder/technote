import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/regexp/regexp.md",collection="posts",slug="js/regexp/regexp",body="\n# RegExp\n\n## RegExp type\n\n- let expression = /pattern 模式/flags 标记;\n- Different Mode\n  - g\n  - global mode 全局模式\n  - the pattern will be applied to all of the string instead of stopping after the first match is found\n  - i\n  - case-insensitive mode 不区分大小写\n  - the case of the pattern and the string are ignored when determining matches\n  - m\n  - multiline mode 多行模式\n  - the pattern will continue looking for matches after reaching the end of one line of text\n  - y\n  - sticky mode 粘附模式\n  - > the pattern will only look at the string contents beginning at lastIndex\n  - u\n  - Unicode mode is enable\n  - 启用 Unicode 匹配\n  - s\n    - dotAll 模式\n    - 表示元字符.匹配任何字符（包括\\n 或\\r）\n- metacharacters\n- must be escaped by a backslash (`\\`) when used as part of the pattern\n- 元字符含义\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-8-x67-y438.png)\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690779496589image.png)\n- 创建 RegExp instance (实例) 的方法 - literal form 字面量形- Regular-expression literals always share the same RegExp instanc- RegExp constructor 构造函- accepts two argument- a string **pattern** to match - All metacharacters must be double-escape- and an optional string of **flags** to apply - It is also possible to copy existing regular expression instances and optionally modify their flags using the constructo- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-9-x92-y69.png)\n\x3c!--SR:!2023-08-20,8,250!2023-08-24,12,250--\x3e\n\n## RegExp Instance Properties\n\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690781179401image.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-10-x65-y213.png)\n- lastIndex\n  - 表示在源字符串中下一次搜索的开始位置，或上一次搜索结束位置的右边第一位，始终从 0 开始\n\n## RegExp Instance Methods\n\n- exec()\n- 参数\n  - 只接收一个参数，即要应用模式的字符串\n- 返回值\n  - returns an **array** of information about the first match\n    - index\n    - 字符串中匹配模式的起始位置\n    - input\n    - 要查找的字符串\n    - 数组的第一个元素是匹配整个模式的字符串，其他元素是与表达式中的捕获组匹配的字符串\n    - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782053073image.png)\n  - or **null** if no match was found.\n  - 模式标记为`g`\n    - The exec() method returns information about one match at a time even if the pattern is global\n    - With the global g flag set on the pattern, each call to exec() moves further into the string looking for matches\n    - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782124256image.png)\n  - 模式标记为`y`\n    - 每次调用 exec()就只会在 `lastIndex` 的位置上寻找匹配项。粘附标记覆盖全局标记\n    - lastIndex tracks the index of the character that appears immediately to the right of the last match.\n    - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782407110image.png)\n- test()\n- 判断输入的文本与模式是否匹配，返回值：true/ false\n- returns true if the pattern matches the argument and false if it does not\n- toLocaleString() 与 toString() - return the literal representation of the regular expression, regardless of how it was created.\n\x3c!--SR:!2023-08-23,11,250!2023-08-21,9,250--\x3e\n\n## RegExp Constructor Properties\n\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-13-x84-y22.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-14-x67-y271.png)\n\n## Pattern Limitations\n\n- lack some of the advanced regular-expression features available in languages such as Perl\n- The following features are not supported in ECMAScript regular expressions\n",data={title:"RegExp",DateStarted:new Date(16897248e5),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/regexp/regexp.md",rawData:void 0},html='<h1 id="regexp">RegExp<a class="anchor" href="#regexp"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="regexp-type">RegExp type<a class="anchor" href="#regexp-type"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>let expression = /pattern 模式/flags 标记;</li>\n<li>Different Mode\n<ul>\n<li>g</li>\n<li>global mode 全局模式</li>\n<li>the pattern will be applied to all of the string instead of stopping after the first match is found</li>\n<li>i</li>\n<li>case-insensitive mode 不区分大小写</li>\n<li>the case of the pattern and the string are ignored when determining matches</li>\n<li>m</li>\n<li>multiline mode 多行模式</li>\n<li>the pattern will continue looking for matches after reaching the end of one line of text</li>\n<li>y</li>\n<li>sticky mode 粘附模式</li>\n<li>\n<blockquote>\n<p>the pattern will only look at the string contents beginning at lastIndex</p>\n</blockquote>\n</li>\n<li>u</li>\n<li>Unicode mode is enable</li>\n<li>启用 Unicode 匹配</li>\n<li>s\n<ul>\n<li>dotAll 模式</li>\n<li>表示元字符.匹配任何字符（包括\\n 或\\r）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>metacharacters</li>\n<li>must be escaped by a backslash (<code>\\</code>) when used as part of the pattern</li>\n<li>元字符含义\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-8-x67-y438.png" alt=""></li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690779496589image.png" alt=""></li>\n</ul>\n</li>\n<li>创建 RegExp instance (实例) 的方法 - literal form 字面量形- Regular-expression literals always share the same RegExp instanc- RegExp constructor 构造函- accepts two argument- a string <strong>pattern</strong> to match - All metacharacters must be double-escape- and an optional string of <strong>flags</strong> to apply - It is also possible to copy existing regular expression instances and optionally modify their flags using the constructo- <img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-9-x92-y69.png" alt=""></li>\n</ul>\n\x3c!--SR:!2023-08-20,8,250!2023-08-24,12,250--\x3e\n<h2 id="regexp-instance-properties">RegExp Instance Properties<a class="anchor" href="#regexp-instance-properties"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690781179401image.png" alt=""></li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-10-x65-y213.png" alt=""></li>\n<li>lastIndex\n<ul>\n<li>表示在源字符串中下一次搜索的开始位置，或上一次搜索结束位置的右边第一位，始终从 0 开始</li>\n</ul>\n</li>\n</ul>\n<h2 id="regexp-instance-methods">RegExp Instance Methods<a class="anchor" href="#regexp-instance-methods"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>exec()</li>\n<li>参数\n<ul>\n<li>只接收一个参数，即要应用模式的字符串</li>\n</ul>\n</li>\n<li>返回值\n<ul>\n<li>returns an <strong>array</strong> of information about the first match\n<ul>\n<li>index</li>\n<li>字符串中匹配模式的起始位置</li>\n<li>input</li>\n<li>要查找的字符串</li>\n<li>数组的第一个元素是匹配整个模式的字符串，其他元素是与表达式中的捕获组匹配的字符串</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782053073image.png" alt=""></li>\n</ul>\n</li>\n<li>or <strong>null</strong> if no match was found.</li>\n<li>模式标记为<code>g</code>\n<ul>\n<li>The exec() method returns information about one match at a time even if the pattern is global</li>\n<li>With the global g flag set on the pattern, each call to exec() moves further into the string looking for matches</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782124256image.png" alt=""></li>\n</ul>\n</li>\n<li>模式标记为<code>y</code>\n<ul>\n<li>每次调用 exec()就只会在 <code>lastIndex</code> 的位置上寻找匹配项。粘附标记覆盖全局标记</li>\n<li>lastIndex tracks the index of the character that appears immediately to the right of the last match.</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782407110image.png" alt=""></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>test()</li>\n<li>判断输入的文本与模式是否匹配，返回值：true/ false</li>\n<li>returns true if the pattern matches the argument and false if it does not</li>\n<li>toLocaleString() 与 toString() - return the literal representation of the regular expression, regardless of how it was created.</li>\n</ul>\n\x3c!--SR:!2023-08-23,11,250!2023-08-21,9,250--\x3e\n<h2 id="regexp-constructor-properties">RegExp Constructor Properties<a class="anchor" href="#regexp-constructor-properties"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-13-x84-y22.png" alt=""></li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-14-x67-y271.png" alt=""></li>\n</ul>\n<h2 id="pattern-limitations">Pattern Limitations<a class="anchor" href="#pattern-limitations"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>lack some of the advanced regular-expression features available in languages such as Perl</li>\n<li>The following features are not supported in ECMAScript regular expressions</li>\n</ul>',frontmatter={draft:!1,title:"RegExp",tags:["JavaScript"],topic:["RegExp"],type:"D",DateStarted:"2023-07-19T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",Datereviewed:"2024-04-17T00:00:00.000Z",reviewed:null,difficulty:null,comment:null,status:["Young"],aliases:["RegExp"],"linter-yaml-title-alias":"RegExp",category:"Programming",minutes:3,words:520},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/regexp/regexp.md",url=void 0;function rawContent(){return"\n# RegExp\n\n## RegExp type\n\n- let expression = /pattern 模式/flags 标记;\n- Different Mode\n  - g\n  - global mode 全局模式\n  - the pattern will be applied to all of the string instead of stopping after the first match is found\n  - i\n  - case-insensitive mode 不区分大小写\n  - the case of the pattern and the string are ignored when determining matches\n  - m\n  - multiline mode 多行模式\n  - the pattern will continue looking for matches after reaching the end of one line of text\n  - y\n  - sticky mode 粘附模式\n  - > the pattern will only look at the string contents beginning at lastIndex\n  - u\n  - Unicode mode is enable\n  - 启用 Unicode 匹配\n  - s\n    - dotAll 模式\n    - 表示元字符.匹配任何字符（包括\\n 或\\r）\n- metacharacters\n- must be escaped by a backslash (`\\`) when used as part of the pattern\n- 元字符含义\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-8-x67-y438.png)\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690779496589image.png)\n- 创建 RegExp instance (实例) 的方法 - literal form 字面量形- Regular-expression literals always share the same RegExp instanc- RegExp constructor 构造函- accepts two argument- a string **pattern** to match - All metacharacters must be double-escape- and an optional string of **flags** to apply - It is also possible to copy existing regular expression instances and optionally modify their flags using the constructo- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-9-x92-y69.png)\n\x3c!--SR:!2023-08-20,8,250!2023-08-24,12,250--\x3e\n\n## RegExp Instance Properties\n\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690781179401image.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-10-x65-y213.png)\n- lastIndex\n  - 表示在源字符串中下一次搜索的开始位置，或上一次搜索结束位置的右边第一位，始终从 0 开始\n\n## RegExp Instance Methods\n\n- exec()\n- 参数\n  - 只接收一个参数，即要应用模式的字符串\n- 返回值\n  - returns an **array** of information about the first match\n    - index\n    - 字符串中匹配模式的起始位置\n    - input\n    - 要查找的字符串\n    - 数组的第一个元素是匹配整个模式的字符串，其他元素是与表达式中的捕获组匹配的字符串\n    - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782053073image.png)\n  - or **null** if no match was found.\n  - 模式标记为`g`\n    - The exec() method returns information about one match at a time even if the pattern is global\n    - With the global g flag set on the pattern, each call to exec() moves further into the string looking for matches\n    - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782124256image.png)\n  - 模式标记为`y`\n    - 每次调用 exec()就只会在 `lastIndex` 的位置上寻找匹配项。粘附标记覆盖全局标记\n    - lastIndex tracks the index of the character that appears immediately to the right of the last match.\n    - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690782407110image.png)\n- test()\n- 判断输入的文本与模式是否匹配，返回值：true/ false\n- returns true if the pattern matches the argument and false if it does not\n- toLocaleString() 与 toString() - return the literal representation of the regular expression, regardless of how it was created.\n\x3c!--SR:!2023-08-23,11,250!2023-08-21,9,250--\x3e\n\n## RegExp Constructor Properties\n\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-13-x84-y22.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-14-x67-y271.png)\n\n## Pattern Limitations\n\n- lack some of the advanced regular-expression features available in languages such as Perl\n- The following features are not supported in ECMAScript regular expressions\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"regexp",text:"RegExp#"},{depth:2,slug:"regexp-type",text:"RegExp type#"},{depth:2,slug:"regexp-instance-properties",text:"RegExp Instance Properties#"},{depth:2,slug:"regexp-instance-methods",text:"RegExp Instance Methods#"},{depth:2,slug:"regexp-constructor-properties",text:"RegExp Constructor Properties#"},{depth:2,slug:"pattern-limitations",text:"Pattern Limitations#"}]}const Content=createComponent(((e,n,t)=>{const{layout:i,...r}=frontmatter;return r.file=file,r.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),regexp=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,regexp,slug};