import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/string/string-instance-methods/string-pattern-matching-methods-查找匹配替换.md",collection="posts",slug="js/string/string-instance-methods/string-pattern-matching-methods-查找匹配替换",body="\n# String Pattern-Matching Methods-查找匹配替换\n\n- `match()`\n  - 参数\n    - 正则表达式字符串或 RegExp 对象\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690963574528image.png)\n- `search()`\n  - 参数\n    - 正则表达式字符串或 RegExp 对象\n  - 返回值\n    - 返回模式第一个匹配的位置索引，如果没找到则返回 -1。\n  - 特点\n    - `search()` 始终从字符串开头向后匹配模式\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690963484325image.png)\n- `replace()`\n  - 参数\n    - 两个参数：1. 字符串或 RegExp 对象；2.新字符串\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-30-x68-y348.png)\n",data={title:"String Pattern-Matching Methods-查找匹配替换",DateStarted:new Date(17093376e5),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/string/string-instance-methods/string-pattern-matching-methods-查找匹配替换.md",rawData:void 0},html='<h1 id="string-pattern-matching-methods-查找匹配替换">String Pattern-Matching Methods-查找匹配替换<a class="anchor" href="#string-pattern-matching-methods-查找匹配替换"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<ul>\n<li><code>match()</code>\n<ul>\n<li>参数\n<ul>\n<li>正则表达式字符串或 RegExp 对象</li>\n</ul>\n</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690963574528image.png" alt=""></li>\n</ul>\n</li>\n<li><code>search()</code>\n<ul>\n<li>参数\n<ul>\n<li>正则表达式字符串或 RegExp 对象</li>\n</ul>\n</li>\n<li>返回值\n<ul>\n<li>返回模式第一个匹配的位置索引，如果没找到则返回 -1。</li>\n</ul>\n</li>\n<li>特点\n<ul>\n<li><code>search()</code> 始终从字符串开头向后匹配模式</li>\n</ul>\n</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690963484325image.png" alt=""></li>\n</ul>\n</li>\n<li><code>replace()</code>\n<ul>\n<li>参数\n<ul>\n<li>两个参数：1. 字符串或 RegExp 对象；2.新字符串</li>\n</ul>\n</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-30-x68-y348.png" alt=""></li>\n</ul>\n</li>\n</ul>',frontmatter={draft:!1,aliases:["String Pattern-Matching Methods-查找匹配替换"],title:"String Pattern-Matching Methods-查找匹配替换",topic:["String"],type:"D",tags:["JavaScript"],DateStarted:"2024-03-02T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",Datereviewed:"2024-03-02T00:00:00.000Z",reviewed:1,difficulty:null,status:null,comment:null,"linter-yaml-title-alias":"String Pattern-Matching Methods-查找匹配替换",category:"Programming",minutes:1,words:102},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/string/string-instance-methods/string-pattern-matching-methods-查找匹配替换.md",url=void 0;function rawContent(){return"\n# String Pattern-Matching Methods-查找匹配替换\n\n- `match()`\n  - 参数\n    - 正则表达式字符串或 RegExp 对象\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690963574528image.png)\n- `search()`\n  - 参数\n    - 正则表达式字符串或 RegExp 对象\n  - 返回值\n    - 返回模式第一个匹配的位置索引，如果没找到则返回 -1。\n  - 特点\n    - `search()` 始终从字符串开头向后匹配模式\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1690963484325image.png)\n- `replace()`\n  - 参数\n    - 两个参数：1. 字符串或 RegExp 对象；2.新字符串\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-30-x68-y348.png)\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"string-pattern-matching-methods-查找匹配替换",text:"String Pattern-Matching Methods-查找匹配替换#"}]}const Content=createComponent(((n,e,t)=>{const{layout:i,...r}=frontmatter;return r.file=file,r.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),stringPatternMatchingMethods_______=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,slug,stringPatternMatchingMethods_______};