import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/bom/navigator-object.md",collection="posts",slug="js/bom/navigator-object",body="\n# THE NAVIGATOR OBJECT\n\n## navigator 对象的属性通常用于确定浏览器的类型\n\n## Detecting Plug-ins\n\n- Legacy Internet Explorer Plugin Detection\n- 检测插件就是遍历浏览器中 可用的插件，并逐个比较插件的名称\n  - 除 IE10 及更低版本外的浏览器，都可以通 过 plugins 数组来确定\n- 这个数组中的每一项都包含如下属性\n  - name：插件名称。\n    - name 属性包含识别插件所需的必要信息，尽管不是特别准确\n  - description：插件介绍\n  - filename：插件的文件名\n  - length：由当前插件处理的 MIME 类型数量\n\n## Registering Handlers\n\n- registerProtocolHandler()方法\n  - 可以把一个网站注册为处理某种特定类型信息应用程序\n  - 可以借助这个方法将 Web 应用程序注册为像桌面软件一样的默认应用程序\n- 3 个参数\n  - 要处理的协议\n  - 处理该协议的 URL\n  - 应用名称\n\n## 实现了 NavigatorID 、 NavigatorLanguage 、 NavigatorOnLine 、 NavigatorContentUtils 、 NavigatorStorage 、 NavigatorStorageUtils 、 NavigatorConcurrentHardware、NavigatorPlugins 和 NavigatorUserMedia 接口定义的属性和方法\n\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691737442874.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691737457348.png)\n",data={title:"THE NAVIGATOR OBJECT",DateStarted:new Date(1691712e6),draft:!0,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/bom/navigator-object.md",rawData:void 0},html='<h1 id="the-navigator-object">THE NAVIGATOR OBJECT<a class="anchor" href="#the-navigator-object"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="navigator-对象的属性通常用于确定浏览器的类型">navigator 对象的属性通常用于确定浏览器的类型<a class="anchor" href="#navigator-对象的属性通常用于确定浏览器的类型"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="detecting-plug-ins">Detecting Plug-ins<a class="anchor" href="#detecting-plug-ins"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>Legacy Internet Explorer Plugin Detection</li>\n<li>检测插件就是遍历浏览器中 可用的插件，并逐个比较插件的名称\n<ul>\n<li>除 IE10 及更低版本外的浏览器，都可以通 过 plugins 数组来确定</li>\n</ul>\n</li>\n<li>这个数组中的每一项都包含如下属性\n<ul>\n<li>name：插件名称。\n<ul>\n<li>name 属性包含识别插件所需的必要信息，尽管不是特别准确</li>\n</ul>\n</li>\n<li>description：插件介绍</li>\n<li>filename：插件的文件名</li>\n<li>length：由当前插件处理的 MIME 类型数量</li>\n</ul>\n</li>\n</ul>\n<h2 id="registering-handlers">Registering Handlers<a class="anchor" href="#registering-handlers"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>registerProtocolHandler()方法\n<ul>\n<li>可以把一个网站注册为处理某种特定类型信息应用程序</li>\n<li>可以借助这个方法将 Web 应用程序注册为像桌面软件一样的默认应用程序</li>\n</ul>\n</li>\n<li>3 个参数\n<ul>\n<li>要处理的协议</li>\n<li>处理该协议的 URL</li>\n<li>应用名称</li>\n</ul>\n</li>\n</ul>\n<h2 id="实现了-navigatorid--navigatorlanguage--navigatoronline--navigatorcontentutils--navigatorstorage--navigatorstorageutils--navigatorconcurrenthardwarenavigatorplugins-和-navigatorusermedia-接口定义的属性和方法">实现了 NavigatorID 、 NavigatorLanguage 、 NavigatorOnLine 、 NavigatorContentUtils 、 NavigatorStorage 、 NavigatorStorageUtils 、 NavigatorConcurrentHardware、NavigatorPlugins 和 NavigatorUserMedia 接口定义的属性和方法<a class="anchor" href="#实现了-navigatorid--navigatorlanguage--navigatoronline--navigatorcontentutils--navigatorstorage--navigatorstorageutils--navigatorconcurrenthardwarenavigatorplugins-和-navigatorusermedia-接口定义的属性和方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691737442874.png" alt=""></li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691737457348.png" alt=""></li>\n</ul>',frontmatter={aliases:["THE NAVIGATOR OBJECT"],title:"THE NAVIGATOR OBJECT",tags:["JavaScript"],topic:["Objects","BOM"],difficulty:null,comment:null,type:"D",DateStarted:"2023-08-11T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",Datereviewed:null,reviewed:null,status:["Snooze"],category:"Programming",draft:!0,"linter-yaml-title-alias":"THE NAVIGATOR OBJECT",minutes:1,words:255},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/bom/navigator-object.md",url=void 0;function rawContent(){return"\n# THE NAVIGATOR OBJECT\n\n## navigator 对象的属性通常用于确定浏览器的类型\n\n## Detecting Plug-ins\n\n- Legacy Internet Explorer Plugin Detection\n- 检测插件就是遍历浏览器中 可用的插件，并逐个比较插件的名称\n  - 除 IE10 及更低版本外的浏览器，都可以通 过 plugins 数组来确定\n- 这个数组中的每一项都包含如下属性\n  - name：插件名称。\n    - name 属性包含识别插件所需的必要信息，尽管不是特别准确\n  - description：插件介绍\n  - filename：插件的文件名\n  - length：由当前插件处理的 MIME 类型数量\n\n## Registering Handlers\n\n- registerProtocolHandler()方法\n  - 可以把一个网站注册为处理某种特定类型信息应用程序\n  - 可以借助这个方法将 Web 应用程序注册为像桌面软件一样的默认应用程序\n- 3 个参数\n  - 要处理的协议\n  - 处理该协议的 URL\n  - 应用名称\n\n## 实现了 NavigatorID 、 NavigatorLanguage 、 NavigatorOnLine 、 NavigatorContentUtils 、 NavigatorStorage 、 NavigatorStorageUtils 、 NavigatorConcurrentHardware、NavigatorPlugins 和 NavigatorUserMedia 接口定义的属性和方法\n\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691737442874.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691737457348.png)\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"the-navigator-object",text:"THE NAVIGATOR OBJECT#"},{depth:2,slug:"navigator-对象的属性通常用于确定浏览器的类型",text:"navigator 对象的属性通常用于确定浏览器的类型#"},{depth:2,slug:"detecting-plug-ins",text:"Detecting Plug-ins#"},{depth:2,slug:"registering-handlers",text:"Registering Handlers#"},{depth:2,slug:"实现了-navigatorid--navigatorlanguage--navigatoronline--navigatorcontentutils--navigatorstorage--navigatorstorageutils--navigatorconcurrenthardwarenavigatorplugins-和-navigatorusermedia-接口定义的属性和方法",text:"实现了 NavigatorID 、 NavigatorLanguage 、 NavigatorOnLine 、 NavigatorContentUtils 、 NavigatorStorage 、 NavigatorStorageUtils 、 NavigatorConcurrentHardware、NavigatorPlugins 和 NavigatorUserMedia 接口定义的属性和方法#"}]}const Content=createComponent(((n,a,t)=>{const{layout:e,...i}=frontmatter;return i.file=file,i.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),navigatorObject=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,navigatorObject,slug};