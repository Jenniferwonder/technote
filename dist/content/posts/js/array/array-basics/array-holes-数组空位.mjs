import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/array/array-basics/array-holes-数组空位.md",collection="posts",slug="js/array/array-basics/array-holes-数组空位",body="\n# Array Holes-数组空位\n\n---\n\nBasic\n\n### Array Holes-数组空位含义\n\nBack:\n\n- 数组中的连续逗号间即为空位\n- ![1691245201476.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691245201476.png)\n\n📌: JS::JS-Array  \n🏷️: JS-Array\n\n\x3c!--ID: 1706537534099--\x3e\n\n---\n\n---\n\nBasic\n\n### ES6 统一将空位值视为\n\nBack:\n\n- `undefined`\n- ![1691245314602.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691245314602.png)\n\n\x3c!--ID: 1706537534109--\x3e\n\n---\n\n---\n\nBasic\n\n### 数组空位注意事项\n\n- `alert([1,,,,5].map(() => 6));` 输出？\n- `alert([1,,,,5].join('-'));` 输出？  \n  Back:\n- ❌ Avoid using array holes in your code.\n- ✅Prefer to use an explicit `undefined` in place of a hole.\n\n#### `alert([1,,,,5].map(() => 6));` 输出？\n\n- `[6,undefined,undefined,undefined,6]`\n- `map()` will skip the holes entirely\n\n#### `alert([1,,,,5].join('-'));` 输出？\n\n- `1----5`\n- `join()` treats holes as empty strings\n\x3c!--ID: 1706537534116--\x3e\n\n---\n",data={title:"Array Holes-数组空位",DateStarted:new Date(17062272e5),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-basics/array-holes-数组空位.md",rawData:void 0},html='<h1 id="array-holes-数组空位">Array Holes-数组空位<a class="anchor" href="#array-holes-数组空位"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<hr>\n<p>Basic</p>\n<h3 id="array-holes-数组空位含义">Array Holes-数组空位含义<a class="anchor" href="#array-holes-数组空位含义"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>数组中的连续逗号间即为空位</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691245201476.png" alt="1691245201476.png"></li>\n</ul>\n<p>📌: JS::JS-Array<br>\n🏷️: JS-Array</p>\n\x3c!--ID: 1706537534099--\x3e\n<hr>\n<hr>\n<p>Basic</p>\n<h3 id="es6-统一将空位值视为">ES6 统一将空位值视为<a class="anchor" href="#es6-统一将空位值视为"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li><code>undefined</code></li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691245314602.png" alt="1691245314602.png"></li>\n</ul>\n\x3c!--ID: 1706537534109--\x3e\n<hr>\n<hr>\n<p>Basic</p>\n<h3 id="数组空位注意事项">数组空位注意事项<a class="anchor" href="#数组空位注意事项"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>alert([1,,,,5].map(() => 6));</code> 输出？</li>\n<li><code>alert([1,,,,5].join(\'-\'));</code> 输出？<br>\nBack:</li>\n<li>❌ Avoid using array holes in your code.</li>\n<li>✅Prefer to use an explicit <code>undefined</code> in place of a hole.</li>\n</ul>\n<h4 id="alert15map--6-输出"><code>alert([1,,,,5].map(() => 6));</code> 输出？<a class="anchor" href="#alert15map--6-输出"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><code>[6,undefined,undefined,undefined,6]</code></li>\n<li><code>map()</code> will skip the holes entirely</li>\n</ul>\n<h4 id="alert15join--输出"><code>alert([1,,,,5].join(\'-\'));</code> 输出？<a class="anchor" href="#alert15join--输出"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><code>1----5</code></li>\n<li><code>join()</code> treats holes as empty strings</li>\n</ul>\n\x3c!--ID: 1706537534116--\x3e\n<hr>',frontmatter={draft:!1,Datereviewed:"2024-01-26T00:00:00.000Z",aliases:["Array Holes-数组空位"],title:"Array Holes-数组空位",topic:["Array"],type:"D",tags:["JavaScript"],DateStarted:"2024-01-26T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",reviewed:1,difficulty:"Good",status:["Mature"],comment:"注意 map, fill 在空位数组中的特性","linter-yaml-title-alias":"Array Holes-数组空位",category:"Programming",minutes:1,words:95},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-basics/array-holes-数组空位.md",url=void 0;function rawContent(){return"\n# Array Holes-数组空位\n\n---\n\nBasic\n\n### Array Holes-数组空位含义\n\nBack:\n\n- 数组中的连续逗号间即为空位\n- ![1691245201476.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691245201476.png)\n\n📌: JS::JS-Array  \n🏷️: JS-Array\n\n\x3c!--ID: 1706537534099--\x3e\n\n---\n\n---\n\nBasic\n\n### ES6 统一将空位值视为\n\nBack:\n\n- `undefined`\n- ![1691245314602.png](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1691245314602.png)\n\n\x3c!--ID: 1706537534109--\x3e\n\n---\n\n---\n\nBasic\n\n### 数组空位注意事项\n\n- `alert([1,,,,5].map(() => 6));` 输出？\n- `alert([1,,,,5].join('-'));` 输出？  \n  Back:\n- ❌ Avoid using array holes in your code.\n- ✅Prefer to use an explicit `undefined` in place of a hole.\n\n#### `alert([1,,,,5].map(() => 6));` 输出？\n\n- `[6,undefined,undefined,undefined,6]`\n- `map()` will skip the holes entirely\n\n#### `alert([1,,,,5].join('-'));` 输出？\n\n- `1----5`\n- `join()` treats holes as empty strings\n\x3c!--ID: 1706537534116--\x3e\n\n---\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"array-holes-数组空位",text:"Array Holes-数组空位#"},{depth:3,slug:"array-holes-数组空位含义",text:"Array Holes-数组空位含义#"},{depth:3,slug:"es6-统一将空位值视为",text:"ES6 统一将空位值视为#"},{depth:3,slug:"数组空位注意事项",text:"数组空位注意事项#"},{depth:4,slug:"alert15map--6-输出",text:"alert([1,,,,5].map(() => 6)); 输出？#"},{depth:4,slug:"alert15join--输出",text:"alert([1,,,,5].join('-')); 输出？#"}]}const Content=createComponent(((n,e,a)=>{const{layout:r,...t}=frontmatter;return t.file=file,t.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),arrayHoles_____=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,arrayHoles_____,body,collection,data,id,slug};