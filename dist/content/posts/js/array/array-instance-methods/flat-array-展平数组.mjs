import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/array/array-instance-methods/flat-array-展平数组.md",collection="posts",slug="js/array/array-instance-methods/flat-array-展平数组",body="\n# Flat Array-展平数组 (ES2019)\n\n> [数组的扩展 - ECMAScript 6 入门 (ruanyifeng.com)](https://es6.ruanyifeng.com/#docs/array)\n\n### `flat()`\n\n默认展平一层\n\n```js\n[1, 2, [3, [4, 5]]]\n\t.flat()\n\t[\n\t\t// [1, 2, 3, [4, 5]]\n\n\t\t(1, 2, [3, [4, 5]])\n\t].flat(2)\n\t[\n\t\t// [1, 2, 3, 4, 5]\n\n\t\t(1, [2, [3]])\n\t].flat(Infinity);\n// [1, 2, 3]\n```\n\n### `flatMap()`\n\n相当于 `map()` + `flat()` ，但只能展开一层数组\n\n```js\n[2, 3, 4]\n\t.flatMap((x) => [x, x * 2])\n\t[\n\t\t// [2, 4, 3, 6, 4, 8]\n\t\t(1, 2, 3, 4)\n\t].flatMap((x) => [[x * 2]]);\n// [[2], [4], [6], [8]]\n```\n",data={title:"Flat Array-展平数组 (ES2019)",DateStarted:new Date(17062272e5),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-instance-methods/flat-array-展平数组.md",rawData:void 0},html='<h1 id="flat-array-展平数组-es2019">Flat Array-展平数组 (ES2019)<a class="anchor" href="#flat-array-展平数组-es2019"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<blockquote>\n<p><a href="https://es6.ruanyifeng.com/#docs/array">数组的扩展 - ECMAScript 6 入门 (ruanyifeng.com)</a></p>\n</blockquote>\n<h3 id="flat"><code>flat()</code><a class="anchor" href="#flat"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>默认展平一层</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">[</span><span style="color:#79B8FF">1</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">2</span><span style="color:#E1E4E8">, [</span><span style="color:#79B8FF">3</span><span style="color:#E1E4E8">, [</span><span style="color:#79B8FF">4</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">5</span><span style="color:#E1E4E8">]]]</span></span>\n<span class="line"><span style="color:#E1E4E8">\t.</span><span style="color:#B392F0">flat</span><span style="color:#E1E4E8">()</span></span>\n<span class="line"><span style="color:#E1E4E8">\t[</span></span>\n<span class="line"><span style="color:#6A737D">\t\t// [1, 2, 3, [4, 5]]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">\t\t(</span><span style="color:#79B8FF">1</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">2</span><span style="color:#E1E4E8">, [</span><span style="color:#79B8FF">3</span><span style="color:#E1E4E8">, [</span><span style="color:#79B8FF">4</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">5</span><span style="color:#E1E4E8">]])</span></span>\n<span class="line"><span style="color:#E1E4E8">\t].</span><span style="color:#B392F0">flat</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">2</span><span style="color:#E1E4E8">)</span></span>\n<span class="line"><span style="color:#E1E4E8">\t[</span></span>\n<span class="line"><span style="color:#6A737D">\t\t// [1, 2, 3, 4, 5]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">\t\t(</span><span style="color:#79B8FF">1</span><span style="color:#E1E4E8">, [</span><span style="color:#79B8FF">2</span><span style="color:#E1E4E8">, [</span><span style="color:#79B8FF">3</span><span style="color:#E1E4E8">]])</span></span>\n<span class="line"><span style="color:#E1E4E8">\t].</span><span style="color:#B392F0">flat</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">Infinity</span><span style="color:#E1E4E8">);</span></span>\n<span class="line"><span style="color:#6A737D">// [1, 2, 3]</span></span>\n<span class="line"></span></code></pre>\n<h3 id="flatmap"><code>flatMap()</code><a class="anchor" href="#flatmap"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>相当于 <code>map()</code> + <code>flat()</code> ，但只能展开一层数组</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">[</span><span style="color:#79B8FF">2</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">3</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">4</span><span style="color:#E1E4E8">]</span></span>\n<span class="line"><span style="color:#E1E4E8">\t.</span><span style="color:#B392F0">flatMap</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">x</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> [x, x </span><span style="color:#F97583">*</span><span style="color:#79B8FF"> 2</span><span style="color:#E1E4E8">])</span></span>\n<span class="line"><span style="color:#E1E4E8">\t[</span></span>\n<span class="line"><span style="color:#6A737D">\t\t// [2, 4, 3, 6, 4, 8]</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t(</span><span style="color:#79B8FF">1</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">2</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">3</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">4</span><span style="color:#E1E4E8">)</span></span>\n<span class="line"><span style="color:#E1E4E8">\t].</span><span style="color:#B392F0">flatMap</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">x</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> [[x </span><span style="color:#F97583">*</span><span style="color:#79B8FF"> 2</span><span style="color:#E1E4E8">]]);</span></span>\n<span class="line"><span style="color:#6A737D">// [[2], [4], [6], [8]]</span></span>\n<span class="line"></span></code></pre>',frontmatter={draft:!1,Datereviewed:"2024-01-26T00:00:00.000Z",aliases:["Flat Array-展平数组 (ES2019)"],title:"Flat Array-展平数组 (ES2019)",topic:["Array"],type:"D",tags:["JavaScript"],DateStarted:"2024-01-26T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",reviewed:1,difficulty:"Hard",status:["Snooze"],comment:null,"linter-yaml-title-alias":"Flat Array-展平数组 (ES2019)",category:"Programming",minutes:1,words:104},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/array/array-instance-methods/flat-array-展平数组.md",url=void 0;function rawContent(){return"\n# Flat Array-展平数组 (ES2019)\n\n> [数组的扩展 - ECMAScript 6 入门 (ruanyifeng.com)](https://es6.ruanyifeng.com/#docs/array)\n\n### `flat()`\n\n默认展平一层\n\n```js\n[1, 2, [3, [4, 5]]]\n\t.flat()\n\t[\n\t\t// [1, 2, 3, [4, 5]]\n\n\t\t(1, 2, [3, [4, 5]])\n\t].flat(2)\n\t[\n\t\t// [1, 2, 3, 4, 5]\n\n\t\t(1, [2, [3]])\n\t].flat(Infinity);\n// [1, 2, 3]\n```\n\n### `flatMap()`\n\n相当于 `map()` + `flat()` ，但只能展开一层数组\n\n```js\n[2, 3, 4]\n\t.flatMap((x) => [x, x * 2])\n\t[\n\t\t// [2, 4, 3, 6, 4, 8]\n\t\t(1, 2, 3, 4)\n\t].flatMap((x) => [[x * 2]]);\n// [[2], [4], [6], [8]]\n```\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"flat-array-展平数组-es2019",text:"Flat Array-展平数组 (ES2019)#"},{depth:3,slug:"flat",text:"flat()#"},{depth:3,slug:"flatmap",text:"flatMap()#"}]}const Content=createComponent(((a,n,s)=>{const{layout:t,...l}=frontmatter;return l.file=file,l.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),flatArray_____=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,flatArray_____,id,slug};