import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/basics/data-types-数据类型.md",collection="posts",slug="js/basics/data-types-数据类型",body="\n# Data Types-数据类型\n\n## Reference\n\n- [JavaScript data types and data structures - JavaScript | MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures)\n\n## `typeof`\n\n- works well for primitive values\n  - 只能检测出基本类型，不能检测出引用类型\n  - 7 Types (`number、undefined、symbol、string、function、boolean、object`)\n  - 特殊情况：`typeof null === 'object'`\n- typeof is an operator and not a function, no parentheses are required\n- functions are considered **objects** in ECMAScript\n  - they do have some special properties\n  - differentiating between functions and other objects\n- [Object Types (instanceof 标识对象类型)](../object/object-types-instanceof-标识对象类型)\n\n## 6 simple data types\n\n- The [Undefined and Null](undefined-and-null) Type\n- The [Boolean](boolean) Type\n- The [Number](../number/number) Type\n- The [String](../string) Type\n- The [Symbol](symbol) Type (ES6)\n\n## 1 complex data type\n\n- The [Object](../object/object) Type\n\n### 数据类型的判断有哪些方法？他们的优缺点及区别是什么？\n\n然后判断数据类型的方法一般可以通过：typeof、instanceof、constructor、toString 四种常用方法  \n不同类型的优缺点 typeof instanceof constructor Object.prototype.toString.call\n",data={title:"Data Types-数据类型",DateStarted:new Date(16697664e5),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/basics/data-types-数据类型.md",rawData:void 0},html='<h1 id="data-types-数据类型">Data Types-数据类型<a class="anchor" href="#data-types-数据类型"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="reference">Reference<a class="anchor" href="#reference"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures">JavaScript data types and data structures - JavaScript | MDN</a></li>\n</ul>\n<h2 id="typeof"><code>typeof</code><a class="anchor" href="#typeof"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>works well for primitive values\n<ul>\n<li>只能检测出基本类型，不能检测出引用类型</li>\n<li>7 Types (<code>number、undefined、symbol、string、function、boolean、object</code>)</li>\n<li>特殊情况：<code>typeof null === \'object\'</code></li>\n</ul>\n</li>\n<li>typeof is an operator and not a function, no parentheses are required</li>\n<li>functions are considered <strong>objects</strong> in ECMAScript\n<ul>\n<li>they do have some special properties</li>\n<li>differentiating between functions and other objects</li>\n</ul>\n</li>\n<li><a href="../object/object-types-instanceof-%E6%A0%87%E8%AF%86%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B">Object Types (instanceof 标识对象类型)</a></li>\n</ul>\n<h2 id="6-simple-data-types">6 simple data types<a class="anchor" href="#6-simple-data-types"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>The <a href="undefined-and-null">Undefined and Null</a> Type</li>\n<li>The <a href="boolean">Boolean</a> Type</li>\n<li>The <a href="../number/number">Number</a> Type</li>\n<li>The <a href="../string">String</a> Type</li>\n<li>The <a href="symbol">Symbol</a> Type (ES6)</li>\n</ul>\n<h2 id="1-complex-data-type">1 complex data type<a class="anchor" href="#1-complex-data-type"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>The <a href="../object/object">Object</a> Type</li>\n</ul>\n<h3 id="数据类型的判断有哪些方法他们的优缺点及区别是什么">数据类型的判断有哪些方法？他们的优缺点及区别是什么？<a class="anchor" href="#数据类型的判断有哪些方法他们的优缺点及区别是什么"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>然后判断数据类型的方法一般可以通过：typeof、instanceof、constructor、toString 四种常用方法<br>\n不同类型的优缺点 typeof instanceof constructor Object.prototype.toString.call</p>',frontmatter={aliases:["Data Types-数据类型"],draft:!1,title:"Data Types-数据类型",tags:["JavaScript"],topic:["Basics"],type:"D",status:["Mature"],DateStarted:"2022-11-30T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",Datereviewed:"2024-01-29T00:00:00.000Z",difficulty:"Good",reviewed:3,comment:null,category:"Programming","linter-yaml-title-alias":"Data Types-数据类型",minutes:1,words:165},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/basics/data-types-数据类型.md",url=void 0;function rawContent(){return"\n# Data Types-数据类型\n\n## Reference\n\n- [JavaScript data types and data structures - JavaScript | MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures)\n\n## `typeof`\n\n- works well for primitive values\n  - 只能检测出基本类型，不能检测出引用类型\n  - 7 Types (`number、undefined、symbol、string、function、boolean、object`)\n  - 特殊情况：`typeof null === 'object'`\n- typeof is an operator and not a function, no parentheses are required\n- functions are considered **objects** in ECMAScript\n  - they do have some special properties\n  - differentiating between functions and other objects\n- [Object Types (instanceof 标识对象类型)](../object/object-types-instanceof-标识对象类型)\n\n## 6 simple data types\n\n- The [Undefined and Null](undefined-and-null) Type\n- The [Boolean](boolean) Type\n- The [Number](../number/number) Type\n- The [String](../string) Type\n- The [Symbol](symbol) Type (ES6)\n\n## 1 complex data type\n\n- The [Object](../object/object) Type\n\n### 数据类型的判断有哪些方法？他们的优缺点及区别是什么？\n\n然后判断数据类型的方法一般可以通过：typeof、instanceof、constructor、toString 四种常用方法  \n不同类型的优缺点 typeof instanceof constructor Object.prototype.toString.call\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"data-types-数据类型",text:"Data Types-数据类型#"},{depth:2,slug:"reference",text:"Reference#"},{depth:2,slug:"typeof",text:"typeof#"},{depth:2,slug:"6-simple-data-types",text:"6 simple data types#"},{depth:2,slug:"1-complex-data-type",text:"1 complex data type#"},{depth:3,slug:"数据类型的判断有哪些方法他们的优缺点及区别是什么",text:"数据类型的判断有哪些方法？他们的优缺点及区别是什么？#"}]}const Content=createComponent(((e,t,n)=>{const{layout:a,...o}=frontmatter;return o.file=file,o.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),dataTypes_____=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,dataTypes_____,id,slug};