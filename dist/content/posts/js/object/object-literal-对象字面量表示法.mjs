import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="js/object/object-literal-对象字面量表示法.md",collection="posts",slug="js/object/object-literal-对象字面量表示法",body="\n# Object literal-对象字面量表示法\n\n### Use Object literal to Create Object\n\n- `{ }`\n\n```js\n// Object literal syntax\nconst circle = {\n\tradius: 1,\n\tlocation: {\n\t\tx: 1,\n\t\ty: 1,\n\t},\n\t// ES6 enhanced object literals: Create Function as *methods* inside an object 🟨\n\tdraw: function () {\n\t\tconsole.log(draw);\n\t},\n};\ncircle.draw();\n```\n\n---\n\nBasic\n\n### Enhanced Object Property Syntax (ES6)\n\nBack:\n\n- 属性值简写-Property Value Shorthand\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1692024641437.png)\n- 简写方法名\n- 可计算属性-Computed Property Keys - 可以在对象字面量中完成动态属性赋值  \n📌: JS::JS-Objects  \n🏷️: JS-Objects\n\x3c!--ID: 1706845435119--\x3e\n\n---\n",data={title:"Object literal-对象字面量表示法",DateStarted:new Date(1706832e6),draft:!1,tags:["JavaScript"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/object/object-literal-对象字面量表示法.md",rawData:void 0},html='<h1 id="object-literal-对象字面量表示法">Object literal-对象字面量表示法<a class="anchor" href="#object-literal-对象字面量表示法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h3 id="use-object-literal-to-create-object">Use Object literal to Create Object<a class="anchor" href="#use-object-literal-to-create-object"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>{ }</code></li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#6A737D">// Object literal syntax</span></span>\n<span class="line"><span style="color:#F97583">const</span><span style="color:#79B8FF"> circle</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\tradius: </span><span style="color:#79B8FF">1</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\tlocation: {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\tx: </span><span style="color:#79B8FF">1</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\ty: </span><span style="color:#79B8FF">1</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t},</span></span>\n<span class="line"><span style="color:#6A737D">\t// ES6 enhanced object literals: Create Function as *methods* inside an object 🟨</span></span>\n<span class="line"><span style="color:#B392F0">\tdraw</span><span style="color:#E1E4E8">: </span><span style="color:#F97583">function</span><span style="color:#E1E4E8"> () {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\tconsole.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(draw);</span></span>\n<span class="line"><span style="color:#E1E4E8">\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"><span style="color:#E1E4E8">circle.</span><span style="color:#B392F0">draw</span><span style="color:#E1E4E8">();</span></span>\n<span class="line"></span></code></pre>\n<hr>\n<p>Basic</p>\n<h3 id="enhanced-object-property-syntax-es6">Enhanced Object Property Syntax (ES6)<a class="anchor" href="#enhanced-object-property-syntax-es6"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>Back:</p>\n<ul>\n<li>属性值简写-Property Value Shorthand\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1692024641437.png" alt=""></li>\n</ul>\n</li>\n<li>简写方法名</li>\n<li>可计算属性-Computed Property Keys - 可以在对象字面量中完成动态属性赋值<br>\n📌: JS::JS-Objects<br>\n🏷️: JS-Objects</li>\n</ul>\n\x3c!--ID: 1706845435119--\x3e\n<hr>',frontmatter={draft:!1,aliases:["Object literal-对象字面量表示法"],title:"Object literal-对象字面量表示法",topic:["Objects"],type:"D",tags:["JavaScript"],DateStarted:"2024-02-02T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",Datereviewed:"2024-02-02T00:00:00.000Z",reviewed:2,difficulty:null,status:null,comment:null,"linter-yaml-title-alias":"Object literal-对象字面量表示法",category:"Programming",minutes:1,words:101},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/object/object-literal-对象字面量表示法.md",url=void 0;function rawContent(){return"\n# Object literal-对象字面量表示法\n\n### Use Object literal to Create Object\n\n- `{ }`\n\n```js\n// Object literal syntax\nconst circle = {\n\tradius: 1,\n\tlocation: {\n\t\tx: 1,\n\t\ty: 1,\n\t},\n\t// ES6 enhanced object literals: Create Function as *methods* inside an object 🟨\n\tdraw: function () {\n\t\tconsole.log(draw);\n\t},\n};\ncircle.draw();\n```\n\n---\n\nBasic\n\n### Enhanced Object Property Syntax (ES6)\n\nBack:\n\n- 属性值简写-Property Value Shorthand\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1692024641437.png)\n- 简写方法名\n- 可计算属性-Computed Property Keys - 可以在对象字面量中完成动态属性赋值  \n📌: JS::JS-Objects  \n🏷️: JS-Objects\n\x3c!--ID: 1706845435119--\x3e\n\n---\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"object-literal-对象字面量表示法",text:"Object literal-对象字面量表示法#"},{depth:3,slug:"use-object-literal-to-create-object",text:"Use Object literal to Create Object#"},{depth:3,slug:"enhanced-object-property-syntax-es6",text:"Enhanced Object Property Syntax (ES6)#"}]}const Content=createComponent(((n,e,t)=>{const{layout:a,...s}=frontmatter;return s.file=file,s.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),objectLiteral_________=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,objectLiteral_________,slug};