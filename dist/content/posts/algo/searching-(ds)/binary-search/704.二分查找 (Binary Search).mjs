import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="algo/searching-(ds)/binary-search/704.二分查找 (Binary Search).md",collection="posts",slug="algo/searching-ds/binary-search/704二分查找-binary-search",body="\n# 704.二分查找\n\n## 题目要求\n\n给定一个  `n`  个元素有序的（升序）整型数组  `nums`  和一个目标值  `target`  ，写一个函数搜索  `nums`  中的  `target`，如果目标值存在返回下标，否则返回  `-1`。\n\n## [核心方法](核心方法)\n\n## 关键步骤\n\n## 代码实现 (JS)\n\n本方案可满足时间复杂度 **O(logn)**，空间复杂度 **O(1)**\n\n```js\n\n```\n",data={title:"704.二分查找",DateStarted:new Date(16956e8),draft:!1,tags:["Algo"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/searching-(ds)/binary-search/704.二分查找 (Binary Search).md",rawData:void 0},html='<h1 id="704二分查找">704.二分查找<a class="anchor" href="#704二分查找"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="题目要求">题目要求<a class="anchor" href="#题目要求"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>给定一个  <code>n</code>  个元素有序的（升序）整型数组  <code>nums</code>  和一个目标值  <code>target</code>  ，写一个函数搜索  <code>nums</code>  中的  <code>target</code>，如果目标值存在返回下标，否则返回  <code>-1</code>。</p>\n<h2 id="核心方法"><a href="%E6%A0%B8%E5%BF%83%E6%96%B9%E6%B3%95">核心方法</a><a class="anchor" href="#核心方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="关键步骤">关键步骤<a class="anchor" href="#关键步骤"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="代码实现-js">代码实现 (JS)<a class="anchor" href="#代码实现-js"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>本方案可满足时间复杂度 <strong>O(logn)</strong>，空间复杂度 <strong>O(1)</strong></p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"></span></code></pre>',frontmatter={tags:["Algo"],category:"Programming",draft:!1,LCID:"LC-704",title:"704.二分查找",type:"A",Similar:[[["35.搜索插入位置 (Search-Insert-Position)|LC-35"]]],topic:["BinarySearch","HashTable","Two-Pointers"],difficulty:"Easy",Time:"O(logn)",Space:"O(1)",Like:null,Solution:null,SourceLink:"https://leetcode.cn/problems/search-insert-position",DateStarted:"2023-09-25T00:00:00.000Z",DateDone:"2023-09-25T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",status:null,aliases:["704.二分查找","LC-704"],TimeNeed:"Easy",comment:"本题二分法优于哈希表；⚠️注意中间数声明在循环体内部; 注意循环结构用 while; left <= right",Datereviewed:"2024-02-16T16:00:00.000Z",reviewed:6,"linter-yaml-title-alias":"704.二分查找",minutes:1,words:92},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/searching-(ds)/binary-search/704.二分查找 (Binary Search).md",url=void 0;function rawContent(){return"\n# 704.二分查找\n\n## 题目要求\n\n给定一个  `n`  个元素有序的（升序）整型数组  `nums`  和一个目标值  `target`  ，写一个函数搜索  `nums`  中的  `target`，如果目标值存在返回下标，否则返回  `-1`。\n\n## [核心方法](核心方法)\n\n## 关键步骤\n\n## 代码实现 (JS)\n\n本方案可满足时间复杂度 **O(logn)**，空间复杂度 **O(1)**\n\n```js\n\n```\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"704二分查找",text:"704.二分查找#"},{depth:2,slug:"题目要求",text:"题目要求#"},{depth:2,slug:"核心方法",text:"核心方法#"},{depth:2,slug:"关键步骤",text:"关键步骤#"},{depth:2,slug:"代码实现-js",text:"代码实现 (JS)#"}]}const Content=createComponent(((e,n,t)=>{const{layout:a,...o}=frontmatter;return o.file=file,o.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),_704_______Binary_Search_=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_704_______Binary_Search_,_internal,body,collection,data,id,slug};