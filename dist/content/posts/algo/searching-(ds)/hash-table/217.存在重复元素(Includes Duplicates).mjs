import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="algo/searching-(ds)/hash-table/217.存在重复元素(Includes Duplicates).md",collection="posts",slug="algo/searching-ds/hash-table/217存在重复元素includes-duplicates",body="\n# 217.存在重复元素(Includes Duplicates)\n\n## 题目要求\n\n本题给你一个整数数组  `nums` 。如果任一值在数组中出现   至少两次  ，返回  `true` ；如果数组中每个元素互不相同，返回  `false` 。\n\n## [核心方法](核心方法)\n\n- [核心方法 > Hash Table 哈希表](核心方法#Hash-Table-哈希表)\n- 也可考虑升序排序后，判断相邻元素是否相等，这样 T=O (nlogn), S=O (logn)\n\n## 关键步骤\n\n## 代码实现 (JS)\n\n本方案可满足时间复杂度 `O(nlogn)`，空间复杂度 `O(n)`，用 JavaScript 实现如下：\n\n```js\n\n```\n",data={title:"217.存在重复元素(Includes Duplicates)",DateStarted:new Date(16942176e5),draft:!1,tags:["Algo"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/searching-(ds)/hash-table/217.存在重复元素(Includes Duplicates).md",rawData:void 0},html='<h1 id="217存在重复元素includes-duplicates">217.存在重复元素(Includes Duplicates)<a class="anchor" href="#217存在重复元素includes-duplicates"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="题目要求">题目要求<a class="anchor" href="#题目要求"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>本题给你一个整数数组  <code>nums</code> 。如果任一值在数组中出现   至少两次  ，返回  <code>true</code> ；如果数组中每个元素互不相同，返回  <code>false</code> 。</p>\n<h2 id="核心方法"><a href="%E6%A0%B8%E5%BF%83%E6%96%B9%E6%B3%95">核心方法</a><a class="anchor" href="#核心方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><a href="%E6%A0%B8%E5%BF%83%E6%96%B9%E6%B3%95#Hash-Table-%E5%93%88%E5%B8%8C%E8%A1%A8">核心方法 > Hash Table 哈希表</a></li>\n<li>也可考虑升序排序后，判断相邻元素是否相等，这样 T=O (nlogn), S=O (logn)</li>\n</ul>\n<h2 id="关键步骤">关键步骤<a class="anchor" href="#关键步骤"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="代码实现-js">代码实现 (JS)<a class="anchor" href="#代码实现-js"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>本方案可满足时间复杂度 <code>O(nlogn)</code>，空间复杂度 <code>O(n)</code>，用 JavaScript 实现如下：</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"></span></code></pre>',frontmatter={tags:["Algo"],category:"Programming",draft:!1,LCID:"LC-217",title:"217.存在重复元素(Includes Duplicates)",type:"A",topic:["Array","HashTable","Sorting"],difficulty:"Easy",Time:"O(n)",Space:"O(n)",Like:null,Solution:"哈希表或排序",SourceLink:"https://leetcode.cn/problems/search-insert-position",DateStarted:"2023-09-09T00:00:00.000Z",DateDone:"2023-09-09T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",status:null,aliases:["LC-217"],reviewed:4,Datereviewed:"2024-02-16T16:00:00.000Z",comment:"哈希基础",TimeNeed:"Good",minutes:1,words:131},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/searching-(ds)/hash-table/217.存在重复元素(Includes Duplicates).md",url=void 0;function rawContent(){return"\n# 217.存在重复元素(Includes Duplicates)\n\n## 题目要求\n\n本题给你一个整数数组  `nums` 。如果任一值在数组中出现   至少两次  ，返回  `true` ；如果数组中每个元素互不相同，返回  `false` 。\n\n## [核心方法](核心方法)\n\n- [核心方法 > Hash Table 哈希表](核心方法#Hash-Table-哈希表)\n- 也可考虑升序排序后，判断相邻元素是否相等，这样 T=O (nlogn), S=O (logn)\n\n## 关键步骤\n\n## 代码实现 (JS)\n\n本方案可满足时间复杂度 `O(nlogn)`，空间复杂度 `O(n)`，用 JavaScript 实现如下：\n\n```js\n\n```\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"217存在重复元素includes-duplicates",text:"217.存在重复元素(Includes Duplicates)#"},{depth:2,slug:"题目要求",text:"题目要求#"},{depth:2,slug:"核心方法",text:"核心方法#"},{depth:2,slug:"关键步骤",text:"关键步骤#"},{depth:2,slug:"代码实现-js",text:"代码实现 (JS)#"}]}const Content=createComponent(((e,n,a)=>{const{layout:t,...s}=frontmatter;return s.file=file,s.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),_217________Includes_Duplicates_=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_217________Includes_Duplicates_,_internal,body,collection,data,id,slug};