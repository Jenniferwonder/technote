import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="algo/recursive-algorithm/two-pointers/15.三数之和 (Three-Sums).md",collection="posts",slug="algo/recursive-algorithm/two-pointers/15三数之和-three-sums",body="\n# 15.三数之和 (Three-Sums)\n\n## 题目要求\n\n- 涉及数据结构：数组\n- 要求：数组任意三元素和为 0，元素组合不能重复\n- 返回：一个含符合要求元素组合的二维数组\n\n#### 示例：\n\n## [核心方法](核心方法)\n\n- [核心方法 > 数组排序](核心方法#数组排序)\n- [核心方法 > 双指针](核心方法#双指针)\n\n## 关键步骤\n\n## 代码实现 (JS)\n\n本方案可满足时间复杂度 `O(nlogn)`，空间复杂度 `O(n)`，用 JavaScript 实现如下：\n\n```js\n\n```\n",data={title:"15.三数之和 (Three-Sums)",DateStarted:new Date(1694304e6),draft:!1,tags:["Algo"],category:"Programming"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/recursive-algorithm/two-pointers/15.三数之和 (Three-Sums).md",rawData:void 0},html='<h1 id="15三数之和-three-sums">15.三数之和 (Three-Sums)<a class="anchor" href="#15三数之和-three-sums"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="题目要求">题目要求<a class="anchor" href="#题目要求"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>涉及数据结构：数组</li>\n<li>要求：数组任意三元素和为 0，元素组合不能重复</li>\n<li>返回：一个含符合要求元素组合的二维数组</li>\n</ul>\n<h4 id="示例">示例：<a class="anchor" href="#示例"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h2 id="核心方法"><a href="%E6%A0%B8%E5%BF%83%E6%96%B9%E6%B3%95">核心方法</a><a class="anchor" href="#核心方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><a href="%E6%A0%B8%E5%BF%83%E6%96%B9%E6%B3%95#%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F">核心方法 > 数组排序</a></li>\n<li><a href="%E6%A0%B8%E5%BF%83%E6%96%B9%E6%B3%95#%E5%8F%8C%E6%8C%87%E9%92%88">核心方法 > 双指针</a></li>\n</ul>\n<h2 id="关键步骤">关键步骤<a class="anchor" href="#关键步骤"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="代码实现-js">代码实现 (JS)<a class="anchor" href="#代码实现-js"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>本方案可满足时间复杂度 <code>O(nlogn)</code>，空间复杂度 <code>O(n)</code>，用 JavaScript 实现如下：</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"></span></code></pre>',frontmatter={tags:["Algo"],category:"Programming",draft:!1,LCID:"LC-15",title:"15.三数之和 (Three-Sums)",type:"A",Similar:[[["26.去除重复元素 (Remove-duplicates-from-sorted-array)|LC-26"]],[["27.移除元素 (Remove Element)|LC-27"]]],topic:["Two-Pointers","Sorting","Array"],difficulty:"Medium",Time:"O(n*logn)",Space:"O(n)",Like:null,Solution:"双指针",SourceLink:"https://leetcode.cn/problems/search-insert-position",DateStarted:"2023-09-10T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",status:null,aliases:["LC-15"],reviewed:10,Datereviewed:"2024-02-16T16:00:00.000Z",TimeNeed:"Good",comment:"排序；嵌套循环; 特例，2次去重; 左右指针",minutes:1,words:110},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/recursive-algorithm/two-pointers/15.三数之和 (Three-Sums).md",url=void 0;function rawContent(){return"\n# 15.三数之和 (Three-Sums)\n\n## 题目要求\n\n- 涉及数据结构：数组\n- 要求：数组任意三元素和为 0，元素组合不能重复\n- 返回：一个含符合要求元素组合的二维数组\n\n#### 示例：\n\n## [核心方法](核心方法)\n\n- [核心方法 > 数组排序](核心方法#数组排序)\n- [核心方法 > 双指针](核心方法#双指针)\n\n## 关键步骤\n\n## 代码实现 (JS)\n\n本方案可满足时间复杂度 `O(nlogn)`，空间复杂度 `O(n)`，用 JavaScript 实现如下：\n\n```js\n\n```\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"15三数之和-three-sums",text:"15.三数之和 (Three-Sums)#"},{depth:2,slug:"题目要求",text:"题目要求#"},{depth:4,slug:"示例",text:"示例：#"},{depth:2,slug:"核心方法",text:"核心方法#"},{depth:2,slug:"关键步骤",text:"关键步骤#"},{depth:2,slug:"代码实现-js",text:"代码实现 (JS)#"}]}const Content=createComponent(((e,n,t)=>{const{layout:a,...o}=frontmatter;return o.file=file,o.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),_15_______ThreeSums_=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_15_______ThreeSums_,_internal,body,collection,data,id,slug};