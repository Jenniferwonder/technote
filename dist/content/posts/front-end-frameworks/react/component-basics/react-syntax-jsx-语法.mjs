import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1718090302448/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="front-end-frameworks/react/component-basics/react-syntax-jsx-语法.md",collection="posts",slug="front-end-frameworks/react/component-basics/react-syntax-jsx-语法",body="\n# React Syntax-JSX-语法\n\n### JSX Rules & Syntax\n\n- JSX lets you put markup into JavaScript\n\n#### Fragment 包裹元素\n\n> 为一个组件添加多个元素,可以讲你的子组件列表添加到一个分组中(`<></>`),并且不会再 DOM 增加额外节点\n\n- component also can't return multiple JSX tag\n- You have to wrap them into a shared parent, like a `<div>...</div>` or an empty `<>...</>` wrapper\n\n#### Curly braces\n\n- Curly braces let you “escape back” into JS so that you can embed some variable from your code and display it to the user\n  - You can add any JavaScript expression (something that evaluates to a single value) inside _curly braces_.\n  - An _object property_ with dot notation\n    - `<h1>{user.name}</h1>`\n  - A _template literal_\n    - `return <h1>{`Cool ${title}`}</h1>;`\n  - The _returned value of a function_\n    - `return <h1>{createTitle(title)}</h1>;`\n  - _ternary operators_\n    - `return <h1>{title ? title : 'Default Title'}</h1>;`\n\n#### Conditional Rendering\n\n- Case-1-`if...else`\n- Case-2-`test? a:b`\n- Case-3-`&&`\n- 📌[Conditional](DB-React-Components/Conditional)\n\n#### Render Lists\n\n- `.map()` method\n- `.filter()`\n  - 📌[FilterList](DB-React-Components/FilterList)\n  - 📌[ProductTableApp](DB-React-Components/ProductTableApp)\n- `key`\n  - `<li>` has a `key` attribute. For each item in a list, you should pass a string or a number that uniquely identifies that item among its siblings.\n  - 📌[Lists](DB-React-Components/Lists)\n\n## Questiosn\n\n#### [React 必须使用 JSX 吗？](https://github.com/haizlin/fe-interview/issues/886)\n\n#### [在 JSX 中如何写注释？](https://github.com/haizlin/fe-interview/issues/867)\n\n#### [React 的书写规范有哪些？](https://github.com/haizlin/fe-interview/issues/660)\n\n#### [在 React 中你有经常使用常量吗？](https://github.com/haizlin/fe-interview/issues/925)\n\n#### [写个例子说明什么是 JSX 的内联条件渲染](https://github.com/haizlin/fe-interview/issues/877)\n\n#### [怎样有条件地渲染组件？](https://github.com/haizlin/fe-interview/issues/868)\n\n#### [在 React 中什么时候使用箭头函数更方便呢？](https://github.com/haizlin/fe-interview/issues/872)\n\n#### [写例子说明 React 如何在 JSX 中实现 for 循环](https://github.com/haizlin/fe-interview/issues/865)\n\n#### [ES6 的语法'...'在 React 中有哪些应用？](https://github.com/haizlin/fe-interview/issues/826)\n\n#### [在 React 中遍历的方法有哪些？它们有什么区别呢？](https://github.com/haizlin/fe-interview/issues/679)\n\n#### [props.children.map 和 js 的 map 有什么区别？为什么优先选择 React 的？](https://github.com/haizlin/fe-interview/issues/677)\n\n#### [写 React 你是用 es6 还是 es5 的语法？有什么区别？](https://github.com/haizlin/fe-interview/issues/625)\n\n#### [在 React 中我们怎么做静态类型检测？都有哪些方法可以做到？](https://github.com/haizlin/fe-interview/issues/810)\n\n#### [为什么建议 Fragment 包裹元素？它的简写是什么？](https://github.com/haizlin/fe-interview/issues/864)\n\n#### [你有用过 React.Fragment 吗？说说它有什么用途？](https://github.com/haizlin/fe-interview/issues/863)\n\n#### [有用过 React 的 Fragment 吗？它的运用场景是什么？](https://github.com/haizlin/fe-interview/issues/673)\n\n#### [为什么标签里的 for 要写成 htmlFor 呢？](https://github.com/haizlin/fe-interview/issues/839)\n\n#### [在 React 中如何引入图片？哪种方式更好？](https://github.com/haizlin/fe-interview/issues/829)\n\n#### [怎么防止 HTML 被转义？](https://github.com/haizlin/fe-interview/issues/812)\n\n#### [怎样在 React 中使用 innerHTML？](https://github.com/haizlin/fe-interview/issues/692)\n\n#### [JSX 和 HTML 有什么区别？](https://github.com/haizlin/fe-interview/issues/661)\n\n#### [createElement 与 cloneElement 两者有什么区别？](https://github.com/haizlin/fe-interview/issues/620)\n",data={title:"React Syntax-JSX-语法",DateStarted:new Date(171288e7),tags:["React"],category:"Front-End Frameworks"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/react/component-basics/react-syntax-jsx-语法.md",rawData:void 0},html='<h1 id="react-syntax-jsx-语法">React Syntax-JSX-语法<a class="anchor" href="#react-syntax-jsx-语法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h3 id="jsx-rules--syntax">JSX Rules &#x26; Syntax<a class="anchor" href="#jsx-rules--syntax"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>JSX lets you put markup into JavaScript</li>\n</ul>\n<h4 id="fragment-包裹元素">Fragment 包裹元素<a class="anchor" href="#fragment-包裹元素"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<blockquote>\n<p>为一个组件添加多个元素,可以讲你的子组件列表添加到一个分组中(<code>&#x3C;>&#x3C;/></code>),并且不会再 DOM 增加额外节点</p>\n</blockquote>\n<ul>\n<li>component also can’t return multiple JSX tag</li>\n<li>You have to wrap them into a shared parent, like a <code>&#x3C;div>...&#x3C;/div></code> or an empty <code>&#x3C;>...&#x3C;/></code> wrapper</li>\n</ul>\n<h4 id="curly-braces">Curly braces<a class="anchor" href="#curly-braces"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>Curly braces let you “escape back” into JS so that you can embed some variable from your code and display it to the user\n<ul>\n<li>You can add any JavaScript expression (something that evaluates to a single value) inside <em>curly braces</em>.</li>\n<li>An <em>object property</em> with dot notation\n<ul>\n<li><code>&#x3C;h1>{user.name}&#x3C;/h1></code></li>\n</ul>\n</li>\n<li>A <em>template literal</em>\n<ul>\n<li><code>return &#x3C;h1>{</code>Cool ${title}<code>}&#x3C;/h1>;</code></li>\n</ul>\n</li>\n<li>The <em>returned value of a function</em>\n<ul>\n<li><code>return &#x3C;h1>{createTitle(title)}&#x3C;/h1>;</code></li>\n</ul>\n</li>\n<li><em>ternary operators</em>\n<ul>\n<li><code>return &#x3C;h1>{title ? title : \'Default Title\'}&#x3C;/h1>;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id="conditional-rendering">Conditional Rendering<a class="anchor" href="#conditional-rendering"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>Case-1-<code>if...else</code></li>\n<li>Case-2-<code>test? a:b</code></li>\n<li>Case-3-<code>&#x26;&#x26;</code></li>\n<li>📌<a href="DB-React-Components/Conditional">Conditional</a></li>\n</ul>\n<h4 id="render-lists">Render Lists<a class="anchor" href="#render-lists"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><code>.map()</code> method</li>\n<li><code>.filter()</code>\n<ul>\n<li>📌<a href="DB-React-Components/FilterList">FilterList</a></li>\n<li>📌<a href="DB-React-Components/ProductTableApp">ProductTableApp</a></li>\n</ul>\n</li>\n<li><code>key</code>\n<ul>\n<li><code>&#x3C;li></code> has a <code>key</code> attribute. For each item in a list, you should pass a string or a number that uniquely identifies that item among its siblings.</li>\n<li>📌<a href="DB-React-Components/Lists">Lists</a></li>\n</ul>\n</li>\n</ul>\n<h2 id="questiosn">Questiosn<a class="anchor" href="#questiosn"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h4 id="react-必须使用-jsx-吗"><a href="https://github.com/haizlin/fe-interview/issues/886">React 必须使用 JSX 吗？</a><a class="anchor" href="#react-必须使用-jsx-吗"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-jsx-中如何写注释"><a href="https://github.com/haizlin/fe-interview/issues/867">在 JSX 中如何写注释？</a><a class="anchor" href="#在-jsx-中如何写注释"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="react-的书写规范有哪些"><a href="https://github.com/haizlin/fe-interview/issues/660">React 的书写规范有哪些？</a><a class="anchor" href="#react-的书写规范有哪些"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-react-中你有经常使用常量吗"><a href="https://github.com/haizlin/fe-interview/issues/925">在 React 中你有经常使用常量吗？</a><a class="anchor" href="#在-react-中你有经常使用常量吗"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="写个例子说明什么是-jsx-的内联条件渲染"><a href="https://github.com/haizlin/fe-interview/issues/877">写个例子说明什么是 JSX 的内联条件渲染</a><a class="anchor" href="#写个例子说明什么是-jsx-的内联条件渲染"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="怎样有条件地渲染组件"><a href="https://github.com/haizlin/fe-interview/issues/868">怎样有条件地渲染组件？</a><a class="anchor" href="#怎样有条件地渲染组件"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-react-中什么时候使用箭头函数更方便呢"><a href="https://github.com/haizlin/fe-interview/issues/872">在 React 中什么时候使用箭头函数更方便呢？</a><a class="anchor" href="#在-react-中什么时候使用箭头函数更方便呢"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="写例子说明-react-如何在-jsx-中实现-for-循环"><a href="https://github.com/haizlin/fe-interview/issues/865">写例子说明 React 如何在 JSX 中实现 for 循环</a><a class="anchor" href="#写例子说明-react-如何在-jsx-中实现-for-循环"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="es6-的语法在-react-中有哪些应用"><a href="https://github.com/haizlin/fe-interview/issues/826">ES6 的语法’…’在 React 中有哪些应用？</a><a class="anchor" href="#es6-的语法在-react-中有哪些应用"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-react-中遍历的方法有哪些它们有什么区别呢"><a href="https://github.com/haizlin/fe-interview/issues/679">在 React 中遍历的方法有哪些？它们有什么区别呢？</a><a class="anchor" href="#在-react-中遍历的方法有哪些它们有什么区别呢"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="propschildrenmap-和-js-的-map-有什么区别为什么优先选择-react-的"><a href="https://github.com/haizlin/fe-interview/issues/677">props.children.map 和 js 的 map 有什么区别？为什么优先选择 React 的？</a><a class="anchor" href="#propschildrenmap-和-js-的-map-有什么区别为什么优先选择-react-的"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="写-react-你是用-es6-还是-es5-的语法有什么区别"><a href="https://github.com/haizlin/fe-interview/issues/625">写 React 你是用 es6 还是 es5 的语法？有什么区别？</a><a class="anchor" href="#写-react-你是用-es6-还是-es5-的语法有什么区别"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-react-中我们怎么做静态类型检测都有哪些方法可以做到"><a href="https://github.com/haizlin/fe-interview/issues/810">在 React 中我们怎么做静态类型检测？都有哪些方法可以做到？</a><a class="anchor" href="#在-react-中我们怎么做静态类型检测都有哪些方法可以做到"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="为什么建议-fragment-包裹元素它的简写是什么"><a href="https://github.com/haizlin/fe-interview/issues/864">为什么建议 Fragment 包裹元素？它的简写是什么？</a><a class="anchor" href="#为什么建议-fragment-包裹元素它的简写是什么"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="你有用过-reactfragment-吗说说它有什么用途"><a href="https://github.com/haizlin/fe-interview/issues/863">你有用过 React.Fragment 吗？说说它有什么用途？</a><a class="anchor" href="#你有用过-reactfragment-吗说说它有什么用途"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="有用过-react-的-fragment-吗它的运用场景是什么"><a href="https://github.com/haizlin/fe-interview/issues/673">有用过 React 的 Fragment 吗？它的运用场景是什么？</a><a class="anchor" href="#有用过-react-的-fragment-吗它的运用场景是什么"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="为什么标签里的-for-要写成-htmlfor-呢"><a href="https://github.com/haizlin/fe-interview/issues/839">为什么标签里的 for 要写成 htmlFor 呢？</a><a class="anchor" href="#为什么标签里的-for-要写成-htmlfor-呢"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-react-中如何引入图片哪种方式更好"><a href="https://github.com/haizlin/fe-interview/issues/829">在 React 中如何引入图片？哪种方式更好？</a><a class="anchor" href="#在-react-中如何引入图片哪种方式更好"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="怎么防止-html-被转义"><a href="https://github.com/haizlin/fe-interview/issues/812">怎么防止 HTML 被转义？</a><a class="anchor" href="#怎么防止-html-被转义"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="怎样在-react-中使用-innerhtml"><a href="https://github.com/haizlin/fe-interview/issues/692">怎样在 React 中使用 innerHTML？</a><a class="anchor" href="#怎样在-react-中使用-innerhtml"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="jsx-和-html-有什么区别"><a href="https://github.com/haizlin/fe-interview/issues/661">JSX 和 HTML 有什么区别？</a><a class="anchor" href="#jsx-和-html-有什么区别"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="createelement-与-cloneelement-两者有什么区别"><a href="https://github.com/haizlin/fe-interview/issues/620">createElement 与 cloneElement 两者有什么区别？</a><a class="anchor" href="#createelement-与-cloneelement-两者有什么区别"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>',frontmatter={aliases:["React Syntax-JSX-语法"],title:"React Syntax-JSX-语法",topic:["Component-Basics"],type:"D",tags:["React"],DateStarted:"2024-04-12T00:00:00.000Z",DateModified:"2024-06-11T00:00:00.000Z",Datereviewed:"2024-04-12T00:00:00.000Z",reviewed:1,difficulty:null,status:null,comment:null,"linter-yaml-title-alias":"React Syntax-JSX-语法",category:"Front-End Frameworks",minutes:2,words:468},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/react/component-basics/react-syntax-jsx-语法.md",url=void 0;function rawContent(){return"\n# React Syntax-JSX-语法\n\n### JSX Rules & Syntax\n\n- JSX lets you put markup into JavaScript\n\n#### Fragment 包裹元素\n\n> 为一个组件添加多个元素,可以讲你的子组件列表添加到一个分组中(`<></>`),并且不会再 DOM 增加额外节点\n\n- component also can't return multiple JSX tag\n- You have to wrap them into a shared parent, like a `<div>...</div>` or an empty `<>...</>` wrapper\n\n#### Curly braces\n\n- Curly braces let you “escape back” into JS so that you can embed some variable from your code and display it to the user\n  - You can add any JavaScript expression (something that evaluates to a single value) inside _curly braces_.\n  - An _object property_ with dot notation\n    - `<h1>{user.name}</h1>`\n  - A _template literal_\n    - `return <h1>{`Cool ${title}`}</h1>;`\n  - The _returned value of a function_\n    - `return <h1>{createTitle(title)}</h1>;`\n  - _ternary operators_\n    - `return <h1>{title ? title : 'Default Title'}</h1>;`\n\n#### Conditional Rendering\n\n- Case-1-`if...else`\n- Case-2-`test? a:b`\n- Case-3-`&&`\n- 📌[Conditional](DB-React-Components/Conditional)\n\n#### Render Lists\n\n- `.map()` method\n- `.filter()`\n  - 📌[FilterList](DB-React-Components/FilterList)\n  - 📌[ProductTableApp](DB-React-Components/ProductTableApp)\n- `key`\n  - `<li>` has a `key` attribute. For each item in a list, you should pass a string or a number that uniquely identifies that item among its siblings.\n  - 📌[Lists](DB-React-Components/Lists)\n\n## Questiosn\n\n#### [React 必须使用 JSX 吗？](https://github.com/haizlin/fe-interview/issues/886)\n\n#### [在 JSX 中如何写注释？](https://github.com/haizlin/fe-interview/issues/867)\n\n#### [React 的书写规范有哪些？](https://github.com/haizlin/fe-interview/issues/660)\n\n#### [在 React 中你有经常使用常量吗？](https://github.com/haizlin/fe-interview/issues/925)\n\n#### [写个例子说明什么是 JSX 的内联条件渲染](https://github.com/haizlin/fe-interview/issues/877)\n\n#### [怎样有条件地渲染组件？](https://github.com/haizlin/fe-interview/issues/868)\n\n#### [在 React 中什么时候使用箭头函数更方便呢？](https://github.com/haizlin/fe-interview/issues/872)\n\n#### [写例子说明 React 如何在 JSX 中实现 for 循环](https://github.com/haizlin/fe-interview/issues/865)\n\n#### [ES6 的语法'...'在 React 中有哪些应用？](https://github.com/haizlin/fe-interview/issues/826)\n\n#### [在 React 中遍历的方法有哪些？它们有什么区别呢？](https://github.com/haizlin/fe-interview/issues/679)\n\n#### [props.children.map 和 js 的 map 有什么区别？为什么优先选择 React 的？](https://github.com/haizlin/fe-interview/issues/677)\n\n#### [写 React 你是用 es6 还是 es5 的语法？有什么区别？](https://github.com/haizlin/fe-interview/issues/625)\n\n#### [在 React 中我们怎么做静态类型检测？都有哪些方法可以做到？](https://github.com/haizlin/fe-interview/issues/810)\n\n#### [为什么建议 Fragment 包裹元素？它的简写是什么？](https://github.com/haizlin/fe-interview/issues/864)\n\n#### [你有用过 React.Fragment 吗？说说它有什么用途？](https://github.com/haizlin/fe-interview/issues/863)\n\n#### [有用过 React 的 Fragment 吗？它的运用场景是什么？](https://github.com/haizlin/fe-interview/issues/673)\n\n#### [为什么标签里的 for 要写成 htmlFor 呢？](https://github.com/haizlin/fe-interview/issues/839)\n\n#### [在 React 中如何引入图片？哪种方式更好？](https://github.com/haizlin/fe-interview/issues/829)\n\n#### [怎么防止 HTML 被转义？](https://github.com/haizlin/fe-interview/issues/812)\n\n#### [怎样在 React 中使用 innerHTML？](https://github.com/haizlin/fe-interview/issues/692)\n\n#### [JSX 和 HTML 有什么区别？](https://github.com/haizlin/fe-interview/issues/661)\n\n#### [createElement 与 cloneElement 两者有什么区别？](https://github.com/haizlin/fe-interview/issues/620)\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"react-syntax-jsx-语法",text:"React Syntax-JSX-语法#"},{depth:3,slug:"jsx-rules--syntax",text:"JSX Rules & Syntax#"},{depth:4,slug:"fragment-包裹元素",text:"Fragment 包裹元素#"},{depth:4,slug:"curly-braces",text:"Curly braces#"},{depth:4,slug:"conditional-rendering",text:"Conditional Rendering#"},{depth:4,slug:"render-lists",text:"Render Lists#"},{depth:2,slug:"questiosn",text:"Questiosn#"},{depth:4,slug:"react-必须使用-jsx-吗",text:"React 必须使用 JSX 吗？#"},{depth:4,slug:"在-jsx-中如何写注释",text:"在 JSX 中如何写注释？#"},{depth:4,slug:"react-的书写规范有哪些",text:"React 的书写规范有哪些？#"},{depth:4,slug:"在-react-中你有经常使用常量吗",text:"在 React 中你有经常使用常量吗？#"},{depth:4,slug:"写个例子说明什么是-jsx-的内联条件渲染",text:"写个例子说明什么是 JSX 的内联条件渲染#"},{depth:4,slug:"怎样有条件地渲染组件",text:"怎样有条件地渲染组件？#"},{depth:4,slug:"在-react-中什么时候使用箭头函数更方便呢",text:"在 React 中什么时候使用箭头函数更方便呢？#"},{depth:4,slug:"写例子说明-react-如何在-jsx-中实现-for-循环",text:"写例子说明 React 如何在 JSX 中实现 for 循环#"},{depth:4,slug:"es6-的语法在-react-中有哪些应用",text:"ES6 的语法’…’在 React 中有哪些应用？#"},{depth:4,slug:"在-react-中遍历的方法有哪些它们有什么区别呢",text:"在 React 中遍历的方法有哪些？它们有什么区别呢？#"},{depth:4,slug:"propschildrenmap-和-js-的-map-有什么区别为什么优先选择-react-的",text:"props.children.map 和 js 的 map 有什么区别？为什么优先选择 React 的？#"},{depth:4,slug:"写-react-你是用-es6-还是-es5-的语法有什么区别",text:"写 React 你是用 es6 还是 es5 的语法？有什么区别？#"},{depth:4,slug:"在-react-中我们怎么做静态类型检测都有哪些方法可以做到",text:"在 React 中我们怎么做静态类型检测？都有哪些方法可以做到？#"},{depth:4,slug:"为什么建议-fragment-包裹元素它的简写是什么",text:"为什么建议 Fragment 包裹元素？它的简写是什么？#"},{depth:4,slug:"你有用过-reactfragment-吗说说它有什么用途",text:"你有用过 React.Fragment 吗？说说它有什么用途？#"},{depth:4,slug:"有用过-react-的-fragment-吗它的运用场景是什么",text:"有用过 React 的 Fragment 吗？它的运用场景是什么？#"},{depth:4,slug:"为什么标签里的-for-要写成-htmlfor-呢",text:"为什么标签里的 for 要写成 htmlFor 呢？#"},{depth:4,slug:"在-react-中如何引入图片哪种方式更好",text:"在 React 中如何引入图片？哪种方式更好？#"},{depth:4,slug:"怎么防止-html-被转义",text:"怎么防止 HTML 被转义？#"},{depth:4,slug:"怎样在-react-中使用-innerhtml",text:"怎样在 React 中使用 innerHTML？#"},{depth:4,slug:"jsx-和-html-有什么区别",text:"JSX 和 HTML 有什么区别？#"},{depth:4,slug:"createelement-与-cloneelement-两者有什么区别",text:"createElement 与 cloneElement 两者有什么区别？#"}]}const Content=createComponent(((e,t,n)=>{const{layout:a,...i}=frontmatter;return i.file=file,i.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),reactSyntaxJsx___=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,reactSyntaxJsx___,slug};