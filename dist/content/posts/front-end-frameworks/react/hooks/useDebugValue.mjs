import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="front-end-frameworks/react/hooks/useDebugValue.md",collection="posts",slug="front-end-frameworks/react/hooks/usedebugvalue",body="# useDebugValue\nlets you add a label to a custom Hook in [React DevTools.](https://react.dev/learn/react-developer-tools)\nCall `useDebugValue` at the top level of your [custom Hook](https://react.dev/learn/reusing-logic-with-custom-hooks) to display a readable debug value for [React DevTools.](https://react.dev/learn/react-developer-tools)\nThis gives components calling `useOnlineStatus` a label like `OnlineStatus: \"Online\"` when you inspect them:\n```jsx\nimport { useDebugValue } from 'react';  \nfunction useOnlineStatus() {  \n\t// ...  \n\tuseDebugValue(isOnline ? 'Online' : 'Offline');  \n\t// ...  \n}\n```",data={title:"useDebugValue",DateStarted:new Date(1718496e6),draft:!0,tags:["React"],category:"Front-End Frameworks"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/react/hooks/useDebugValue.md",rawData:void 0},html='<h1 id="usedebugvalue">useDebugValue<a class="anchor" href="#usedebugvalue"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<p>lets you add a label to a custom Hook in <a href="https://react.dev/learn/react-developer-tools">React DevTools.</a>\nCall <code>useDebugValue</code> at the top level of your <a href="https://react.dev/learn/reusing-logic-with-custom-hooks">custom Hook</a> to display a readable debug value for <a href="https://react.dev/learn/react-developer-tools">React DevTools.</a>\nThis gives components calling <code>useOnlineStatus</code> a label like <code>OnlineStatus: "Online"</code> when you inspect them:</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">import</span><span style="color:#E1E4E8"> { useDebugValue } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> \'react\'</span><span style="color:#E1E4E8">;  </span></span>\n<span class="line"><span style="color:#F97583">function</span><span style="color:#B392F0"> useOnlineStatus</span><span style="color:#E1E4E8">() {  </span></span>\n<span class="line"><span style="color:#6A737D">\t// ...  </span></span>\n<span class="line"><span style="color:#B392F0">\tuseDebugValue</span><span style="color:#E1E4E8">(isOnline </span><span style="color:#F97583">?</span><span style="color:#9ECBFF"> \'Online\'</span><span style="color:#F97583"> :</span><span style="color:#9ECBFF"> \'Offline\'</span><span style="color:#E1E4E8">);  </span></span>\n<span class="line"><span style="color:#6A737D">\t// ...  </span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"></span></code></pre>',frontmatter={title:"useDebugValue",topic:null,type:"D",tags:["React"],category:"Front-End Frameworks",DateStarted:"2024-06-16T00:00:00.000Z",DateModified:"2024-06-16T00:00:00.000Z",Datereviewed:null,reviewed:null,difficulty:null,status:null,comment:null,draft:!0,minutes:1,words:63},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/react/hooks/useDebugValue.md",url=void 0;function rawContent(){return"# useDebugValue\nlets you add a label to a custom Hook in [React DevTools.](https://react.dev/learn/react-developer-tools)\nCall `useDebugValue` at the top level of your [custom Hook](https://react.dev/learn/reusing-logic-with-custom-hooks) to display a readable debug value for [React DevTools.](https://react.dev/learn/react-developer-tools)\nThis gives components calling `useOnlineStatus` a label like `OnlineStatus: \"Online\"` when you inspect them:\n```jsx\nimport { useDebugValue } from 'react';  \nfunction useOnlineStatus() {  \n\t// ...  \n\tuseDebugValue(isOnline ? 'Online' : 'Offline');  \n\t// ...  \n}\n```"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"usedebugvalue",text:"useDebugValue#"}]}const Content=createComponent(((e,t,n)=>{const{layout:a,...o}=frontmatter;return o.file=file,o.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),useDebugValue=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,slug,useDebugValue};