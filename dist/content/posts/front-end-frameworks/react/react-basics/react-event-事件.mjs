import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../../chunks/1726300354279/astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const id="front-end-frameworks/react/react-basics/react-event-事件.md",collection="posts",slug="front-end-frameworks/react/react-basics/react-event-事件",body="\n# React Event-事件\n\n> [Reacting to Input with State • React](https://beta.reactjs.org/learn/reacting-to-input-with-state)\n\n## Steps\n\n- _Identify_ your component's different visual states\n- _Determine_ what triggers those state changes (Human/ computer input)\n- _Represent_ the state in memory using `useState`\n- _Remove_ any non-essential state variables\n- _Connect_ the event handlers to set the state\n\n### `onClick={handleClick}`\n\n- 📌[Click](DB-React-Components/Click)\n- 📌[UpdateClick](DB-React-Components/UpdateClick)\n- 📌[RemoveBg](DB-React-Components/RemoveBg)\n- 📌[Gallery](DB-React-Components/Gallery)\n  - Store Boolean as state\n  - Conditional rendering\n  - `handleNextClick(){}`\n  - `handleMoreClick(){}`\n\n### `onSubmit` (Form Handling)\n\n- 📌[Quiz](DB-React-Components/Quiz)\n  - `async function`\n    - `try {await...} catch (err) {...}`\n  - `new Promise((resolve, reject) =>{ })`\n    - `setTimeout()`\n    - `new Error()`\n- 📌[EditProfile](DB-React-Components/EditProfile)\n\n### `onChange` (input text & checkbox)\n\n- `onChange={(e) => onFilterTextChange(e.target.value)}`\n- `onChange={(e) => onInStockOnlyChange(e.target.checked)}`\n- 🏷️Table\n  - 📌[ProductTableApp](DB-React-Components/ProductTableApp)\n  - 📌[FilterList](DB-React-Components/FilterList)\n- 📌[MailSelect](DB-React-Components/MailSelect)\n\n### `onFocus` & `onPointerMove`\n\n- 📌[MailHighlight](DB-React-Components/MailHighlight) (Highlight & Star)\n\n## Questions\n\n#### React 事件绑定原理\n\n- [深入理解 React：事件机制原理](https://link.segmentfault.com/?enc=YWEtw47CvOdPRPRJCJ0lxA%3D%3D.CuQXmGFuL7V69GLgnC6fFFMLm%2Fcpx6Mo5oQ0kdkOWgh4Za%2BUqvZdkoW7IoaLDTqaJtyqsYD9QGfnqxGRrf0qQA%3D%3D)\n\n#### React 组件中怎么做事件代理？它的原理是什么？\n\n#### [`<div onClick={handlerClick}>单击</div>`和`<div onClick={handlerClick(1)}>单击</div>`有什么区别？](https://github.com/haizlin/fe-interview/issues/830)\n\njsx 事件 = 函数，会调用函数并把函数的返回值记录，在每次 render 时调用  \n因此，handleClick 会随事件触发调用，handleClick() 只会调用一次\n\n#### [在 React 中什么是合成事件？有什么用？](https://github.com/haizlin/fe-interview/issues/713)\n\n#### [举例说明如何在 React 创建一个事件](https://github.com/haizlin/fe-interview/issues/850)\n\n#### [怎样将事件传递给子组件？](https://github.com/haizlin/fe-interview/issues/892)\n\n#### [在 React 中怎么将参数传递给事件？](https://github.com/haizlin/fe-interview/issues/876)\n\n#### [React 的事件和普通的 HTML 事件有什么不同？](https://github.com/haizlin/fe-interview/issues/875)\n\n#### [在 React 中怎么阻止事件的默认行为？](https://github.com/haizlin/fe-interview/issues/874)\n\n#### [组件卸载前，加在 DOM 元素的监听事件和定时器要不要手动清除？为什么？](https://github.com/haizlin/fe-interview/issues/840)\n\n#### [React 的触摸事件有哪几种？](https://github.com/haizlin/fe-interview/issues/834)\n\n#### [请描述下事件在 React 中的处理方式是什么？](https://github.com/haizlin/fe-interview/issues/662)\n",data={title:"React Event-事件",DateStarted:new Date(171288e7),tags:["React"],category:"Front-End Frameworks"},_internal={type:"content",filePath:"E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/react/react-basics/react-event-事件.md",rawData:void 0},html='<h1 id="react-event-事件">React Event-事件<a class="anchor" href="#react-event-事件"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<blockquote>\n<p><a href="https://beta.reactjs.org/learn/reacting-to-input-with-state">Reacting to Input with State • React</a></p>\n</blockquote>\n<h2 id="steps">Steps<a class="anchor" href="#steps"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><em>Identify</em> your component’s different visual states</li>\n<li><em>Determine</em> what triggers those state changes (Human/ computer input)</li>\n<li><em>Represent</em> the state in memory using <code>useState</code></li>\n<li><em>Remove</em> any non-essential state variables</li>\n<li><em>Connect</em> the event handlers to set the state</li>\n</ul>\n<h3 id="onclickhandleclick"><code>onClick={handleClick}</code><a class="anchor" href="#onclickhandleclick"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>📌<a href="DB-React-Components/Click">Click</a></li>\n<li>📌<a href="DB-React-Components/UpdateClick">UpdateClick</a></li>\n<li>📌<a href="DB-React-Components/RemoveBg">RemoveBg</a></li>\n<li>📌<a href="DB-React-Components/Gallery">Gallery</a>\n<ul>\n<li>Store Boolean as state</li>\n<li>Conditional rendering</li>\n<li><code>handleNextClick(){}</code></li>\n<li><code>handleMoreClick(){}</code></li>\n</ul>\n</li>\n</ul>\n<h3 id="onsubmit-form-handling"><code>onSubmit</code> (Form Handling)<a class="anchor" href="#onsubmit-form-handling"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>📌<a href="DB-React-Components/Quiz">Quiz</a>\n<ul>\n<li><code>async function</code>\n<ul>\n<li><code>try {await...} catch (err) {...}</code></li>\n</ul>\n</li>\n<li><code>new Promise((resolve, reject) =>{ })</code>\n<ul>\n<li><code>setTimeout()</code></li>\n<li><code>new Error()</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>📌<a href="DB-React-Components/EditProfile">EditProfile</a></li>\n</ul>\n<h3 id="onchange-input-text--checkbox"><code>onChange</code> (input text &#x26; checkbox)<a class="anchor" href="#onchange-input-text--checkbox"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>onChange={(e) => onFilterTextChange(e.target.value)}</code></li>\n<li><code>onChange={(e) => onInStockOnlyChange(e.target.checked)}</code></li>\n<li>🏷️Table\n<ul>\n<li>📌<a href="DB-React-Components/ProductTableApp">ProductTableApp</a></li>\n<li>📌<a href="DB-React-Components/FilterList">FilterList</a></li>\n</ul>\n</li>\n<li>📌<a href="DB-React-Components/MailSelect">MailSelect</a></li>\n</ul>\n<h3 id="onfocus--onpointermove"><code>onFocus</code> &#x26; <code>onPointerMove</code><a class="anchor" href="#onfocus--onpointermove"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>📌<a href="DB-React-Components/MailHighlight">MailHighlight</a> (Highlight &#x26; Star)</li>\n</ul>\n<h2 id="questions">Questions<a class="anchor" href="#questions"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h4 id="react-事件绑定原理">React 事件绑定原理<a class="anchor" href="#react-事件绑定原理"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><a href="https://link.segmentfault.com/?enc=YWEtw47CvOdPRPRJCJ0lxA%3D%3D.CuQXmGFuL7V69GLgnC6fFFMLm%2Fcpx6Mo5oQ0kdkOWgh4Za%2BUqvZdkoW7IoaLDTqaJtyqsYD9QGfnqxGRrf0qQA%3D%3D">深入理解 React：事件机制原理</a></li>\n</ul>\n<h4 id="react-组件中怎么做事件代理它的原理是什么">React 组件中怎么做事件代理？它的原理是什么？<a class="anchor" href="#react-组件中怎么做事件代理它的原理是什么"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="div-onclickhandlerclick单击div和div-onclickhandlerclick1单击div有什么区别"><a href="https://github.com/haizlin/fe-interview/issues/830"><code>&#x3C;div onClick={handlerClick}>单击&#x3C;/div></code>和<code>&#x3C;div onClick={handlerClick(1)}>单击&#x3C;/div></code>有什么区别？</a><a class="anchor" href="#div-onclickhandlerclick单击div和div-onclickhandlerclick1单击div有什么区别"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<p>jsx 事件 = 函数，会调用函数并把函数的返回值记录，在每次 render 时调用<br>\n因此，handleClick 会随事件触发调用，handleClick() 只会调用一次</p>\n<h4 id="在-react-中什么是合成事件有什么用"><a href="https://github.com/haizlin/fe-interview/issues/713">在 React 中什么是合成事件？有什么用？</a><a class="anchor" href="#在-react-中什么是合成事件有什么用"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="举例说明如何在-react-创建一个事件"><a href="https://github.com/haizlin/fe-interview/issues/850">举例说明如何在 React 创建一个事件</a><a class="anchor" href="#举例说明如何在-react-创建一个事件"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="怎样将事件传递给子组件"><a href="https://github.com/haizlin/fe-interview/issues/892">怎样将事件传递给子组件？</a><a class="anchor" href="#怎样将事件传递给子组件"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-react-中怎么将参数传递给事件"><a href="https://github.com/haizlin/fe-interview/issues/876">在 React 中怎么将参数传递给事件？</a><a class="anchor" href="#在-react-中怎么将参数传递给事件"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="react-的事件和普通的-html-事件有什么不同"><a href="https://github.com/haizlin/fe-interview/issues/875">React 的事件和普通的 HTML 事件有什么不同？</a><a class="anchor" href="#react-的事件和普通的-html-事件有什么不同"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="在-react-中怎么阻止事件的默认行为"><a href="https://github.com/haizlin/fe-interview/issues/874">在 React 中怎么阻止事件的默认行为？</a><a class="anchor" href="#在-react-中怎么阻止事件的默认行为"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="组件卸载前加在-dom-元素的监听事件和定时器要不要手动清除为什么"><a href="https://github.com/haizlin/fe-interview/issues/840">组件卸载前，加在 DOM 元素的监听事件和定时器要不要手动清除？为什么？</a><a class="anchor" href="#组件卸载前加在-dom-元素的监听事件和定时器要不要手动清除为什么"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="react-的触摸事件有哪几种"><a href="https://github.com/haizlin/fe-interview/issues/834">React 的触摸事件有哪几种？</a><a class="anchor" href="#react-的触摸事件有哪几种"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="请描述下事件在-react-中的处理方式是什么"><a href="https://github.com/haizlin/fe-interview/issues/662">请描述下事件在 React 中的处理方式是什么？</a><a class="anchor" href="#请描述下事件在-react-中的处理方式是什么"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>',frontmatter={aliases:["React Event-事件"],title:"React Event-事件",topic:["Component-Basics"],type:"D",tags:["React"],DateStarted:"2024-04-12T00:00:00.000Z",DateModified:"2024-09-14T00:00:00.000Z",Datereviewed:"2024-04-12T00:00:00.000Z",reviewed:1,difficulty:null,status:null,comment:null,"linter-yaml-title-alias":"React Event-事件",category:"Front-End Frameworks",minutes:2,words:304},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/react/react-basics/react-event-事件.md",url=void 0;function rawContent(){return"\n# React Event-事件\n\n> [Reacting to Input with State • React](https://beta.reactjs.org/learn/reacting-to-input-with-state)\n\n## Steps\n\n- _Identify_ your component's different visual states\n- _Determine_ what triggers those state changes (Human/ computer input)\n- _Represent_ the state in memory using `useState`\n- _Remove_ any non-essential state variables\n- _Connect_ the event handlers to set the state\n\n### `onClick={handleClick}`\n\n- 📌[Click](DB-React-Components/Click)\n- 📌[UpdateClick](DB-React-Components/UpdateClick)\n- 📌[RemoveBg](DB-React-Components/RemoveBg)\n- 📌[Gallery](DB-React-Components/Gallery)\n  - Store Boolean as state\n  - Conditional rendering\n  - `handleNextClick(){}`\n  - `handleMoreClick(){}`\n\n### `onSubmit` (Form Handling)\n\n- 📌[Quiz](DB-React-Components/Quiz)\n  - `async function`\n    - `try {await...} catch (err) {...}`\n  - `new Promise((resolve, reject) =>{ })`\n    - `setTimeout()`\n    - `new Error()`\n- 📌[EditProfile](DB-React-Components/EditProfile)\n\n### `onChange` (input text & checkbox)\n\n- `onChange={(e) => onFilterTextChange(e.target.value)}`\n- `onChange={(e) => onInStockOnlyChange(e.target.checked)}`\n- 🏷️Table\n  - 📌[ProductTableApp](DB-React-Components/ProductTableApp)\n  - 📌[FilterList](DB-React-Components/FilterList)\n- 📌[MailSelect](DB-React-Components/MailSelect)\n\n### `onFocus` & `onPointerMove`\n\n- 📌[MailHighlight](DB-React-Components/MailHighlight) (Highlight & Star)\n\n## Questions\n\n#### React 事件绑定原理\n\n- [深入理解 React：事件机制原理](https://link.segmentfault.com/?enc=YWEtw47CvOdPRPRJCJ0lxA%3D%3D.CuQXmGFuL7V69GLgnC6fFFMLm%2Fcpx6Mo5oQ0kdkOWgh4Za%2BUqvZdkoW7IoaLDTqaJtyqsYD9QGfnqxGRrf0qQA%3D%3D)\n\n#### React 组件中怎么做事件代理？它的原理是什么？\n\n#### [`<div onClick={handlerClick}>单击</div>`和`<div onClick={handlerClick(1)}>单击</div>`有什么区别？](https://github.com/haizlin/fe-interview/issues/830)\n\njsx 事件 = 函数，会调用函数并把函数的返回值记录，在每次 render 时调用  \n因此，handleClick 会随事件触发调用，handleClick() 只会调用一次\n\n#### [在 React 中什么是合成事件？有什么用？](https://github.com/haizlin/fe-interview/issues/713)\n\n#### [举例说明如何在 React 创建一个事件](https://github.com/haizlin/fe-interview/issues/850)\n\n#### [怎样将事件传递给子组件？](https://github.com/haizlin/fe-interview/issues/892)\n\n#### [在 React 中怎么将参数传递给事件？](https://github.com/haizlin/fe-interview/issues/876)\n\n#### [React 的事件和普通的 HTML 事件有什么不同？](https://github.com/haizlin/fe-interview/issues/875)\n\n#### [在 React 中怎么阻止事件的默认行为？](https://github.com/haizlin/fe-interview/issues/874)\n\n#### [组件卸载前，加在 DOM 元素的监听事件和定时器要不要手动清除？为什么？](https://github.com/haizlin/fe-interview/issues/840)\n\n#### [React 的触摸事件有哪几种？](https://github.com/haizlin/fe-interview/issues/834)\n\n#### [请描述下事件在 React 中的处理方式是什么？](https://github.com/haizlin/fe-interview/issues/662)\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"react-event-事件",text:"React Event-事件#"},{depth:2,slug:"steps",text:"Steps#"},{depth:3,slug:"onclickhandleclick",text:"onClick={handleClick}#"},{depth:3,slug:"onsubmit-form-handling",text:"onSubmit (Form Handling)#"},{depth:3,slug:"onchange-input-text--checkbox",text:"onChange (input text & checkbox)#"},{depth:3,slug:"onfocus--onpointermove",text:"onFocus & onPointerMove#"},{depth:2,slug:"questions",text:"Questions#"},{depth:4,slug:"react-事件绑定原理",text:"React 事件绑定原理#"},{depth:4,slug:"react-组件中怎么做事件代理它的原理是什么",text:"React 组件中怎么做事件代理？它的原理是什么？#"},{depth:4,slug:"div-onclickhandlerclick单击div和div-onclickhandlerclick1单击div有什么区别",text:"<div onClick={handlerClick}>单击</div>和<div onClick={handlerClick(1)}>单击</div>有什么区别？#"},{depth:4,slug:"在-react-中什么是合成事件有什么用",text:"在 React 中什么是合成事件？有什么用？#"},{depth:4,slug:"举例说明如何在-react-创建一个事件",text:"举例说明如何在 React 创建一个事件#"},{depth:4,slug:"怎样将事件传递给子组件",text:"怎样将事件传递给子组件？#"},{depth:4,slug:"在-react-中怎么将参数传递给事件",text:"在 React 中怎么将参数传递给事件？#"},{depth:4,slug:"react-的事件和普通的-html-事件有什么不同",text:"React 的事件和普通的 HTML 事件有什么不同？#"},{depth:4,slug:"在-react-中怎么阻止事件的默认行为",text:"在 React 中怎么阻止事件的默认行为？#"},{depth:4,slug:"组件卸载前加在-dom-元素的监听事件和定时器要不要手动清除为什么",text:"组件卸载前，加在 DOM 元素的监听事件和定时器要不要手动清除？为什么？#"},{depth:4,slug:"react-的触摸事件有哪几种",text:"React 的触摸事件有哪几种？#"},{depth:4,slug:"请描述下事件在-react-中的处理方式是什么",text:"请描述下事件在 React 中的处理方式是什么？#"}]}const Content=createComponent(((e,n,t)=>{const{layout:a,...i}=frontmatter;return i.file=file,i.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`})),reactEvent___=Object.freeze(Object.defineProperty({__proto__:null,Content:Content,compiledContent:compiledContent,default:Content,file:file,frontmatter:frontmatter,getHeadings:getHeadings,rawContent:rawContent,url:url},Symbol.toStringTag,{value:"Module"}));export{_internal,body,collection,data,id,reactEvent___,slug};