import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="arraybuffer-缓冲">ArrayBuffer 缓冲<a class="anchor" href="#arraybuffer-缓冲"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<ul>\n<li>定义\n<ul>\n<li>是一块 <strong>allocated memory-预分配内存</strong></li>\n<li>是所有<strong>定型数组及视图</strong>引用的基本单位</li>\n</ul>\n</li>\n<li>变体\n<ul>\n<li><strong>SharedArrayBuffer</strong>\n<ul>\n<li>可以无须复制就在执行上下文间传递它</li>\n<li>参考 <a href="C27-Workers">C27-Workers</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ArrayBuffer() - 定义 - 一个 JavaScript 构造函数 - 功能 - 可用于<strong>在内存中分配特定数量的字节空间</strong> - 在内存中分配 16 字节 (Byte) ;;;<code>const buf = new ArrayBuffer(16)</code>\n\x3c!--SR:!2023-08-25,10,250!2023-08-22,7,250--\x3e\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span>- 获取一个变量的字节长度;;;`const buf = new ArrayBuffer(16)`</span></span>\n<span class="line"><span></span></span></code></pre>\n\x3c!--SR:!2023-08-25,10,250!2023-08-24,9,250--\x3e\n</li>\n<li>特点 - ArrayBuffer 一经创建就不能<strong>再调整大小</strong> - ArrayBuffer 用 <code>.slice()</code>;;;可将 ArrayBuffer 复制其全部或部分到一个新实例中</li>\n</ul>\n\x3c!--SR:!2023-08-25,10,250!2023-08-21,6,250--\x3e',frontmatter={Datereviewed:null,reviewed:null,difficulty:null,comment:null,aliases:["ArrayBuffer 缓冲"],title:"ArrayBuffer 缓冲",type:"D",DateStarted:"2023-08-09T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",status:["Snooze"],Up:[["Typed Array-定型数组"]],topic:["DS+"],category:"Programming",tags:["JavaScript"],draft:!0,"linter-yaml-title-alias":"ArrayBuffer 缓冲",minutes:1,words:153},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/ds-plus/arraybuffer-缓冲.md",url=void 0;function rawContent(){return"\n# ArrayBuffer 缓冲\n\n- 定义\n  - 是一块 **allocated memory-预分配内存**\n  - 是所有**定型数组及视图**引用的基本单位\n- 变体\n  - **SharedArrayBuffer**\n    - 可以无须复制就在执行上下文间传递它\n    - 参考 [C27-Workers](C27-Workers)\n- ArrayBuffer() - 定义 - 一个 JavaScript 构造函数 - 功能 - 可用于**在内存中分配特定数量的字节空间** - 在内存中分配 16 字节 (Byte) ;;;`const buf = new ArrayBuffer(16)`\n  \x3c!--SR:!2023-08-25,10,250!2023-08-22,7,250--\x3e\n      - 获取一个变量的字节长度;;;`const buf = new ArrayBuffer(16)`\n  \x3c!--SR:!2023-08-25,10,250!2023-08-24,9,250--\x3e\n- 特点 - ArrayBuffer 一经创建就不能**再调整大小** - ArrayBuffer 用 `.slice()`;;;可将 ArrayBuffer 复制其全部或部分到一个新实例中\n\x3c!--SR:!2023-08-25,10,250!2023-08-21,6,250--\x3e\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"arraybuffer-缓冲",text:"ArrayBuffer 缓冲#"}]}const Content=createComponent(((r,e,n)=>{const{layout:t,...a}=frontmatter;return a.file=file,a.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};