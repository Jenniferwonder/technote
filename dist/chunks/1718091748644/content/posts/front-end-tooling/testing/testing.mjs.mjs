import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="testing">Testing<a class="anchor" href="#testing"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="reference">Reference<a class="anchor" href="#reference"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><a href="https://github.com/vortesnail/blog/issues/16">如何使用 React Testing Library 和 Jest 测试 React 应用 · Issue #16 · vortesnail/blog · GitHub</a></li>\n<li><a href="https://www.youtube.com/watch?v=Jv2uxzhPFl4">Test-Driven Development // Fun TDD Introduction with JavaScript - YouTube</a></li>\n</ul>\n<h2 id="intro">Intro<a class="anchor" href="#intro"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="why-testing">Why Testing?<a class="anchor" href="#why-testing"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Discover defects or bugs before delivery to the client</li>\n<li>Guarantee the quality of the software you develop further by catching bugs before they find their way into a live application</li>\n<li>Reduce user complaints and save time and money</li>\n</ul>\n<h3 id="tdd-test-drivern-development-philosophy">TDD-Test Drivern Development Philosophy<a class="anchor" href="#tdd-test-drivern-development-philosophy"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/Pasted-image-20230308094955.png" alt=""></p>\n<ul>\n<li>Unit Test\n<ul>\n<li>Unit Test 单元测试 （代码帮你测试代码）</li>\n</ul>\n</li>\n<li>Integration Test</li>\n<li>End-To-End Test</li>\n<li>Joint Debugging 联调 (多人协作效率)</li>\n<li>Monitor 监控报警 （线上问题提前预知）</li>\n</ul>\n<h2 id="testing-tools">Testing Tools<a class="anchor" href="#testing-tools"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p><a href="jest-vitest-rtl.md">Jest, Vitest, RTL</a>\n<a href="Cypress">Cypress</a>\n<a href="Storybook/Storybook">Storybook</a>\nMocha</p>\n<h2 id="best-practices">Best Practices<a class="anchor" href="#best-practices"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>Avoid including implementation details.</li>\n<li>Final users will have no notion of React. Rather than dealing with instances of rendered React components, your tests should wok with actual DOM nodes.</li>\n<li>Resemble software usage</li>\n<li>Maintainability in the long run - as long as you’re not changing functionality any changes in the implementation of the component won’t break your tests and slow you and your team down</li>\n</ul>\n<h2 id="questions">Questions<a class="anchor" href="#questions"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h4 id="有用过-react-devtools-吗说说它的优缺点分别是什么"><a href="https://github.com/haizlin/fe-interview/issues/801">有用过 React Devtools 吗？说说它的优缺点分别是什么？</a><a class="anchor" href="#有用过-react-devtools-吗说说它的优缺点分别是什么"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h4 id="你有做过-react-的单元测试吗如果有用的是哪些工具怎么做的"><a href="https://github.com/haizlin/fe-interview/issues/714">你有做过 React 的单元测试吗？如果有，用的是哪些工具？怎么做的？</a><a class="anchor" href="#你有做过-react-的单元测试吗如果有用的是哪些工具怎么做的"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>',frontmatter={topic:null,category:"Front-End Tooling",Datereviewed:null,reviewed:null,difficulty:null,comment:null,aliases:["Testing"],type:"C",title:"Testing",tags:["Testing"],DateStarted:"2023-03-01T00:00:00.000Z",DateModified:"2024-06-11T00:00:00.000Z",status:null,"linter-yaml-title-alias":"Testing",draft:!0,minutes:1,words:220},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-tooling/testing/testing.md",url=void 0;function rawContent(){return"# Testing\n## Reference\n- [如何使用 React Testing Library 和 Jest 测试 React 应用 · Issue #16 · vortesnail/blog · GitHub](https://github.com/vortesnail/blog/issues/16)\n- [Test-Driven Development // Fun TDD Introduction with JavaScript - YouTube](https://www.youtube.com/watch?v=Jv2uxzhPFl4)\n## Intro\n### Why Testing?\n- Discover defects or bugs before delivery to the client\n- Guarantee the quality of the software you develop further by catching bugs before they find their way into a live application\n- Reduce user complaints and save time and money\n### TDD-Test Drivern Development Philosophy\n ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/Pasted-image-20230308094955.png)\n- Unit Test\n\t- Unit Test 单元测试 （代码帮你测试代码）\n- Integration Test\n- End-To-End Test\n- Joint Debugging 联调 (多人协作效率)\n- Monitor 监控报警 （线上问题提前预知）\n## Testing Tools\n [Jest, Vitest, RTL](jest-vitest-rtl.md)\n[Cypress](Cypress)\n[Storybook](Storybook/Storybook)\nMocha\n## Best Practices\n- Avoid including implementation details.\n- Final users will have no notion of React. Rather than dealing with instances of rendered React components, your tests should wok with actual DOM nodes.\n- Resemble software usage\n- Maintainability in the long run - as long as you're not changing functionality any changes in the implementation of the component won't break your tests and slow you and your team down\n## Questions\n#### [有用过 React Devtools 吗？说说它的优缺点分别是什么？](https://github.com/haizlin/fe-interview/issues/801)\n#### [你有做过 React 的单元测试吗？如果有，用的是哪些工具？怎么做的？](https://github.com/haizlin/fe-interview/issues/714)\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"testing",text:"Testing#"},{depth:2,slug:"reference",text:"Reference#"},{depth:2,slug:"intro",text:"Intro#"},{depth:3,slug:"why-testing",text:"Why Testing?#"},{depth:3,slug:"tdd-test-drivern-development-philosophy",text:"TDD-Test Drivern Development Philosophy#"},{depth:2,slug:"testing-tools",text:"Testing Tools#"},{depth:2,slug:"best-practices",text:"Best Practices#"},{depth:2,slug:"questions",text:"Questions#"},{depth:4,slug:"有用过-react-devtools-吗说说它的优缺点分别是什么",text:"有用过 React Devtools 吗？说说它的优缺点分别是什么？#"},{depth:4,slug:"你有做过-react-的单元测试吗如果有用的是哪些工具怎么做的",text:"你有做过 React 的单元测试吗？如果有，用的是哪些工具？怎么做的？#"}]}const Content=createComponent(((e,t,n)=>{const{layout:i,...s}=frontmatter;return s.file=file,s.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};