import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="object-对象">Object-对象<a class="anchor" href="#object-对象"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h3 id="js-有哪些内置对象">js 有哪些内置对象？<a class="anchor" href="#js-有哪些内置对象"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>JavaScript 有许多内置对象，包括但不限于：</p>\n<ul>\n<li>基本对象： Object、Boolean、Symbol、Number、String</li>\n<li>符合数据结构：Array、Set、Map、WeakSet、WeakMap</li>\n<li>日期和时间对象：Date</li>\n<li>数学计算对象：Math</li>\n<li>正则表达式对象：RegExp</li>\n<li>函数对象：Function</li>\n<li>错误对象：Error、TypeError、RangeError 等</li>\n<li>其他对象：Global、JSON 等</li>\n</ul>\n<h3 id="object-creation-创建对象"><a href="object-creation-%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1">Object Creation-创建对象</a><a class="anchor" href="#object-creation-创建对象"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><a href="object-literal-%E5%AF%B9%E8%B1%A1%E5%AD%97%E9%9D%A2%E9%87%8F%E8%A1%A8%E7%A4%BA%E6%B3%95">Object literal-对象字面量表示法</a></li>\n<li><a href="factory-function-%E5%B7%A5%E5%8E%82%E5%87%BD%E6%95%B0%E6%A8%A1%E5%BC%8F">Factory Function-工厂模式</a></li>\n<li><a href="constructor-function-%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%A8%A1%E5%BC%8F">Constructor Function-构造函数模式</a>\n<ul>\n<li><a href="use-new-operator-%E4%BD%BF%E7%94%A8-new-%E6%93%8D%E4%BD%9C%E7%AC%A6">Use <code>new</code> Operator-使用 new 操作符</a></li>\n<li><a href="object-types-instanceof-%E6%A0%87%E8%AF%86%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B">Object Types (instanceof)-标识对象类型</a></li>\n</ul>\n</li>\n<li><a href="prototype-pattern-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F">Prototype Pattern-原型模式</a></li>\n</ul>\n<h3 id="object-property--value-对象属性与值"><a href="object-property-&#x26;-value-%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E4%B8%8E%E5%80%BC">Object Property &#x26; Value-对象属性与值</a><a class="anchor" href="#object-property--value-对象属性与值"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="object-destructuring-对象解构"><a href="object-destructuring-%E5%AF%B9%E8%B1%A1%E8%A7%A3%E6%9E%84">Object Destructuring-对象解构</a><a class="anchor" href="#object-destructuring-对象解构"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="object-iteration-对象迭代"><a href="object-iteration-%E5%AF%B9%E8%B1%A1%E8%BF%AD%E4%BB%A3">Object Iteration-对象迭代</a><a class="anchor" href="#object-iteration-对象迭代"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="assign-merge-objects-es6-对象合并"><a href="assign-merge-objects-%E5%AF%B9%E8%B1%A1%E5%90%88%E5%B9%B6">Assign Merge Objects-ES6 对象合并</a><a class="anchor" href="#assign-merge-objects-es6-对象合并"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="identify-object-equality-对象全等判定"><a href="identify-object-equality-%E5%AF%B9%E8%B1%A1%E5%85%A8%E7%AD%89%E5%88%A4%E5%AE%9A">Identify Object Equality-对象全等判定</a><a class="anchor" href="#identify-object-equality-对象全等判定"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="convert-array-or-object-to-string-数组对象转字符串方法"><a href="convert-array-or-object-to-string-%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95">Convert Array or Object to String-数组对象转字符串方法</a><a class="anchor" href="#convert-array-or-object-to-string-数组对象转字符串方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="oop"><a href="../../paradigm/oop">OOP</a><a class="anchor" href="#oop"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><a href="prototype-chain-inheritance-%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF">Prototype Chain Inheritance-原型链继承</a></li>\n</ul>\n<h2 id="reference">Reference<a class="anchor" href="#reference"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects">Working with objects - JavaScript | MDN</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects">Introducing JavaScript objects - Learn web development | MDN</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects">Standard built-in objects - JavaScript | MDN</a></li>\n</ul>',frontmatter={draft:!1,aliases:["Object-对象"],title:"Object-对象",tags:["JavaScript"],topic:["Objects"],type:"D",DateStarted:"2022-12-01T00:00:00.000Z",DateModified:"2024-06-11T00:00:00.000Z",Datereviewed:"2024-01-29T00:00:00.000Z",reviewed:3,difficulty:"Good",status:["ToUse"],comment:null,"linter-yaml-title-alias":"Object-对象",category:"Programming",minutes:1,words:214},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/object/object.md",url=void 0;function rawContent(){return"\n# Object-对象\n\n### js 有哪些内置对象？\n\nJavaScript 有许多内置对象，包括但不限于：\n\n- 基本对象： Object、Boolean、Symbol、Number、String\n- 符合数据结构：Array、Set、Map、WeakSet、WeakMap\n- 日期和时间对象：Date\n- 数学计算对象：Math\n- 正则表达式对象：RegExp\n- 函数对象：Function\n- 错误对象：Error、TypeError、RangeError 等\n- 其他对象：Global、JSON 等\n\n### [Object Creation-创建对象](object-creation-创建对象)\n\n- [Object literal-对象字面量表示法](object-literal-对象字面量表示法)\n- [Factory Function-工厂模式](factory-function-工厂函数模式)\n- [Constructor Function-构造函数模式](constructor-function-构造函数模式)\n  - [Use `new` Operator-使用 new 操作符](use-new-operator-使用-new-操作符)\n  - [Object Types (instanceof)-标识对象类型](object-types-instanceof-标识对象类型)\n- [Prototype Pattern-原型模式](prototype-pattern-原型模式)\n\n### [Object Property & Value-对象属性与值](object-property-&-value-对象属性与值)\n\n### [Object Destructuring-对象解构](object-destructuring-对象解构)\n\n### [Object Iteration-对象迭代](object-iteration-对象迭代)\n\n### [Assign Merge Objects-ES6 对象合并](assign-merge-objects-对象合并)\n\n### [Identify Object Equality-对象全等判定](identify-object-equality-对象全等判定)\n\n### [Convert Array or Object to String-数组对象转字符串方法](convert-array-or-object-to-string-数组对象转字符串方法)\n\n### [OOP](../../paradigm/oop)\n\n- [Prototype Chain Inheritance-原型链继承](prototype-chain-inheritance-原型链继承)\n\n## Reference\n\n- [Working with objects - JavaScript | MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects)\n- [Introducing JavaScript objects - Learn web development | MDN](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects)\n- [Standard built-in objects - JavaScript | MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects)\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"object-对象",text:"Object-对象#"},{depth:3,slug:"js-有哪些内置对象",text:"js 有哪些内置对象？#"},{depth:3,slug:"object-creation-创建对象",text:"Object Creation-创建对象#"},{depth:3,slug:"object-property--value-对象属性与值",text:"Object Property & Value-对象属性与值#"},{depth:3,slug:"object-destructuring-对象解构",text:"Object Destructuring-对象解构#"},{depth:3,slug:"object-iteration-对象迭代",text:"Object Iteration-对象迭代#"},{depth:3,slug:"assign-merge-objects-es6-对象合并",text:"Assign Merge Objects-ES6 对象合并#"},{depth:3,slug:"identify-object-equality-对象全等判定",text:"Identify Object Equality-对象全等判定#"},{depth:3,slug:"convert-array-or-object-to-string-数组对象转字符串方法",text:"Convert Array or Object to String-数组对象转字符串方法#"},{depth:3,slug:"oop",text:"OOP#"},{depth:2,slug:"reference",text:"Reference#"}]}const Content=createComponent(((e,t,n)=>{const{layout:a,...r}=frontmatter;return r.file=file,r.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};