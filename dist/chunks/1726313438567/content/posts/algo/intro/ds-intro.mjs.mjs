import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="ds-intro">DS Intro<a class="anchor" href="#ds-intro"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="程序设计-数据结构算法">程序设计= <strong>数据结构+算法</strong> <a class="anchor" href="#程序设计-数据结构算法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="-重点">⭐ 重点<a class="anchor" href="#-重点"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="为什么需要">为什么需要<a class="anchor" href="#为什么需要"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="特性">特性<a class="anchor" href="#特性"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="案例">案例<a class="anchor" href="#案例"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="优劣">优劣<a class="anchor" href="#优劣"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="操作">操作<a class="anchor" href="#操作"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="应用">应用<a class="anchor" href="#应用"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h2 id="14-基本概念和术语-">1.4 　基本概念和术语 <img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693552954849.png" alt=""><a class="anchor" href="#14-基本概念和术语-"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="141-数据">1.4.1 　数据<a class="anchor" href="#141-数据"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>是描述客观事物的符号，是计算机中可以操作的对象，是能被计 算机识别，并输入给计算机处理的符号集合</li>\n</ul>\n<h3 id="142-数据元素">1.4.2 　数据元素<a class="anchor" href="#142-数据元素"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>是组成数据的、有一定意义的基本单位，在计算机中通常作 为整体处理。也被称为记录</li>\n</ul>\n<h3 id="143-数据项">1.4.3 　数据项<a class="anchor" href="#143-数据项"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>是数据不可分割的最小单位</li>\n</ul>\n<h3 id="144-数据对象">1.4.4 　数据对象<a class="anchor" href="#144-数据对象"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>是性质相同的数据元素的集合，是数据的子集</li>\n</ul>\n<h3 id="145-数据结构">1.4.5 　数据结构<a class="anchor" href="#145-数据结构"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>结构\n<ul>\n<li>关系</li>\n<li>是指各个组成部分相互搭配和排列的方式</li>\n</ul>\n</li>\n<li>数据结构：是<strong>相互之间存在一种或多种特定关系的数据元素的集合</strong></li>\n</ul>\n<h2 id="15-逻辑结构与物理结构">1.5 　逻辑结构与物理结构<a class="anchor" href="#15-逻辑结构与物理结构"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="151-逻辑结构">1.5.1 　逻辑结构<a class="anchor" href="#151-逻辑结构"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>集合结构 (散列结构, ==散列表==)\n<ul>\n<li>集合结构中的数据元素除了同属于一个集合外，它们之间没有其他关系</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693551791349.png" alt=""></li>\n<li>案例\n<ul>\n<li>题库</li>\n<li>商店商品</li>\n</ul>\n</li>\n<li>特性\n<ul>\n<li>集合里的元素类型不一定相同</li>\n<li>集合里的元素没有顺序</li>\n</ul>\n</li>\n<li>为什么需要散列表 c)</li>\n<li>散列表的读写操作 8)</li>\n<li>==集合==</li>\n<li>==映射==</li>\n<li>==BitMap==\n<ul>\n<li><strong><em>Bitmap 算法 (图算法)</em></strong> 3)</li>\n</ul>\n</li>\n<li><strong><em>哈希函数</em></strong> 8)</li>\n</ul>\n</li>\n<li>线性结构\n<ul>\n<li>线性结构中的数据元素之间是<strong>一对一</strong>的关系</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693551921768.png" alt=""></li>\n</ul>\n</li>\n<li>树形结构\n<ul>\n<li>树形结构中的数据元素之间存在一种<strong>一对多</strong>的层次关系</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693551970530.png" alt=""></li>\n</ul>\n</li>\n<li>图形结构\n<ul>\n<li>图形结构的数据元素是<strong>多对多</strong>的关系</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693552009255.png" alt=""></li>\n</ul>\n</li>\n</ul>\n<h3 id="152-物理结构">1.5.2 　物理结构<a class="anchor" href="#152-物理结构"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1693553718264image.png" alt=""> 顺序存储结构\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693553223233.png" alt=""></li>\n</ul>\n</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1693553831167image.png" alt="">链式存储结构\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693553231318.png" alt=""></li>\n</ul>\n</li>\n</ul>\n<h2 id="16-抽象数据类型">1.6 　抽象数据类型<a class="anchor" href="#16-抽象数据类型"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="161-数据类型"><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1693554002377image.png" alt="">1.6.1 　数据类型<a class="anchor" href="#161-数据类型"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>是指一组性质相同的值的集合及定义在此集合上的一些操作的总称</li>\n<li>按照值的不同进行划分的</li>\n</ul>\n<h3 id="162-抽象数据类型-adt">1.6.2 　抽象数据类型 (ADT)<a class="anchor" href="#162-抽象数据类型-adt"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>是指一个数学模型及定 义在该模型上的一组操作\n<ul>\n<li>“抽象”的意义在于数据类型的 数学抽象特性</li>\n<li>一个抽象数据类型定义了：一个数据对象、数据对象中各数据元素之间的关系及对数据元素的操作</li>\n</ul>\n</li>\n<li>体现了程序设计中问题分解、抽象和信息隐藏的特性</li>\n</ul>',frontmatter={Datereviewed:null,reviewed:null,difficulty:null,comment:null,aliases:["DS Intro"],draft:!0,title:"DS Intro",type:"D",topic:["Algo"],DateStarted:"2023-09-07T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",status:null,category:"Programming",tags:["Algo"],"linter-yaml-title-alias":"DS Intro",minutes:3,words:607},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/intro/ds-intro.md",url=void 0;function rawContent(){return"\n# DS Intro\n\n## 程序设计= **数据结构+算法** \n\n## ⭐ 重点\n\n### 为什么需要\n\n### 特性\n\n### 案例\n\n### 优劣\n\n### 操作\n\n### 应用\n\n## 1.4 　基本概念和术语 ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693552954849.png)\n\n### 1.4.1 　数据\n\n- 是描述客观事物的符号，是计算机中可以操作的对象，是能被计 算机识别，并输入给计算机处理的符号集合\n\n### 1.4.2 　数据元素\n\n- 是组成数据的、有一定意义的基本单位，在计算机中通常作 为整体处理。也被称为记录\n\n### 1.4.3 　数据项\n\n- 是数据不可分割的最小单位\n\n### 1.4.4 　数据对象\n\n- 是性质相同的数据元素的集合，是数据的子集\n\n### 1.4.5 　数据结构\n\n- 结构\n  - 关系\n  - 是指各个组成部分相互搭配和排列的方式\n- 数据结构：是**相互之间存在一种或多种特定关系的数据元素的集合**\n\n## 1.5 　逻辑结构与物理结构\n\n### 1.5.1 　逻辑结构\n\n- 集合结构 (散列结构, ==散列表==)\n  - 集合结构中的数据元素除了同属于一个集合外，它们之间没有其他关系\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693551791349.png)\n  - 案例\n    - 题库\n    - 商店商品\n  - 特性\n    - 集合里的元素类型不一定相同\n    - 集合里的元素没有顺序\n  - 为什么需要散列表 c)\n  - 散列表的读写操作 8)\n  - ==集合==\n  - ==映射==\n  - ==BitMap==\n    - **_Bitmap 算法 (图算法)_** 3)\n  - **_哈希函数_** 8)\n- 线性结构\n  - 线性结构中的数据元素之间是**一对一**的关系\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693551921768.png)\n- 树形结构\n  - 树形结构中的数据元素之间存在一种**一对多**的层次关系\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693551970530.png)\n- 图形结构\n  - 图形结构的数据元素是**多对多**的关系\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693552009255.png)\n\n### 1.5.2 　物理结构\n\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1693553718264image.png) 顺序存储结构\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693553223233.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1693553831167image.png)链式存储结构\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/1693553231318.png)\n\n## 1.6 　抽象数据类型\n\n### ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1693554002377image.png)1.6.1 　数据类型\n\n- 是指一组性质相同的值的集合及定义在此集合上的一些操作的总称\n- 按照值的不同进行划分的\n\n### 1.6.2 　抽象数据类型 (ADT)\n\n- 是指一个数学模型及定 义在该模型上的一组操作\n  - “抽象”的意义在于数据类型的 数学抽象特性\n  - 一个抽象数据类型定义了：一个数据对象、数据对象中各数据元素之间的关系及对数据元素的操作\n- 体现了程序设计中问题分解、抽象和信息隐藏的特性\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"ds-intro",text:"DS Intro#"},{depth:2,slug:"程序设计-数据结构算法",text:"程序设计= 数据结构+算法 #"},{depth:2,slug:"-重点",text:"⭐ 重点#"},{depth:3,slug:"为什么需要",text:"为什么需要#"},{depth:3,slug:"特性",text:"特性#"},{depth:3,slug:"案例",text:"案例#"},{depth:3,slug:"优劣",text:"优劣#"},{depth:3,slug:"操作",text:"操作#"},{depth:3,slug:"应用",text:"应用#"},{depth:2,slug:"14-基本概念和术语-",text:"1.4 　基本概念和术语 #"},{depth:3,slug:"141-数据",text:"1.4.1 　数据#"},{depth:3,slug:"142-数据元素",text:"1.4.2 　数据元素#"},{depth:3,slug:"143-数据项",text:"1.4.3 　数据项#"},{depth:3,slug:"144-数据对象",text:"1.4.4 　数据对象#"},{depth:3,slug:"145-数据结构",text:"1.4.5 　数据结构#"},{depth:2,slug:"15-逻辑结构与物理结构",text:"1.5 　逻辑结构与物理结构#"},{depth:3,slug:"151-逻辑结构",text:"1.5.1 　逻辑结构#"},{depth:3,slug:"152-物理结构",text:"1.5.2 　物理结构#"},{depth:2,slug:"16-抽象数据类型",text:"1.6 　抽象数据类型#"},{depth:3,slug:"161-数据类型",text:"1.6.1 　数据类型#"},{depth:3,slug:"162-抽象数据类型-adt",text:"1.6.2 　抽象数据类型 (ADT)#"}]}const Content=createComponent(((n,a,i)=>{const{layout:e,...t}=frontmatter;return t.file=file,t.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};