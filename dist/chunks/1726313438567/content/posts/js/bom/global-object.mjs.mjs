import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="global-object">Global Object<a class="anchor" href="#global-object"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="定义">定义<a class="anchor" href="#定义"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>Global 对象为一种兜底对象，它所针对的是不属于任何对象的属性和方法。</li>\n</ul>\n<h2 id="方法">方法<a class="anchor" href="#方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><code>isNaN()</code>, <code>isFinite()</code>, <code>parseInt()</code>, and <code>parseFloat()</code>, are actually methods of the Global object</li>\n<li>URI-Encoding Methods\n<ul>\n<li>目的\n<ul>\n<li>用于编码统一资源标识符（ URI），特殊的 UTF-8 编码替换掉所有无效字符空格等，使浏览器理解</li>\n</ul>\n</li>\n<li><code>encodeURI()</code>\n<ul>\n<li>can be used on full URIs</li>\n<li>不会编码属于 URL 组件的特殊字符，比如冒号、斜杠、问号、井号</li>\n</ul>\n</li>\n<li><code>encodeURIComponent()</code></li>\n</ul>\n</li>\n<li>can be used only on strings that are appended to the end of an existing URI.\n<ul>\n<li>会编码它发现的所有非标准字符</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-34-x67-y372.png" alt=""></li>\n</ul>\n</li>\n<li>The <code>eval()</code> Method\n<ul>\n<li>the most powerful in the entire ECMAScript language</li>\n<li>This method works like an entire ECMAScript interpreter (编译器) and accepts one argument, a string of ECMAScript (or JavaScript) to execute.\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1691042433344image.png" alt=""></li>\n</ul>\n</li>\n<li>Any variables or functions created inside of eval() will not be hoisted, as they are contained within a string when the code is being parsed. They are created only at the time of eval() execution.</li>\n<li>In strict mode, variables and functions created inside of eval() are not accessible outside</li>\n<li>in strict mode, assigning a value to eval causes an error</li>\n<li>可能有恶性插入风险，须慎用</li>\n</ul>\n</li>\n</ul>\n<h2 id="属性">属性<a class="anchor" href="#属性"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>all variables and functions defined globally become properties of the Global object.</li>\n<li>The special values (特殊值) of undefined, NaN, and Infinity are all properties of the Global object.</li>\n<li>all native reference type constructors (引用类型构造函数), such as Object and Function, are properties of the Global object.</li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1691042774125image.png" alt=""></li>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1691042785602image.png" alt=""></li>\n</ul>\n<h2 id="window-object"><a href="Window-Object">Window Object</a><a class="anchor" href="#window-object"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>浏览器将 window 对象实现为 Global 对象的代理</li>\n<li>window 对象在 JavaScript 中远不止实现了 ECMAScript 的 Global 对象那么简单。</li>\n<li>all variables and functions declared in the global scope become properties on window.</li>\n</ul>',frontmatter={aliases:["Global Object"],draft:!1,title:"Global Object",reviewed:null,difficulty:null,comment:null,topic:["Objects","DOM"],tags:["JavaScript"],type:"D",DateStarted:"2023-07-20T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",Datereviewed:null,status:["Snooze"],category:"Programming","linter-yaml-title-alias":"Global Object",minutes:2,words:355},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/bom/global-object.md",url=void 0;function rawContent(){return"\n# Global Object\n\n## 定义\n\n- Global 对象为一种兜底对象，它所针对的是不属于任何对象的属性和方法。\n\n## 方法\n\n- `isNaN()`, `isFinite()`, `parseInt()`, and `parseFloat()`, are actually methods of the Global object\n- URI-Encoding Methods\n  - 目的\n    - 用于编码统一资源标识符（ URI），特殊的 UTF-8 编码替换掉所有无效字符空格等，使浏览器理解\n  - `encodeURI()`\n    - can be used on full URIs\n    - 不会编码属于 URL 组件的特殊字符，比如冒号、斜杠、问号、井号\n  - `encodeURIComponent()`\n- can be used only on strings that are appended to the end of an existing URI.\n  - 会编码它发现的所有非标准字符\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/C05BasicReferenceTypes-34-x67-y372.png)\n- The `eval()` Method\n  - the most powerful in the entire ECMAScript language\n  - This method works like an entire ECMAScript interpreter (编译器) and accepts one argument, a string of ECMAScript (or JavaScript) to execute.\n    - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1691042433344image.png)\n  - Any variables or functions created inside of eval() will not be hoisted, as they are contained within a string when the code is being parsed. They are created only at the time of eval() execution.\n  - In strict mode, variables and functions created inside of eval() are not accessible outside\n  - in strict mode, assigning a value to eval causes an error\n  - 可能有恶性插入风险，须慎用\n\n## 属性\n\n- all variables and functions defined globally become properties of the Global object.\n- The special values (特殊值) of undefined, NaN, and Infinity are all properties of the Global object.\n- all native reference type constructors (引用类型构造函数), such as Object and Function, are properties of the Global object.\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1691042774125image.png)\n- ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/programming/Paste-image-1691042785602image.png)\n\n## [Window Object](Window-Object)\n\n- 浏览器将 window 对象实现为 Global 对象的代理\n- window 对象在 JavaScript 中远不止实现了 ECMAScript 的 Global 对象那么简单。\n- all variables and functions declared in the global scope become properties on window.\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"global-object",text:"Global Object#"},{depth:2,slug:"定义",text:"定义#"},{depth:2,slug:"方法",text:"方法#"},{depth:2,slug:"属性",text:"属性#"},{depth:2,slug:"window-object",text:"Window Object#"}]}const Content=createComponent(((e,n,t)=>{const{layout:a,...i}=frontmatter;return i.file=file,i.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};