import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="testing">Testing<a class="anchor" href="#testing"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<p>[[front-end-tooling/testing/测试-react-testing|测试-React Testing]]</p>\n<h2 id="reference">Reference<a class="anchor" href="#reference"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><a href="https://github.com/vortesnail/blog/issues/16">如何使用 React Testing Library 和 Jest 测试 React 应用 · Issue #16 · vortesnail/blog · GitHub</a></li>\n<li><a href="https://www.youtube.com/watch?v=Jv2uxzhPFl4">Test-Driven Development // Fun TDD Introduction with JavaScript - YouTube</a></li>\n</ul>\n<h2 id="intro">Intro<a class="anchor" href="#intro"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id=""><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/Pasted-image-20230308094955.png" alt=""></h3>\n<h3 id="best-practices">Best Practices<a class="anchor" href="#best-practices"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Avoid including implementation details.</li>\n<li>Final users will have no notion of React. Rather than dealing with instances of rendered React components, your tests should wok with actual DOM nodes.</li>\n<li>Resemble software usage</li>\n<li>Maintainability in the long run - as long as you’re not changing functionality any changes in the implementation of the component won’t break your tests and slow you and your team down</li>\n</ul>\n<h3 id="why-testing">Why Testing?<a class="anchor" href="#why-testing"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Discover defects or bugs before delivery to the client</li>\n<li>Guarantee the quality of the software you develop further by catching bugs before they find their way into a live application</li>\n<li>Reduce user complaints and save time and money</li>\n</ul>\n<h2 id="tdd-test-drivern-development-philosophy">TDD-Test Drivern Development Philosophy<a class="anchor" href="#tdd-test-drivern-development-philosophy"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="unit-test">Unit Test<a class="anchor" href="#unit-test"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Unit Test 单元测试 （代码帮你测试代码）</li>\n</ul>\n<h3 id="integration-test">Integration Test<a class="anchor" href="#integration-test"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="end-to-end-test">End-To-End Test<a class="anchor" href="#end-to-end-test"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h2 id="react-testing-library">React Testing Library<a class="anchor" href="#react-testing-library"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="reference-1">Reference<a class="anchor" href="#reference-1"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><a href="https://testing-library.com/docs/react-testing-library/intro/">React Testing Library | Testing Library (testing-library.com)</a></li>\n<li>Tutorials\n<ul>\n<li><a href="https://www.robinwieruch.de/react-testing-library/">React Testing Library Tutorial (robinwieruch.de)</a></li>\n</ul>\n</li>\n</ul>\n<h2 id="jest">Jest<a class="anchor" href="#jest"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="reference-2">Reference<a class="anchor" href="#reference-2"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><a href="https://jestjs.io/docs/getting-started">Getting Started · Jest</a></li>\n<li>Tutorials\n<ul>\n<li><a href="https://www.youtube.com/watch?v=ML5egqL3YFE">React Testing Tutorial (Jest + React Testing Library) (youtube.com)</a></li>\n</ul>\n</li>\n</ul>\n<h3 id="two-tools-react-endorses-to-structure-your-tests">Two tools React endorses to structure your tests.<a class="anchor" href="#two-tools-react-endorses-to-structure-your-tests"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="good-iteration-speed">Good iteration speed<a class="anchor" href="#good-iteration-speed"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="powerful-features-like-mocking-modules-so-you-can-have-more-control-over-how-the-code-executes-to-make-sure-your-unit-testing-is-standalone">Powerful features, like <em>mocking</em> modules so you can have more control over how the code executes, to make sure your unit testing is standalone.<a class="anchor" href="#powerful-features-like-mocking-modules-so-you-can-have-more-control-over-how-the-code-executes-to-make-sure-your-unit-testing-is-standalone"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="a-js-test-runner-that-lets-you-access-an-artificial-dom-called-jsdom-while-jsdom-is-an-approximation-of-how-the-browser-works-its-often-good-enough-for-testing-react-component">A JS test runner that lets you access an artificial DOM called jsdom. While jsdom is an approximation of how the browser works, it’s often good enough for testing React component.<a class="anchor" href="#a-js-test-runner-that-lets-you-access-an-artificial-dom-called-jsdom-while-jsdom-is-an-approximation-of-how-the-browser-works-its-often-good-enough-for-testing-react-component"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h2 id="cypress">📌<a href="Cypress">Cypress</a><a class="anchor" href="#cypress"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="storybook">📌<a href="Storybook/Storybook">Storybook</a><a class="anchor" href="#storybook"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="mocha">Mocha<a class="anchor" href="#mocha"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="joint-debugging-联调-多人协作效率">Joint Debugging 联调 (多人协作效率)<a class="anchor" href="#joint-debugging-联调-多人协作效率"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="monitor-监控报警-线上问题提前预知">Monitor 监控报警 （线上问题提前预知）<a class="anchor" href="#monitor-监控报警-线上问题提前预知"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>',frontmatter={topic:null,category:"Front-End Tooling",Datereviewed:null,reviewed:null,difficulty:null,comment:null,aliases:["Testing"],type:"C",title:"Testing",tags:["Testing"],DateStarted:"2023-03-01T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",status:null,"linter-yaml-title-alias":"Testing",draft:!0,minutes:1,words:262},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-tooling/testing/testing.md",url=void 0;function rawContent(){return"\n# Testing\n\n[[front-end-tooling/testing/测试-react-testing|测试-React Testing]]\n\n## Reference\n\n- [如何使用 React Testing Library 和 Jest 测试 React 应用 · Issue #16 · vortesnail/blog · GitHub](https://github.com/vortesnail/blog/issues/16)\n- [Test-Driven Development // Fun TDD Introduction with JavaScript - YouTube](https://www.youtube.com/watch?v=Jv2uxzhPFl4)\n\n## Intro\n\n### ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/Pasted-image-20230308094955.png)\n\n### Best Practices\n\n- Avoid including implementation details.\n- Final users will have no notion of React. Rather than dealing with instances of rendered React components, your tests should wok with actual DOM nodes.\n- Resemble software usage\n- Maintainability in the long run - as long as you're not changing functionality any changes in the implementation of the component won't break your tests and slow you and your team down\n\n### Why Testing?\n\n- Discover defects or bugs before delivery to the client\n- Guarantee the quality of the software you develop further by catching bugs before they find their way into a live application\n- Reduce user complaints and save time and money\n\n## TDD-Test Drivern Development Philosophy\n\n### Unit Test\n\n- Unit Test 单元测试 （代码帮你测试代码）\n\n### Integration Test\n\n### End-To-End Test\n\n## React Testing Library\n\n### Reference\n\n- [React Testing Library | Testing Library (testing-library.com)](https://testing-library.com/docs/react-testing-library/intro/)\n- Tutorials\n  - [React Testing Library Tutorial (robinwieruch.de)](https://www.robinwieruch.de/react-testing-library/)\n\n## Jest\n\n### Reference\n\n- [Getting Started · Jest](https://jestjs.io/docs/getting-started)\n- Tutorials\n  - [React Testing Tutorial (Jest + React Testing Library) (youtube.com)](https://www.youtube.com/watch?v=ML5egqL3YFE)\n\n### Two tools React endorses to structure your tests.\n\n### Good iteration speed\n\n### Powerful features, like _mocking_ modules so you can have more control over how the code executes, to make sure your unit testing is standalone.\n\n### A JS test runner that lets you access an artificial DOM called jsdom. While jsdom is an approximation of how the browser works, it's often good enough for testing React component.\n\n## 📌[Cypress](Cypress)\n\n## 📌[Storybook](Storybook/Storybook)\n\n## Mocha\n\n## Joint Debugging 联调 (多人协作效率)\n\n## Monitor 监控报警 （线上问题提前预知）\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"testing",text:"Testing#"},{depth:2,slug:"reference",text:"Reference#"},{depth:2,slug:"intro",text:"Intro#"},{depth:3,slug:"",text:""},{depth:3,slug:"best-practices",text:"Best Practices#"},{depth:3,slug:"why-testing",text:"Why Testing?#"},{depth:2,slug:"tdd-test-drivern-development-philosophy",text:"TDD-Test Drivern Development Philosophy#"},{depth:3,slug:"unit-test",text:"Unit Test#"},{depth:3,slug:"integration-test",text:"Integration Test#"},{depth:3,slug:"end-to-end-test",text:"End-To-End Test#"},{depth:2,slug:"react-testing-library",text:"React Testing Library#"},{depth:3,slug:"reference-1",text:"Reference#"},{depth:2,slug:"jest",text:"Jest#"},{depth:3,slug:"reference-2",text:"Reference#"},{depth:3,slug:"two-tools-react-endorses-to-structure-your-tests",text:"Two tools React endorses to structure your tests.#"},{depth:3,slug:"good-iteration-speed",text:"Good iteration speed#"},{depth:3,slug:"powerful-features-like-mocking-modules-so-you-can-have-more-control-over-how-the-code-executes-to-make-sure-your-unit-testing-is-standalone",text:"Powerful features, like mocking modules so you can have more control over how the code executes, to make sure your unit testing is standalone.#"},{depth:3,slug:"a-js-test-runner-that-lets-you-access-an-artificial-dom-called-jsdom-while-jsdom-is-an-approximation-of-how-the-browser-works-its-often-good-enough-for-testing-react-component",text:"A JS test runner that lets you access an artificial DOM called jsdom. While jsdom is an approximation of how the browser works, it’s often good enough for testing React component.#"},{depth:2,slug:"cypress",text:"📌Cypress#"},{depth:2,slug:"storybook",text:"📌Storybook#"},{depth:2,slug:"mocha",text:"Mocha#"},{depth:2,slug:"joint-debugging-联调-多人协作效率",text:"Joint Debugging 联调 (多人协作效率)#"},{depth:2,slug:"monitor-监控报警-线上问题提前预知",text:"Monitor 监控报警 （线上问题提前预知）#"}]}const Content=createComponent(((e,t,n)=>{const{layout:o,...a}=frontmatter;return a.file=file,a.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};