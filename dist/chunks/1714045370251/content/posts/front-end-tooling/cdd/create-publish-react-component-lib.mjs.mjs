import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="create--publish-component-library-react">Create &#x26; Publish Component Library (React)<a class="anchor" href="#create--publish-component-library-react"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="goal">💡Goal<a class="anchor" href="#goal"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>React 组件化和 hooks 封装 (复用)</li>\n<li>How to build reusable components?</li>\n<li>How to use React Component, Hooks?</li>\n<li>📌React Component Lib</li>\n</ul>\n<h2 id="reference">Reference<a class="anchor" href="#reference"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li><a href="https://dev.to/alexeagleson/how-to-create-and-publish-a-react-component-library-2oe">How to Create and Publish a React Component Library - DEV Community</a></li>\n<li><a href="https://rehansattar.dev/how-to-create-and-publish-a-react-library">How To Create &#x26; Publish A React Library (rehansattar.dev)</a></li>\n</ul>\n<h2 id="lib-project-init">Lib Project Init<a class="anchor" href="#lib-project-init"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h4 id="install-react-typescript">Install React, TypeScript<a class="anchor" href="#install-react-typescript"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>✅<code>npm install react typescript @types/react</code></li>\n</ul>\n<h4 id="optional">(Optional)<a class="anchor" href="#optional"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><a href="https://www.npmjs.com/package/create-react-library">create-react-library - npm (npmjs.com)</a>\n<ul>\n<li><code>npx create-react-library my-react-library</code></li>\n</ul>\n</li>\n<li>🏷️<a href="Tooling/Init-Compile-Bundle/Project-Init">Project-Init</a></li>\n</ul>\n<h2 id="config-typescript">Config TypeScript<a class="anchor" href="#config-typescript"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>🏷️<a href="Tooling/TypeScript/TypeScript">TypeScript</a></li>\n<li>Create <code>tsconfig.json</code></li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#9ECBFF">"skipLibCheck"</span><span style="color:#E1E4E8">: </span><span style="color:#79B8FF">true</span><span style="color:#6A737D"> /* Skip type checking all .d.ts files. */</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#9ECBFF">"jsx"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"react"</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// Add support to jsx syntax</span></span>\n<span class="line"><span style="color:#9ECBFF">"module"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"ESNext"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#9ECBFF">"declaration"</span><span style="color:#E1E4E8">: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#9ECBFF">"sourceMap"</span><span style="color:#E1E4E8">: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#9ECBFF">"outDir"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"dist"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#9ECBFF">"moduleResolution"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"node"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#9ECBFF">"allowSyntheticDefaultImports"</span><span style="color:#E1E4E8">: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#9ECBFF">"emitDeclarationOnly"</span><span style="color:#E1E4E8">: </span><span style="color:#79B8FF">true</span></span>\n<span class="line"></span></code></pre>\n<h2 id="develop-your-react-components">Develop your React components<a class="anchor" href="#develop-your-react-components"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<blockquote>\n<p><a href="React/Private/O-React">React</a></p>\n</blockquote>\n<ul>\n<li>Create <code>index.ts</code> in each component directory</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">export</span><span style="color:#E1E4E8"> { </span><span style="color:#F97583">default</span><span style="color:#E1E4E8"> } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "./Button"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#F97583">export</span><span style="color:#E1E4E8"> { </span><span style="color:#F97583">default</span><span style="color:#F97583"> as</span><span style="color:#E1E4E8"> Button } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "./Button"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#F97583">export</span><span style="color:#79B8FF"> *</span><span style="color:#F97583"> from</span><span style="color:#9ECBFF"> "./components"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"></span></code></pre>\n<h2 id="testing">Testing<a class="anchor" href="#testing"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<blockquote>\n<p>🏷️<a href="Tooling/Testing/Testing">Testing</a> —>🏷️<a href="Storybook">Storybook</a> —> 🏷️<a href="Tooling/Testing/Cypress">Cypress</a> / <a href="Jest">Jest</a>/ <a href="React-Testing-Library">React Testing Library</a></p>\n</blockquote>\n<h3 id="jest--babel">Jest &#x26; Babel<a class="anchor" href="#jest--babel"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<blockquote>\n<p><a href="https://jestjs.io/docs/configuration#testenvironment-string">Configuring Jest · Jest</a></p>\n</blockquote>\n<h4 id="install-jest">Install Jest<a class="anchor" href="#install-jest"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<p><code>npm install @testing-library/react jest @types/jest @testing-library/jest-dom --save-dev</code></p>\n<h4 id="install-babel-to-add-test-support-for-jsx-and-tsx">Install Babel to add test support for .jsx and .tsx<a class="anchor" href="#install-babel-to-add-test-support-for-jsx-and-tsx"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<p><code>npm install @babel/core @babel/preset-react @babel/preset-typescript @babel/preset-env --save-dev</code></p>\n<h4 id="note">🐛Note<a class="anchor" href="#note"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h5 id="common-js-兼容问题">Common JS 兼容问题<a class="anchor" href="#common-js-兼容问题"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h5>\n<ul>\n<li>把<code>.js</code> 后缀改为 <code>.cjs</code>\n<ul>\n<li><a href="file:///e%3A/SynologyDrive/Codespace/full-stack/front-end/component-dev-practice/react-component-lib/jest.config.cjs">jest.config.cjs</a></li>\n<li><a href="file:///e%3A/SynologyDrive/Codespace/full-stack/front-end/component-dev-practice/react-component-lib/babel.config.cjs">babel.config.cjs</a></li>\n</ul>\n</li>\n<li>Reference\n<ul>\n<li><a href="https://stackoverflow.com/questions/61146112/error-while-loading-config-you-appear-to-be-using-a-native-ecmascript-module-c">node.js - Error while loading config - You appear to be using a native ECMAScript module configuration file - Stack Overflow</a></li>\n</ul>\n</li>\n</ul>\n<h5 id="测试环境依赖问题">测试环境依赖问题<a class="anchor" href="#测试环境依赖问题"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h5>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#B392F0">As</span><span style="color:#9ECBFF"> of</span><span style="color:#9ECBFF"> Jest</span><span style="color:#79B8FF"> 28</span><span style="color:#9ECBFF"> "jest-environment-jsdom"</span><span style="color:#9ECBFF"> is</span><span style="color:#9ECBFF"> no</span><span style="color:#9ECBFF"> longer</span><span style="color:#9ECBFF"> shipped</span><span style="color:#9ECBFF"> by</span><span style="color:#9ECBFF"> default,</span><span style="color:#9ECBFF"> make</span><span style="color:#9ECBFF"> sure</span><span style="color:#9ECBFF"> to</span><span style="color:#9ECBFF"> install</span><span style="color:#9ECBFF"> it</span><span style="color:#9ECBFF"> separately.</span></span>\n<span class="line"></span></code></pre>\n<blockquote>\n<p><code>npm install -D jest-environment-jsdom</code></p>\n</blockquote>\n<p>并在 <code>jest.config.cjs</code> 添加：</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#79B8FF">module</span><span style="color:#E1E4E8">.</span><span style="color:#79B8FF">exports</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\ttestEnvironment: </span><span style="color:#9ECBFF">"jsdom"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span></code></pre>\n<ul>\n<li>Reference\n<ul>\n<li><a href="https://stackoverflow.com/questions/72013449/upgrading-jest-to-v29-error-test-environment-jest-environment-jsdom-cannot-be">javascript - Upgrading Jest to v29 - Error Test environment jest-environment-jsdom cannot be found - Stack Overflow</a></li>\n</ul>\n</li>\n</ul>\n<h5 id="non-js-module-识别问题">non-JS module 识别问题<a class="anchor" href="#non-js-module-识别问题"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h5>\n<p><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/z-jest-config-bug.png" alt=""></p>\n<blockquote>\n<p><code>npm install -D identity-obj-proxy</code></p>\n</blockquote>\n<p>并在 <code>jest.config.cjs</code> 添加：</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#79B8FF">module</span><span style="color:#E1E4E8">.</span><span style="color:#79B8FF">exports</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\tmoduleNameMapper: {</span></span>\n<span class="line"><span style="color:#9ECBFF">\t\t".(css|less|scss)$"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"identity-obj-proxy"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span></code></pre>\n<h3 id="storybook">Storybook<a class="anchor" href="#storybook"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h4 id="install">Install<a class="anchor" href="#install"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<p><code>npx sb init</code><br>\n<code>npm run storybook</code></p>\n<h4 id="note-1">🐛Note<a class="anchor" href="#note-1"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<h5 id="storybook-not-able-to-detect-the-right-builder">storybook not able to detect the right builder<a class="anchor" href="#storybook-not-able-to-detect-the-right-builder"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h5>\n<ul>\n<li>Choose <code>vite</code></li>\n<li>Reference\n<ul>\n<li><a href="https://github.com/storybookjs/storybook/issues/25206">[Documentation]: Rollup Not Supported · Issue #25206 · storybookjs/storybook · GitHub</a></li>\n</ul>\n</li>\n</ul>\n<h2 id="documentation">Documentation<a class="anchor" href="#documentation"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>💡to document your components and generate a live style guide\n<ul>\n<li><a href="https://react-styleguidist.js.org/learn">Learn React Styleguidist | React Styleguidist (react-styleguidist.js.org)</a></li>\n</ul>\n</li>\n</ul>\n<h2 id="compilers-and-bundlers">Compilers and Bundlers<a class="anchor" href="#compilers-and-bundlers"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<blockquote>\n<p><a href="Compilers-and-Bundlers">Compilers and Bundlers</a><br>\n<a href="https://zhuanlan.zhihu.com/p/340255085">为什么说 rollup 比 webpack 更适合打包库 - 知乎</a><br>\n<a href="https://www.ruanyifeng.com/blog/2022/05/rollup.html">打包工具 rollup.js 入门教程 - 阮一峰的网络日志</a></p>\n</blockquote>\n<h3 id="rollup-install--config">Rollup Install &#x26; Config<a class="anchor" href="#rollup-install--config"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h4 id="install-rollup">Install Rollup<a class="anchor" href="#install-rollup"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>✅<code>npm install rollup @rollup/plugin-commonjs @rollup/plugin-node-resolve @rollup/plugin-typescript rollup-plugin-dts --save-dev</code></li>\n<li>✅<code>npm install rollup-plugin-postcss --save-dev</code> ^y1ky13</li>\n</ul>\n<h4 id="-npm-报错-network-error">🐛 npm 报错 (network error)：<a class="anchor" href="#-npm-报错-network-error"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> code</span><span style="color:#9ECBFF"> ETIMEDOUT</span></span>\n<span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> errno</span><span style="color:#9ECBFF"> ETIMEDOUT</span></span>\n<span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> network</span><span style="color:#9ECBFF"> request</span><span style="color:#9ECBFF"> to</span><span style="color:#9ECBFF"> https://registry.npmjs.org/rollup-plugin-postcss</span><span style="color:#9ECBFF"> failed,</span><span style="color:#9ECBFF"> reason:</span></span>\n<span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> network</span><span style="color:#9ECBFF"> This</span><span style="color:#9ECBFF"> is</span><span style="color:#9ECBFF"> a</span><span style="color:#9ECBFF"> problem</span><span style="color:#9ECBFF"> related</span><span style="color:#9ECBFF"> to</span><span style="color:#9ECBFF"> network</span><span style="color:#9ECBFF"> connectivity.</span></span>\n<span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> network</span><span style="color:#9ECBFF"> In</span><span style="color:#9ECBFF"> most</span><span style="color:#9ECBFF"> cases</span><span style="color:#9ECBFF"> you</span><span style="color:#9ECBFF"> are</span><span style="color:#9ECBFF"> behind</span><span style="color:#9ECBFF"> a</span><span style="color:#9ECBFF"> proxy</span><span style="color:#9ECBFF"> or</span><span style="color:#9ECBFF"> have</span><span style="color:#9ECBFF"> bad</span><span style="color:#9ECBFF"> network</span><span style="color:#9ECBFF"> settings.</span></span>\n<span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> network</span></span>\n<span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> network</span><span style="color:#9ECBFF"> If</span><span style="color:#9ECBFF"> you</span><span style="color:#9ECBFF"> are</span><span style="color:#9ECBFF"> behind</span><span style="color:#9ECBFF"> a</span><span style="color:#9ECBFF"> proxy,</span><span style="color:#9ECBFF"> please</span><span style="color:#9ECBFF"> make</span><span style="color:#9ECBFF"> sure</span><span style="color:#9ECBFF"> that</span><span style="color:#9ECBFF"> the</span></span>\n<span class="line"><span style="color:#B392F0">npm</span><span style="color:#9ECBFF"> ERR!</span><span style="color:#9ECBFF"> network</span><span style="color:#9ECBFF"> \'proxy\'</span><span style="color:#9ECBFF"> config</span><span style="color:#9ECBFF"> is</span><span style="color:#9ECBFF"> set</span><span style="color:#9ECBFF"> properly.</span><span style="color:#9ECBFF">  See:</span><span style="color:#9ECBFF"> \'npm help config\'</span></span>\n<span class="line"></span></code></pre>\n<p>退出所有代理，重试即可<br>\n查看是否有代理</p>\n<ul>\n<li><code>npm config get proxy</code></li>\n<li><code>npm config get https-proxy</code></li>\n</ul>\n<h4 id="to-check">🟨To check<a class="anchor" href="#to-check"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span>// "@babel/preset-env": "^7.23.9",</span></span>\n<span class="line"><span>// "@babel/preset-react": "^7.23.3",</span></span>\n<span class="line"><span>// "@rollup/plugin-babel": "^6.0.4",</span></span>\n<span class="line"><span>// "@rollup/plugin-commonjs": "^25.0.7",</span></span>\n<span class="line"><span>// "@rollup/plugin-node-resolve": "^15.2.3",</span></span>\n<span class="line"><span>// "@rollup/plugin-typescript": "^11.1.6",</span></span>\n<span class="line"><span>// "rollup": "^2.79.1",</span></span>\n<span class="line"><span>// "rollup-plugin-dts": "^6.1.0",</span></span>\n<span class="line"><span>// "rollup-plugin-terser": "^7.0.2",</span></span>\n<span class="line"><span></span></span></code></pre>\n<h4 id="configure-rollup-for-bundling">Configure Rollup for bundling<a class="anchor" href="#configure-rollup-for-bundling"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>Create <code>rollup.config.js</code>:\n<ul>\n<li><a href="file:///e%3A/SynologyDrive/Codespace/full-stack/front-end/component-dev-practice/react-component-lib/rollup.config.js">rollup.config.js</a></li>\n</ul>\n</li>\n<li>Add plugin to support css file\n<ul>\n<li><code>import postcss from "rollup-plugin-postcss";</code></li>\n<li>npm install the plugin: <a href="Front-End/CDD/README#%5Ey1ky13">Create &#x26; Publish Component Library (React) > ^y1ky13</a></li>\n</ul>\n</li>\n</ul>\n<h2 id="package-management">Package management<a class="anchor" href="#package-management"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="update-packagejson">Update <code>package.json</code><a class="anchor" href="#update-packagejson"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>metadata + scripts\n<ul>\n<li>name, version, description, keywords, author</li>\n</ul>\n</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">{</span></span>\n<span class="line"><span style="color:#79B8FF">\t"main"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"dist/cjs/index.js"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#79B8FF">\t"module"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"dist/esm/index.js"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#79B8FF">\t"files"</span><span style="color:#E1E4E8">: [</span><span style="color:#9ECBFF">"dist"</span><span style="color:#E1E4E8">],</span></span>\n<span class="line"><span style="color:#79B8FF">\t"types"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"dist/index.d.ts"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#79B8FF">\t"type"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"module"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#79B8FF">\t"scripts"</span><span style="color:#E1E4E8">: {</span></span>\n<span class="line"><span style="color:#79B8FF">\t\t"rollup"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"rollup -c"</span></span>\n<span class="line"><span style="color:#E1E4E8">\t}</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"></span></code></pre>\n<h2 id="publish-the-library">Publish the Library<a class="anchor" href="#publish-the-library"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="opt-1-publish-to-npm--install-with-npm">Opt-1: Publish to NPM &#x26; Install with NPM<a class="anchor" href="#opt-1-publish-to-npm--install-with-npm"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Create an account</li>\n<li>Login</li>\n<li>Publish your package</li>\n<li>Package versioning and update\n<ul>\n<li>Semantic versioning</li>\n<li>Publish updates</li>\n</ul>\n</li>\n<li>🏷️<a href="Back-End/Node.js/O-NodeJS">O-NodeJS</a></li>\n</ul>\n<h3 id="opt-2-publish-to-github--install-with-npm">Opt-2: Publish to GitHub &#x26; Install with NPM<a class="anchor" href="#opt-2-publish-to-github--install-with-npm"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h4 id="create-a-git-repo">Create a git repo<a class="anchor" href="#create-a-git-repo"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<blockquote>\n<p>If you want to build a library for internal use, create a private repo</p>\n</blockquote>\n<ul>\n<li><code>.gitinore</code>\n<ul>\n<li>node_modules</li>\n<li>dist</li>\n</ul>\n</li>\n<li>Update <code>package.json</code>\n<ul>\n<li><code>"name": "@jenniferwonder/my-react-component-lib"</code></li>\n<li><code>"publishConfig":{"registry": "https://npm.pkg.github.com/jenniferwonder"}</code></li>\n</ul>\n</li>\n</ul>\n<h4 id="create-npmrc-file">Create <code>.npmrc</code> file<a class="anchor" href="#create-npmrc-file"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span>registry=https://registry.npmjs.org/</span></span>\n<span class="line"><span>@jenniferwonder:registry=https://npm.pkg.github.com/</span></span>\n<span class="line"><span>//npm.pkg.github.com/:_authToken=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</span></span>\n<span class="line"><span></span></span></code></pre>\n<h4 id="generate-github-tokens">Generate GitHub Tokens<a class="anchor" href="#generate-github-tokens"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></li>\n<li>Select permission\n<ul>\n<li><img src="https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/z-GitHub-Token-Permission.png" alt=""></li>\n</ul>\n</li>\n<li>Token for my-react-component-lib (2024-02-28, 7 days)\n<ul>\n<li><code>...</code></li>\n</ul>\n</li>\n</ul>\n<h4 id="publish-lib">Publish Lib<a class="anchor" href="#publish-lib"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><code>npm publish</code></li>\n</ul>\n<h2 id="consume-your-lib">Consume your lib<a class="anchor" href="#consume-your-lib"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="init-a-react-app-or-use-your-existing-react-app">Init a React App (or use your existing React App)<a class="anchor" href="#init-a-react-app-or-use-your-existing-react-app"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>npx create-react-app my-app --template typescript</code></li>\n<li>npm install your-package</li>\n<li>import and use components in your projects</li>\n</ul>\n<h3 id="consume-a-private-library">Consume a private library<a class="anchor" href="#consume-a-private-library"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Get the Token with permission needed</li>\n<li>create an <code>.npmrc</code> file same as that of the library: <a href="Front-End/CDD/README#Create-npmrc-file">Create &#x26; Publish Component Library (React) > Create npmrc file</a></li>\n<li>install the package: <code>npm install @jenniferwonder/my-react-component-lib</code> ^4nn4c5</li>\n</ul>\n<h3 id="consume-a-public-library">Consume a public library<a class="anchor" href="#consume-a-public-library"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><a href="Front-End/CDD/README#%5E4nn4c5">Create &#x26; Publish Component Library (React) > ^4nn4c5</a></li>\n</ul>\n<h2 id="ci-cd">CI-CD<a class="anchor" href="#ci-cd"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="design-tokens-to-the-reuse">Design Tokens to the reuse<a class="anchor" href="#design-tokens-to-the-reuse"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="use-nodejs-to-write-custom-scripts">Use Node.js to write custom scripts<a class="anchor" href="#use-nodejs-to-write-custom-scripts"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="atomic-design-with-react">Atomic Design with React<a class="anchor" href="#atomic-design-with-react"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h2 id="prettier-eslint-and-stylelint">Prettier, ESLint and Stylelint<a class="anchor" href="#prettier-eslint-and-stylelint"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>',frontmatter={title:"Create & Publish Component Library (React)",type:null,tags:["React"],topic:["CDD"],Datereviewed:null,Type:"D",DateStarted:"2024-01-16T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",reviewed:null,status:null,difficulty:null,comment:null,aliases:["Create & Publish Component Library (React)","React CDD"],category:"Front-End Tooling","linter-yaml-title-alias":"Create & Publish Component Library (React)",minutes:3,words:665},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-tooling/cdd/create-publish-react-component-lib.md",url=void 0;function rawContent(){return'\n# Create & Publish Component Library (React)\n\n## 💡Goal\n\n- React 组件化和 hooks 封装 (复用)\n- How to build reusable components?\n- How to use React Component, Hooks?\n- 📌React Component Lib\n\n## Reference\n\n- [How to Create and Publish a React Component Library - DEV Community](https://dev.to/alexeagleson/how-to-create-and-publish-a-react-component-library-2oe)\n- [How To Create & Publish A React Library (rehansattar.dev)](https://rehansattar.dev/how-to-create-and-publish-a-react-library)\n\n## Lib Project Init\n\n#### Install React, TypeScript\n\n- ✅`npm install react typescript @types/react`\n\n#### (Optional)\n\n- [create-react-library - npm (npmjs.com)](https://www.npmjs.com/package/create-react-library)\n  - `npx create-react-library my-react-library`\n- 🏷️[Project-Init](Tooling/Init-Compile-Bundle/Project-Init)\n\n## Config TypeScript\n\n- 🏷️[TypeScript](Tooling/TypeScript/TypeScript)\n- Create `tsconfig.json`\n\n```ts\n"skipLibCheck": true /* Skip type checking all .d.ts files. */,\n"jsx": "react", // Add support to jsx syntax\n"module": "ESNext",\n"declaration": true,\n"sourceMap": true,\n"outDir": "dist",\n"moduleResolution": "node",\n"allowSyntheticDefaultImports": true,\n"emitDeclarationOnly": true\n```\n\n## Develop your React components\n\n> [React](React/Private/O-React)\n\n- Create `index.ts` in each component directory\n\n```ts\nexport { default } from "./Button";\nexport { default as Button } from "./Button";\nexport * from "./components";\n```\n\n## Testing\n\n> 🏷️[Testing](Tooling/Testing/Testing) --\x3e🏷️[Storybook](Storybook) --\x3e 🏷️[Cypress](Tooling/Testing/Cypress) / [Jest](Jest)/ [React Testing Library](React-Testing-Library)\n\n### Jest & Babel\n\n> [Configuring Jest · Jest](https://jestjs.io/docs/configuration#testenvironment-string)\n\n#### Install Jest\n\n`npm install @testing-library/react jest @types/jest @testing-library/jest-dom --save-dev`\n\n#### Install Babel to add test support for .jsx and .tsx\n\n`npm install @babel/core @babel/preset-react @babel/preset-typescript @babel/preset-env --save-dev`\n\n#### 🐛Note\n\n##### Common JS 兼容问题\n\n- 把`.js` 后缀改为 `.cjs`\n  - [jest.config.cjs](file:///e%3A/SynologyDrive/Codespace/full-stack/front-end/component-dev-practice/react-component-lib/jest.config.cjs)\n  - [babel.config.cjs](file:///e%3A/SynologyDrive/Codespace/full-stack/front-end/component-dev-practice/react-component-lib/babel.config.cjs)\n- Reference\n  - [node.js - Error while loading config - You appear to be using a native ECMAScript module configuration file - Stack Overflow](https://stackoverflow.com/questions/61146112/error-while-loading-config-you-appear-to-be-using-a-native-ecmascript-module-c)\n\n##### 测试环境依赖问题\n\n```shell\nAs of Jest 28 "jest-environment-jsdom" is no longer shipped by default, make sure to install it separately.\n```\n\n> `npm install -D jest-environment-jsdom`\n\n并在 `jest.config.cjs` 添加：\n\n```js\nmodule.exports = {\n\ttestEnvironment: "jsdom",\n};\n```\n\n- Reference\n  - [javascript - Upgrading Jest to v29 - Error Test environment jest-environment-jsdom cannot be found - Stack Overflow](https://stackoverflow.com/questions/72013449/upgrading-jest-to-v29-error-test-environment-jest-environment-jsdom-cannot-be)\n\n##### non-JS module 识别问题\n\n![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/z-jest-config-bug.png)\n\n> `npm install -D identity-obj-proxy`\n\n并在 `jest.config.cjs` 添加：\n\n```js\nmodule.exports = {\n\tmoduleNameMapper: {\n\t\t".(css|less|scss)$": "identity-obj-proxy",\n\t},\n};\n```\n\n### Storybook\n\n#### Install\n\n`npx sb init`  \n`npm run storybook`\n\n#### 🐛Note\n\n##### storybook not able to detect the right builder\n\n- Choose `vite`\n- Reference\n  - [\\[Documentation\\]: Rollup Not Supported · Issue #25206 · storybookjs/storybook · GitHub](https://github.com/storybookjs/storybook/issues/25206)\n\n## Documentation\n\n- 💡to document your components and generate a live style guide\n  - [Learn React Styleguidist | React Styleguidist (react-styleguidist.js.org)](https://react-styleguidist.js.org/learn)\n\n## Compilers and Bundlers\n\n> [Compilers and Bundlers](Compilers-and-Bundlers)  \n> [为什么说 rollup 比 webpack 更适合打包库 - 知乎](https://zhuanlan.zhihu.com/p/340255085)  \n> [打包工具 rollup.js 入门教程 - 阮一峰的网络日志](https://www.ruanyifeng.com/blog/2022/05/rollup.html)\n\n### Rollup Install & Config\n\n#### Install Rollup\n\n- ✅`npm install rollup @rollup/plugin-commonjs @rollup/plugin-node-resolve @rollup/plugin-typescript rollup-plugin-dts --save-dev`\n- ✅`npm install rollup-plugin-postcss --save-dev` ^y1ky13\n\n#### 🐛 npm 报错 (network error)：\n\n```shell\nnpm ERR! code ETIMEDOUT\nnpm ERR! errno ETIMEDOUT\nnpm ERR! network request to https://registry.npmjs.org/rollup-plugin-postcss failed, reason:\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network\nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network \'proxy\' config is set properly.  See: \'npm help config\'\n```\n\n退出所有代理，重试即可  \n查看是否有代理\n\n- `npm config get proxy`\n- `npm config get https-proxy`\n\n#### 🟨To check\n\n```\n// "@babel/preset-env": "^7.23.9",\n// "@babel/preset-react": "^7.23.3",\n// "@rollup/plugin-babel": "^6.0.4",\n// "@rollup/plugin-commonjs": "^25.0.7",\n// "@rollup/plugin-node-resolve": "^15.2.3",\n// "@rollup/plugin-typescript": "^11.1.6",\n// "rollup": "^2.79.1",\n// "rollup-plugin-dts": "^6.1.0",\n// "rollup-plugin-terser": "^7.0.2",\n```\n\n#### Configure Rollup for bundling\n\n- Create `rollup.config.js`:\n  - [rollup.config.js](file:///e%3A/SynologyDrive/Codespace/full-stack/front-end/component-dev-practice/react-component-lib/rollup.config.js)\n- Add plugin to support css file\n  - `import postcss from "rollup-plugin-postcss";`\n  - npm install the plugin: [Create & Publish Component Library (React) > ^y1ky13](Front-End/CDD/README#^y1ky13)\n\n## Package management\n\n### Update `package.json`\n\n- metadata + scripts\n  - name, version, description, keywords, author\n\n```json\n{\n\t"main": "dist/cjs/index.js",\n\t"module": "dist/esm/index.js",\n\t"files": ["dist"],\n\t"types": "dist/index.d.ts",\n\t"type": "module",\n\t"scripts": {\n\t\t"rollup": "rollup -c"\n\t}\n}\n```\n\n## Publish the Library\n\n### Opt-1: Publish to NPM & Install with NPM\n\n- Create an account\n- Login\n- Publish your package\n- Package versioning and update\n  - Semantic versioning\n  - Publish updates\n- 🏷️[O-NodeJS](Back-End/Node.js/O-NodeJS)\n\n### Opt-2: Publish to GitHub & Install with NPM\n\n#### Create a git repo\n\n> If you want to build a library for internal use, create a private repo\n\n- `.gitinore`\n  - node_modules\n  - dist\n- Update `package.json`\n  - `"name": "@jenniferwonder/my-react-component-lib"`\n  - `"publishConfig":{"registry": "https://npm.pkg.github.com/jenniferwonder"}`\n\n#### Create `.npmrc` file\n\n```npmrc\nregistry=https://registry.npmjs.org/\n@jenniferwonder:registry=https://npm.pkg.github.com/\n//npm.pkg.github.com/:_authToken=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\n```\n\n#### Generate GitHub Tokens\n\n- https://github.com/settings/tokens\n- Select permission\n  - ![](https://cdn.jsdelivr.net/gh/jenniferwonder/bimg/full-stack/z-GitHub-Token-Permission.png)\n- Token for my-react-component-lib (2024-02-28, 7 days)\n  - `...`\n\n#### Publish Lib\n\n- `npm publish`\n\n## Consume your lib\n\n### Init a React App (or use your existing React App)\n\n- `npx create-react-app my-app --template typescript`\n- npm install your-package\n- import and use components in your projects\n\n### Consume a private library\n\n- Get the Token with permission needed\n- create an `.npmrc` file same as that of the library: [Create & Publish Component Library (React) > Create npmrc file](Front-End/CDD/README#Create-npmrc-file)\n- install the package: `npm install @jenniferwonder/my-react-component-lib` ^4nn4c5\n\n### Consume a public library\n\n- [Create & Publish Component Library (React) > ^4nn4c5](Front-End/CDD/README#^4nn4c5)\n\n## CI-CD\n\n## Design Tokens to the reuse\n\n## Use Node.js to write custom scripts\n\n## Atomic Design with React\n\n## Prettier, ESLint and Stylelint\n'}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"create--publish-component-library-react",text:"Create & Publish Component Library (React)#"},{depth:2,slug:"goal",text:"💡Goal#"},{depth:2,slug:"reference",text:"Reference#"},{depth:2,slug:"lib-project-init",text:"Lib Project Init#"},{depth:4,slug:"install-react-typescript",text:"Install React, TypeScript#"},{depth:4,slug:"optional",text:"(Optional)#"},{depth:2,slug:"config-typescript",text:"Config TypeScript#"},{depth:2,slug:"develop-your-react-components",text:"Develop your React components#"},{depth:2,slug:"testing",text:"Testing#"},{depth:3,slug:"jest--babel",text:"Jest & Babel#"},{depth:4,slug:"install-jest",text:"Install Jest#"},{depth:4,slug:"install-babel-to-add-test-support-for-jsx-and-tsx",text:"Install Babel to add test support for .jsx and .tsx#"},{depth:4,slug:"note",text:"🐛Note#"},{depth:5,slug:"common-js-兼容问题",text:"Common JS 兼容问题#"},{depth:5,slug:"测试环境依赖问题",text:"测试环境依赖问题#"},{depth:5,slug:"non-js-module-识别问题",text:"non-JS module 识别问题#"},{depth:3,slug:"storybook",text:"Storybook#"},{depth:4,slug:"install",text:"Install#"},{depth:4,slug:"note-1",text:"🐛Note#"},{depth:5,slug:"storybook-not-able-to-detect-the-right-builder",text:"storybook not able to detect the right builder#"},{depth:2,slug:"documentation",text:"Documentation#"},{depth:2,slug:"compilers-and-bundlers",text:"Compilers and Bundlers#"},{depth:3,slug:"rollup-install--config",text:"Rollup Install & Config#"},{depth:4,slug:"install-rollup",text:"Install Rollup#"},{depth:4,slug:"-npm-报错-network-error",text:"🐛 npm 报错 (network error)：#"},{depth:4,slug:"to-check",text:"🟨To check#"},{depth:4,slug:"configure-rollup-for-bundling",text:"Configure Rollup for bundling#"},{depth:2,slug:"package-management",text:"Package management#"},{depth:3,slug:"update-packagejson",text:"Update package.json#"},{depth:2,slug:"publish-the-library",text:"Publish the Library#"},{depth:3,slug:"opt-1-publish-to-npm--install-with-npm",text:"Opt-1: Publish to NPM & Install with NPM#"},{depth:3,slug:"opt-2-publish-to-github--install-with-npm",text:"Opt-2: Publish to GitHub & Install with NPM#"},{depth:4,slug:"create-a-git-repo",text:"Create a git repo#"},{depth:4,slug:"create-npmrc-file",text:"Create .npmrc file#"},{depth:4,slug:"generate-github-tokens",text:"Generate GitHub Tokens#"},{depth:4,slug:"publish-lib",text:"Publish Lib#"},{depth:2,slug:"consume-your-lib",text:"Consume your lib#"},{depth:3,slug:"init-a-react-app-or-use-your-existing-react-app",text:"Init a React App (or use your existing React App)#"},{depth:3,slug:"consume-a-private-library",text:"Consume a private library#"},{depth:3,slug:"consume-a-public-library",text:"Consume a public library#"},{depth:2,slug:"ci-cd",text:"CI-CD#"},{depth:2,slug:"design-tokens-to-the-reuse",text:"Design Tokens to the reuse#"},{depth:2,slug:"use-nodejs-to-write-custom-scripts",text:"Use Node.js to write custom scripts#"},{depth:2,slug:"atomic-design-with-react",text:"Atomic Design with React#"},{depth:2,slug:"prettier-eslint-and-stylelint",text:"Prettier, ESLint and Stylelint#"}]}const Content=createComponent(((n,e,s)=>{const{layout:a,...o}=frontmatter;return o.file=file,o.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};