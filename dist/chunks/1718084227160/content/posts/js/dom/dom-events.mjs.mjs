import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="dom-events">DOM Events<a class="anchor" href="#dom-events"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h3 id="offsetwidthoffsetheightclientwidthclientheight-与-scrollwidthscrollheight-的区别">offsetWidth/offsetHeight，clientWidth/clientHeight 与 scrollWidth/scrollHeight 的区别<a class="anchor" href="#offsetwidthoffsetheightclientwidthclientheight-与-scrollwidthscrollheight-的区别"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>offsetWidth/offsetHeight 是元素的可见宽度/高度加上 padding、border 和滚动条（如果存在）的宽度/高度。</p>\n<p>clientWidth/clientHeight 是元素的可见宽度/高度，不包括 padding 和滚动条。</p>\n<p>scrollWidth/scrollHeight 是元素内容的完整宽度/高度，包括溢出部分。如果元素没有溢出，则 scrollWidth/scrollHeight 等于 clientWidth/clientHeight。如果有溢出，则 scrollWidth/scrollHeight 大于 clientWidth/clientHeight。</p>\n<h3 id="mouseovermouseout-与-mouseentermouseleave-的区别与联系">mouseover/mouseout 与 mouseenter/mouseleave 的区别与联系<a class="anchor" href="#mouseovermouseout-与-mouseentermouseleave-的区别与联系"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>mouseover 和 mouseout 是 HTML DOM 事件，它们会在鼠标移入或移出元素时触发。它们也会在鼠标指针进入或离开<strong>子元素</strong>时触发。这也就是说，如果在父元素上有 mouseover 事件，并且鼠标指针进入子元素，则该元素上仍然会触发 mouseover 事件。mouseout 同理。</p>\n<p>mouseenter 和 mouseleave 事件也是在鼠标进入或离开元素时触发。与 mouseover 和 mouseout 不同的是，mouseenter 和 mouseleave 事件<strong>不会传播到子元素</strong>。因此，如果鼠标指针进入或离开元素的子元素，则不会触发 mouseenter 和 mouseleave 事件。</p>\n<h3 id="eventstoppropagation与-eventstopimmediatepropagation-的区别">event.stopPropagation()与 event.stopImmediatePropagation 的区别<a class="anchor" href="#eventstoppropagation与-eventstopimmediatepropagation-的区别"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p><code>event.stopPropagation()</code>可以阻止事件冒泡到父元素，但不阻止其他事件处理程序的执行。而 <code>event.stopImmediatePropagation()</code>可以立即阻止事件冒泡并取消同一元素上其他事件处理程序的执行。</p>\n<ul>\n<li>\n<p>EVENT FLOW</p>\n</li>\n<li>\n<p>Event Bubbling</p>\n</li>\n<li>\n<p>Event Capturing</p>\n</li>\n<li>\n<p>DOM Event Flow</p>\n</li>\n<li>\n<p>EVENT HANDLERS</p>\n</li>\n<li>\n<p>HTML Event Handlers</p>\n</li>\n<li>\n<p>DOM Level 0 Event Handlers</p>\n</li>\n<li>\n<p>DOM Level 2 Event Handlers</p>\n</li>\n<li>\n<p>Internet Explorer Event Handlers</p>\n</li>\n<li>\n<p>Cross-Browser Event Handlers “</p>\n</li>\n<li>\n<p>THE EVENT OBJECT “</p>\n</li>\n<li>\n<p>The DOM Event Object “</p>\n</li>\n<li>\n<p>The Internet Explorer Event Object “</p>\n</li>\n<li>\n<p>The Cross-Browser Event Object “</p>\n</li>\n<li>\n<p>EVENT TYPES “</p>\n</li>\n<li>\n<p>UI Events “</p>\n</li>\n<li>\n<p>The load Event “</p>\n</li>\n<li>\n<p>The unload Event “</p>\n</li>\n<li>\n<p>The resize Event “</p>\n</li>\n<li>\n<p>Focus Events “</p>\n</li>\n<li>\n<p>Mouse and Wheel Events “</p>\n</li>\n<li>\n<p>Client Coordinates “</p>\n</li>\n<li>\n<p>Page Coordinates “</p>\n</li>\n<li>\n<p>Screen Coordinates “</p>\n</li>\n<li>\n<p>Modifier Keys “</p>\n</li>\n<li>\n<p>Related Elements “</p>\n</li>\n<li>\n<p>Buttons “</p>\n</li>\n<li>\n<p>Additional Event Information “</p>\n</li>\n<li>\n<p>The mousewheel Event “</p>\n</li>\n<li>\n<p>Touch Device Support “</p>\n</li>\n<li>\n<p>Accessibility Issues “</p>\n</li>\n<li>\n<p>Keyboard and Text Events “</p>\n</li>\n<li>\n<p>Key Codes “</p>\n</li>\n<li>\n<p>Character Codes “</p>\n</li>\n<li>\n<p>DOM Level 3 Changes “</p>\n</li>\n<li>\n<p>The textInput Event “</p>\n</li>\n<li>\n<p>Keyboard Events on Devices “</p>\n</li>\n<li>\n<p>Composition Events “</p>\n</li>\n<li>\n<p>Mutation Events “</p>\n</li>\n<li>\n<p>HTML5 Events “</p>\n</li>\n<li>\n<p>The contextmenu Event “</p>\n</li>\n<li>\n<p>The beforeunload Event “</p>\n</li>\n<li>\n<p>The DOMContentLoaded Event “</p>\n</li>\n<li>\n<p>The readystatechange Event “</p>\n</li>\n<li>\n<p>The pageshow and pagehide Events “</p>\n</li>\n<li>\n<p>The hashchange Event “</p>\n</li>\n<li>\n<p>Device Events “</p>\n</li>\n<li>\n<p>The orientationchange Event “</p>\n</li>\n<li>\n<p>The deviceorientation Event “</p>\n</li>\n<li>\n<p>The devicemotion Event “</p>\n</li>\n<li>\n<p>Touch and Gesture Events “</p>\n</li>\n<li>\n<p>Touch Events “</p>\n</li>\n<li>\n<p>Gesture Events “</p>\n</li>\n<li>\n<p>Event Reference “</p>\n</li>\n<li>\n<p>MEMORY AND PERFORMANCE “</p>\n</li>\n<li>\n<p>Event Delegation “</p>\n</li>\n<li>\n<p>Removing Event Handlers “</p>\n</li>\n<li>\n<p>SIMULATING EVENTS “</p>\n</li>\n<li>\n<p>DOM Event Simulation “</p>\n</li>\n<li>\n<p>Simulating Mouse Events “</p>\n</li>\n<li>\n<p>Simulating Keyboard Events “</p>\n</li>\n<li>\n<p>Simulating Other Events “</p>\n</li>\n<li>\n<p>Custom DOM Events “</p>\n</li>\n<li>\n<p>Internet Explorer Event Simulation ”</p>\n</li>\n</ul>',frontmatter={type:"D",tags:["JavaScript"],category:"Programming",Datereviewed:null,reviewed:null,difficulty:null,comment:null,draft:!0,DateStarted:"2023-07-14T00:00:00.000Z",DateModified:"2024-04-25T00:00:00.000Z",status:["ToDo"],aliases:["DOM Events"],pages:69,topic:["DOM"],title:"DOM Events","linter-yaml-title-alias":"DOM Events",minutes:3,words:500},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/js/dom/dom-events.md",url=void 0;function rawContent(){return'\n# DOM Events\n\n### offsetWidth/offsetHeight，clientWidth/clientHeight 与 scrollWidth/scrollHeight 的区别\n\noffsetWidth/offsetHeight 是元素的可见宽度/高度加上 padding、border 和滚动条（如果存在）的宽度/高度。\n\nclientWidth/clientHeight 是元素的可见宽度/高度，不包括 padding 和滚动条。\n\nscrollWidth/scrollHeight 是元素内容的完整宽度/高度，包括溢出部分。如果元素没有溢出，则 scrollWidth/scrollHeight 等于 clientWidth/clientHeight。如果有溢出，则 scrollWidth/scrollHeight 大于 clientWidth/clientHeight。\n\n### mouseover/mouseout 与 mouseenter/mouseleave 的区别与联系\n\nmouseover 和 mouseout 是 HTML DOM 事件，它们会在鼠标移入或移出元素时触发。它们也会在鼠标指针进入或离开**子元素**时触发。这也就是说，如果在父元素上有 mouseover 事件，并且鼠标指针进入子元素，则该元素上仍然会触发 mouseover 事件。mouseout 同理。\n\nmouseenter 和 mouseleave 事件也是在鼠标进入或离开元素时触发。与 mouseover 和 mouseout 不同的是，mouseenter 和 mouseleave 事件**不会传播到子元素**。因此，如果鼠标指针进入或离开元素的子元素，则不会触发 mouseenter 和 mouseleave 事件。\n\n### event.stopPropagation()与 event.stopImmediatePropagation 的区别\n\n`event.stopPropagation()`可以阻止事件冒泡到父元素，但不阻止其他事件处理程序的执行。而 `event.stopImmediatePropagation()`可以立即阻止事件冒泡并取消同一元素上其他事件处理程序的执行。\n\n- EVENT FLOW\n\n- Event Bubbling\n\n- Event Capturing\n\n- DOM Event Flow\n\n- EVENT HANDLERS\n\n- HTML Event Handlers\n\n- DOM Level 0 Event Handlers\n\n- DOM Level 2 Event Handlers\n\n- Internet Explorer Event Handlers\n\n- Cross-Browser Event Handlers "\n\n- THE EVENT OBJECT "\n\n- The DOM Event Object "\n\n- The Internet Explorer Event Object "\n\n- The Cross-Browser Event Object "\n\n- EVENT TYPES "\n\n- UI Events "\n\n- The load Event "\n\n- The unload Event "\n\n- The resize Event "\n\n- Focus Events "\n\n- Mouse and Wheel Events "\n\n- Client Coordinates "\n\n- Page Coordinates "\n\n- Screen Coordinates "\n\n- Modifier Keys "\n\n- Related Elements "\n\n- Buttons "\n\n- Additional Event Information "\n\n- The mousewheel Event "\n\n- Touch Device Support "\n\n- Accessibility Issues "\n\n- Keyboard and Text Events "\n\n- Key Codes "\n\n- Character Codes "\n\n- DOM Level 3 Changes "\n\n- The textInput Event "\n\n- Keyboard Events on Devices "\n\n- Composition Events "\n\n- Mutation Events "\n\n- HTML5 Events "\n\n- The contextmenu Event "\n\n- The beforeunload Event "\n\n- The DOMContentLoaded Event "\n\n- The readystatechange Event "\n\n- The pageshow and pagehide Events "\n\n- The hashchange Event "\n\n- Device Events "\n\n- The orientationchange Event "\n\n- The deviceorientation Event "\n\n- The devicemotion Event "\n\n- Touch and Gesture Events "\n\n- Touch Events "\n\n- Gesture Events "\n\n- Event Reference "\n\n- MEMORY AND PERFORMANCE "\n\n- Event Delegation "\n\n- Removing Event Handlers "\n\n- SIMULATING EVENTS "\n\n- DOM Event Simulation "\n\n- Simulating Mouse Events "\n\n- Simulating Keyboard Events "\n\n- Simulating Other Events "\n\n- Custom DOM Events "\n\n- Internet Explorer Event Simulation "\n'}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"dom-events",text:"DOM Events#"},{depth:3,slug:"offsetwidthoffsetheightclientwidthclientheight-与-scrollwidthscrollheight-的区别",text:"offsetWidth/offsetHeight，clientWidth/clientHeight 与 scrollWidth/scrollHeight 的区别#"},{depth:3,slug:"mouseovermouseout-与-mouseentermouseleave-的区别与联系",text:"mouseover/mouseout 与 mouseenter/mouseleave 的区别与联系#"},{depth:3,slug:"eventstoppropagation与-eventstopimmediatepropagation-的区别",text:"event.stopPropagation()与 event.stopImmediatePropagation 的区别#"}]}const Content=createComponent(((n,e,t)=>{const{layout:i,...o}=frontmatter;return o.file=file,o.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};