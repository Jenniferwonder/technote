import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h3 id="前言">前言<a class="anchor" href="#前言"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>本文将分享 React, Next.js 实现预加载，以及富文本内容展示的方法。</p>\n<h3 id="技术栈">技术栈<a class="anchor" href="#技术栈"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>前端：React, Next.js, Tailwind CSS , TypeScript<br>\n后端 -CMS：Sanity</p>\n<h3 id="nextjs获取预加载内容">Next.js：获取预加载内容<a class="anchor" href="#nextjs获取预加载内容"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>原理：incremental static regeneration（定时渲染）</li>\n<li>打开 /pages，新建 /post> <strong>[slug].tsx</strong>，该文件用于展示博文内容</li>\n<li>加入组件/函数</li>\n<li>[slug].tsx(Import)</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">import</span><span style="color:#E1E4E8"> { GetStaticProps } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "next"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#F97583">import</span><span style="color:#E1E4E8"> { sanityClient, urlFor } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "sanity"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"></span></code></pre>\n<h4 id="1--难点在-slugtsx-定义下列函数">1. 💡 难点：在 [slug].tsx 定义下列函数<a class="anchor" href="#1--难点在-slugtsx-定义下列函数"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>getStaticPaths: 来自 Sanity</li>\n<li>getStaticProps: 来自 Next.js</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> const</span><span style="color:#B392F0"> getStaticPaths</span><span style="color:#F97583"> =</span><span style="color:#F97583"> async</span><span style="color:#E1E4E8"> () </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#79B8FF"> query</span><span style="color:#F97583"> =</span><span style="color:#9ECBFF"> `*[_type =="post"]{ _id, slug { current } }`</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#79B8FF"> posts</span><span style="color:#F97583"> =</span><span style="color:#F97583"> await</span><span style="color:#E1E4E8"> sanityClient.</span><span style="color:#B392F0">fetch</span><span style="color:#E1E4E8">(query);</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#79B8FF"> paths</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> posts.</span><span style="color:#B392F0">map</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">post</span><span style="color:#F97583">:</span><span style="color:#B392F0"> Post</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> ({</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\tparams: {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tslug: post.slug.current,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">\t}));</span></span>\n<span class="line"><span style="color:#F97583">\treturn</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\tpaths,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\tfallback: </span><span style="color:#9ECBFF">"blocking"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t};</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span></code></pre>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> const</span><span style="color:#B392F0"> getStaticProps</span><span style="color:#F97583">:</span><span style="color:#B392F0"> GetStaticProps</span><span style="color:#F97583"> =</span><span style="color:#F97583"> async</span><span style="color:#E1E4E8"> ({ </span><span style="color:#FFAB70">params</span><span style="color:#E1E4E8"> }) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#79B8FF"> query</span><span style="color:#F97583"> =</span><span style="color:#9ECBFF"> `*[_type =="post" &#x26;&#x26; slug.current == $slug][0]{ _id, _createdAt, title, author->{ name, image }, \'comments\': *[ _type== "comment" &#x26;&#x26; post._ref ==^._id &#x26;&#x26; approved == true], description, mainImage, slug, body }`</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#79B8FF"> post</span><span style="color:#F97583"> =</span><span style="color:#F97583"> await</span><span style="color:#E1E4E8"> sanityClient.</span><span style="color:#B392F0">fetch</span><span style="color:#E1E4E8">(query, {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\tslug: params?.slug,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t});</span></span>\n<span class="line"><span style="color:#F97583">\tif</span><span style="color:#E1E4E8"> (</span><span style="color:#F97583">!</span><span style="color:#E1E4E8">post) {</span></span>\n<span class="line"><span style="color:#F97583">\t\treturn</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tnotFound: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t};</span></span>\n<span class="line"><span style="color:#E1E4E8">\t}</span></span>\n<span class="line"><span style="color:#F97583">\treturn</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\tprops: { post },</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\trevalidate: </span><span style="color:#79B8FF">60</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// after 60 seconds, it\'ll update old cached version</span></span>\n<span class="line"><span style="color:#E1E4E8">\t};</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span></code></pre>\n<h3 id="阅读页头部样式">阅读页头部：样式<a class="anchor" href="#阅读页头部样式"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>参考：<a href="https://tailwindcss.com/docs/guides/create-react-app">Tailwind CSS 官方文档</a></li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#79B8FF">Header</span><span style="color:#E1E4E8"> /></span></span>\n<span class="line"><span style="color:#E1E4E8">{</span><span style="color:#9ECBFF">/</span><span style="color:#DBEDFF">_ Banner _</span><span style="color:#9ECBFF">/</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">img</span></span>\n<span class="line"><span style="color:#B392F0">  className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"w-full h-40 object-cover"</span></span>\n<span class="line"><span style="color:#B392F0">  src</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{</span><span style="color:#B392F0">urlFor</span><span style="color:#E1E4E8">(post.mainImage).</span><span style="color:#B392F0">url</span><span style="color:#E1E4E8">()</span><span style="color:#F97583">!</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#B392F0">  alt</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">""</span></span>\n<span class="line"><span style="color:#E1E4E8">/></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">article</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"max-w-3xl mx-auto p-5"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">h1</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-3xl mt-10 mb-3"</span><span style="color:#E1E4E8">>{post.title}&#x3C;/</span><span style="color:#85E89D">h1</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">h2</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-xl font-light text-grey-500 mb-2"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  \t{post.description}</span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/</span><span style="color:#85E89D">h2</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">div</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"flex items-center space-x-2"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">img</span></span>\n<span class="line"><span style="color:#B392F0">      className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"h-10 w-10 rounded-full"</span></span>\n<span class="line"><span style="color:#B392F0">      src</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{</span><span style="color:#B392F0">urlFor</span><span style="color:#E1E4E8">(post.author.image).</span><span style="color:#B392F0">url</span><span style="color:#E1E4E8">()</span><span style="color:#F97583">!</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#B392F0">      alt</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">""</span></span>\n<span class="line"><span style="color:#E1E4E8">    /></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">p</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"font-extralight text-sm"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">      Blog post by{</span><span style="color:#9ECBFF">" "</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">    \t&#x3C;</span><span style="color:#85E89D">span</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-green-600"</span><span style="color:#E1E4E8">>{post.author.name}&#x3C;/</span><span style="color:#85E89D">span</span><span style="color:#E1E4E8">> -</span></span>\n<span class="line"><span style="color:#E1E4E8">      Published at {</span><span style="color:#F97583">new</span><span style="color:#B392F0"> Date</span><span style="color:#E1E4E8">(post._createdAt).</span><span style="color:#B392F0">toLocaleString</span><span style="color:#E1E4E8">()}</span></span>\n<span class="line"><span style="color:#E1E4E8">  \t&#x3C;/</span><span style="color:#85E89D">p</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t&#x3C;/</span><span style="color:#85E89D">div</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    {</span><span style="color:#6A737D">/* Display Rich Content */</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">article</span><span style="color:#E1E4E8">></span></span>\n<span class="line"></span></code></pre>\n<h3 id="富文本内容展示">富文本内容展示<a class="anchor" href="#富文本内容展示"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>下载组件：<code>npm i react-portable-text</code></li>\n<li>import PortableText from “react-portable-text”;</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">{</span></span>\n<span class="line"><span style="color:#9ECBFF">\t/</span><span style="color:#DBEDFF">_ Display Rich Content _</span><span style="color:#9ECBFF">/</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">div</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"mt-10"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t&#x3C;</span><span style="color:#79B8FF">PortableText</span></span>\n<span class="line"><span style="color:#B392F0">\t\tclassName</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">""</span></span>\n<span class="line"><span style="color:#B392F0">\t\tdataset</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{process.env.</span><span style="color:#79B8FF">NEXT_PUBLIC_SANITY_DATASET</span><span style="color:#F97583">!</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#B392F0">\t\tprojectId</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{process.env.</span><span style="color:#79B8FF">NEXT_PUBLIC_SANITY_PROJECT_ID</span><span style="color:#F97583">!</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#B392F0">\t\tcontent</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{post.body}</span></span>\n<span class="line"><span style="color:#B392F0">\t\tserializers</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{{</span></span>\n<span class="line"><span style="color:#B392F0">\t\t\th1</span><span style="color:#E1E4E8">: (</span><span style="color:#FFAB70">props</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> any</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> &#x3C;</span><span style="color:#85E89D">h1</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-2xl font-bold my-5"</span><span style="color:#E1E4E8"> {</span><span style="color:#F97583">...</span><span style="color:#E1E4E8">props} />,</span></span>\n<span class="line"><span style="color:#B392F0">\t\t\th2</span><span style="color:#E1E4E8">: (</span><span style="color:#FFAB70">props</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> any</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> &#x3C;</span><span style="color:#85E89D">h1</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-xl font-bold my-5"</span><span style="color:#E1E4E8"> {</span><span style="color:#F97583">...</span><span style="color:#E1E4E8">props} />,</span></span>\n<span class="line"><span style="color:#B392F0">\t\t\tli</span><span style="color:#E1E4E8">: ({ </span><span style="color:#FFAB70">children</span><span style="color:#E1E4E8"> }</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> any</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> &#x3C;</span><span style="color:#85E89D">li</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"ml-4 list-disc"</span><span style="color:#E1E4E8">>{children}&#x3C;/</span><span style="color:#85E89D">li</span><span style="color:#E1E4E8">>,</span></span>\n<span class="line"><span style="color:#B392F0">\t\t\tlink</span><span style="color:#E1E4E8">: ({ </span><span style="color:#FFAB70">href</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">children</span><span style="color:#E1E4E8"> }</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> any</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> (</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\t&#x3C;</span><span style="color:#85E89D">a</span><span style="color:#B392F0"> href</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{href} </span><span style="color:#B392F0">className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-blue-500 hover:underline"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\t\t{children}</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\t&#x3C;/</span><span style="color:#85E89D">a</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t),</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t}}</span></span>\n<span class="line"><span style="color:#E1E4E8">\t/></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">div</span><span style="color:#E1E4E8">>;</span></span>\n<span class="line"></span></code></pre>',frontmatter={topic:null,category:"Front-End Frameworks",Datereviewed:null,reviewed:null,difficulty:null,comment:null,type:"Note",DateModified:"2024-04-19T00:00:00.000Z",title:"03-预加载与富文本内容展示",tags:["NextJS"],status:[""],DateStarted:"2022-11-09T00:00:00.000Z","sr-due":"2023-07-02T00:00:00.000Z","sr-interval":4,"sr-ease":273,draft:!0,minutes:2,words:386},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/next.js/03-预加载与富文本内容展示.md",url=void 0;function rawContent(){return'\n### 前言\n\n本文将分享 React, Next.js 实现预加载，以及富文本内容展示的方法。\n\n### 技术栈\n\n前端：React, Next.js, Tailwind CSS , TypeScript  \n后端 -CMS：Sanity\n\n### Next.js：获取预加载内容\n\n- 原理：incremental static regeneration（定时渲染）\n- 打开 /pages，新建 /post> **[slug].tsx**，该文件用于展示博文内容\n- 加入组件/函数\n- [slug].tsx(Import)\n\n```tsx TI:"[slug].tsx"\nimport { GetStaticProps } from "next";\nimport { sanityClient, urlFor } from "sanity";\n```\n\n#### 1. 💡 难点：在 [slug].tsx 定义下列函数\n\n- getStaticPaths: 来自 Sanity\n- getStaticProps: 来自 Next.js\n\n```tsx\nexport const getStaticPaths = async () => {\n\tconst query = `*[_type =="post"]{ _id, slug { current } }`;\n\tconst posts = await sanityClient.fetch(query);\n\tconst paths = posts.map((post: Post) => ({\n\t\tparams: {\n\t\t\tslug: post.slug.current,\n\t\t},\n\t}));\n\treturn {\n\t\tpaths,\n\t\tfallback: "blocking",\n\t};\n};\n```\n\n```tsx\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n\tconst query = `*[_type =="post" && slug.current == $slug][0]{ _id, _createdAt, title, author->{ name, image }, \'comments\': *[ _type== "comment" && post._ref ==^._id && approved == true], description, mainImage, slug, body }`;\n\tconst post = await sanityClient.fetch(query, {\n\t\tslug: params?.slug,\n\t});\n\tif (!post) {\n\t\treturn {\n\t\t\tnotFound: true,\n\t\t};\n\t}\n\treturn {\n\t\tprops: { post },\n\t\trevalidate: 60, // after 60 seconds, it\'ll update old cached version\n\t};\n};\n```\n\n### 阅读页头部：样式\n\n- 参考：[Tailwind CSS 官方文档](https://tailwindcss.com/docs/guides/create-react-app)\n\n```tsx\n<Header />\n{/_ Banner _/}\n<img\n  className="w-full h-40 object-cover"\n  src={urlFor(post.mainImage).url()!}\n  alt=""\n/>\n<article className="max-w-3xl mx-auto p-5">\n  <h1 className="text-3xl mt-10 mb-3">{post.title}</h1>\n  <h2 className="text-xl font-light text-grey-500 mb-2">\n  \t{post.description}\n  </h2>\n  <div className="flex items-center space-x-2">\n    <img\n      className="h-10 w-10 rounded-full"\n      src={urlFor(post.author.image).url()!}\n      alt=""\n    />\n    <p className="font-extralight text-sm">\n      Blog post by{" "}\n    \t<span className="text-green-600">{post.author.name}</span> -\n      Published at {new Date(post._createdAt).toLocaleString()}\n  \t</p>\n\t</div>\n    {/* Display Rich Content */}\n</article>\n```\n\n### 富文本内容展示\n\n- 下载组件：`npm i react-portable-text`\n- import PortableText from "react-portable-text";\n\n```tsx\n{\n\t/_ Display Rich Content _/;\n}\n<div className="mt-10">\n\t<PortableText\n\t\tclassName=""\n\t\tdataset={process.env.NEXT_PUBLIC_SANITY_DATASET!}\n\t\tprojectId={process.env.NEXT_PUBLIC_SANITY_PROJECT_ID!}\n\t\tcontent={post.body}\n\t\tserializers={{\n\t\t\th1: (props: any) => <h1 className="text-2xl font-bold my-5" {...props} />,\n\t\t\th2: (props: any) => <h1 className="text-xl font-bold my-5" {...props} />,\n\t\t\tli: ({ children }: any) => <li className="ml-4 list-disc">{children}</li>,\n\t\t\tlink: ({ href, children }: any) => (\n\t\t\t\t<a href={href} className="text-blue-500 hover:underline">\n\t\t\t\t\t{children}\n\t\t\t\t</a>\n\t\t\t),\n\t\t}}\n\t/>\n</div>;\n```\n'}function compiledContent(){return html}function getHeadings(){return[{depth:3,slug:"前言",text:"前言#"},{depth:3,slug:"技术栈",text:"技术栈#"},{depth:3,slug:"nextjs获取预加载内容",text:"Next.js：获取预加载内容#"},{depth:4,slug:"1--难点在-slugtsx-定义下列函数",text:"1. 💡 难点：在 [slug].tsx 定义下列函数#"},{depth:3,slug:"阅读页头部样式",text:"阅读页头部：样式#"},{depth:3,slug:"富文本内容展示",text:"富文本内容展示#"}]}const Content=createComponent(((s,n,a)=>{const{layout:l,...p}=frontmatter;return p.file=file,p.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};