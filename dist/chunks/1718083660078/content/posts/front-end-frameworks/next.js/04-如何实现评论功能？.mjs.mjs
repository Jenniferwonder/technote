import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<p>Up:: <a href="Front-End-Frameworks">Front-End Frameworks</a><br>\n创作时间：2022 年 11 月 10 日</p>\n<h2 id="前言">前言<a class="anchor" href="#前言"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>评论区/表单功能逻辑一般包括：输入校验 > 提交 > 提交成功提示 > 后台审核 > 前端展示。<br>\n本文将分享 React Hook Forms, Next.js 实现评论功能的步骤与方法。</p>\n<h2 id="技术栈">技术栈<a class="anchor" href="#技术栈"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>前端：React, Next.js, Tailwind CSS , TypeScript<br>\n后端 -CMS：Sanity</p>\n<h2 id="工具安装">工具安装<a class="anchor" href="#工具安装"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>工具参考：React Hook Forms-</li>\n<li>根目录安装：<code>npm install react-hook-form</code></li>\n</ul>\n<h2 id="评论区表格样式">评论区表格：样式<a class="anchor" href="#评论区表格样式"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">{</span><span style="color:#6A737D">/* Comment Form */</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">hr</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"max-w-lg my-5 mx-auto border border-yellow-500"</span><span style="color:#E1E4E8"> /></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">form</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"flex flex-col p-5 max-w-2xl mx-auto mb-10"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">h3</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-sm text-yellow-500"</span><span style="color:#E1E4E8">>Enjoyed this article?&#x3C;/</span><span style="color:#85E89D">h3</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">h4</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-3xl font-bold"</span><span style="color:#E1E4E8">>Leave a comment below&#x3C;/</span><span style="color:#85E89D">h4</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">hr</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"py-3 mt-2"</span><span style="color:#E1E4E8"> /></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">label</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"block mb-5"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">span</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-grey-700"</span><span style="color:#E1E4E8">>Name&#x3C;/</span><span style="color:#85E89D">span</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">input</span></span>\n<span class="line"><span style="color:#B392F0">      className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"shadow border rounded py-2 px-3 form-input mt-1 block w-full ring-yellow-500 outline-none focus:ring"</span></span>\n<span class="line"><span style="color:#B392F0">      placeholder</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"John"</span></span>\n<span class="line"><span style="color:#B392F0">      type</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text"</span></span>\n<span class="line"><span style="color:#E1E4E8">    /></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/</span><span style="color:#85E89D">label</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">label</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"block mb-5"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">span</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-grey-700"</span><span style="color:#E1E4E8">>Email&#x3C;/</span><span style="color:#85E89D">span</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">input</span></span>\n<span class="line"><span style="color:#B392F0">      className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"shadow border rounded py-2 px-3 form-input mt-1 block w-full ring-yellow-500 outline-none focus:ring"</span></span>\n<span class="line"><span style="color:#B392F0">      placeholder</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"John"</span></span>\n<span class="line"><span style="color:#B392F0">      type</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text"</span></span>\n<span class="line"><span style="color:#E1E4E8">    /></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/</span><span style="color:#85E89D">label</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">label</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"block mb-5"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">span</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-grey-700"</span><span style="color:#E1E4E8">>Comment&#x3C;/</span><span style="color:#85E89D">span</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">textarea</span></span>\n<span class="line"><span style="color:#B392F0">      className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"shadow border rounded py-2 px-3 form-textarea mt-1 block w-full ring-yellow-500 outline-none focus:ring"</span></span>\n<span class="line"><span style="color:#B392F0">      placeholder</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"John"</span></span>\n<span class="line"><span style="color:#B392F0">      rows</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{</span><span style="color:#79B8FF">8</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">    /></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/</span><span style="color:#85E89D">label</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">form</span><span style="color:#E1E4E8">></span></span>\n<span class="line"></span></code></pre>\n<h2 id="输入校验功能">输入校验功能<a class="anchor" href="#输入校验功能"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h4 id="1-打开-slugtsx-加入-react-hook-form-组件">1. 打开 [slug].tsx， 加入 react-hook-form 组件<a class="anchor" href="#1-打开-slugtsx-加入-react-hook-form-组件"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">import</span><span style="color:#E1E4E8"> { useForm, SubmitHandler } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "react-hook-form"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"></span></code></pre>\n<h4 id="2-定义表格域数据类型typescript">2. 定义表格域数据类型（TypeScript）<a class="anchor" href="#2-定义表格域数据类型typescript"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">interface</span><span style="color:#B392F0"> IFormInput</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#FFAB70">\t_id</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\tname</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\temail</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\tcomment</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#F97583">function</span><span style="color:#B392F0"> Post</span><span style="color:#E1E4E8">({ </span><span style="color:#FFAB70">post</span><span style="color:#E1E4E8"> }</span><span style="color:#F97583">:</span><span style="color:#B392F0"> Props</span><span style="color:#E1E4E8">) {</span></span>\n<span class="line"><span style="color:#6A737D">\t// Use react hook form</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#79B8FF">\t\tregister</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#79B8FF">\t\thandleSubmit</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#FFAB70">\t\tformState</span><span style="color:#E1E4E8">: { </span><span style="color:#79B8FF">errors</span><span style="color:#E1E4E8"> },</span></span>\n<span class="line"><span style="color:#E1E4E8">\t} </span><span style="color:#F97583">=</span><span style="color:#B392F0"> useForm</span><span style="color:#E1E4E8">&#x3C;</span><span style="color:#B392F0">IFormInput</span><span style="color:#E1E4E8">>(); </span><span style="color:#6A737D">// Form will know it can only have the defined type</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"></span></code></pre>\n<h4 id="3-将表格与-react-hook-form-连接实现输入不合法提示">3. 将表格与 react-hook-form 连接，实现：输入不合法提示<a class="anchor" href="#3-将表格与-react-hook-form-连接实现输入不合法提示"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>在 <code>&#x3C;input></code> 中添加 <code>{...register("&#x3C;域>"), {required: true}}</code></li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">{</span><span style="color:#6A737D">/* Connect to React Hook Form, enable easy data pull */</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">input</span><span style="color:#E1E4E8"> {</span><span style="color:#F97583">...</span><span style="color:#B392F0">register</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">"_id"</span><span style="color:#E1E4E8">)} </span><span style="color:#B392F0">type</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"hidden"</span><span style="color:#B392F0"> name</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"_id"</span><span style="color:#B392F0"> value</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{post._id} /></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">label</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">""</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">span</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">""</span><span style="color:#E1E4E8">>Name&#x3C;/</span><span style="color:#85E89D">span</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">input</span></span>\n<span class="line"><span style="color:#E1E4E8">    {</span><span style="color:#F97583">...</span><span style="color:#B392F0">register</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">"name"</span><span style="color:#E1E4E8">, { required: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8"> })}</span></span>\n<span class="line"><span style="color:#E1E4E8">  /></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">label</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">{</span><span style="color:#6A737D">/* errors will return when field validation fails  */</span><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">div</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"flex flex-col p-5"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  {errors.name </span><span style="color:#F97583">&#x26;&#x26;</span><span style="color:#E1E4E8"> (</span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">span</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-red-500"</span><span style="color:#E1E4E8">>The Name Field is required&#x3C;/</span><span style="color:#85E89D">span</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  )}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">div</span><span style="color:#E1E4E8">></span></span>\n<span class="line"></span></code></pre>\n<h2 id="评论提交功能">评论提交功能<a class="anchor" href="#评论提交功能"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h4 id="1-设置表格提交按钮功能">1. 设置表格提交按钮功能<a class="anchor" href="#1-设置表格提交按钮功能"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">{</span></span>\n<span class="line"><span style="color:#6A737D">\t/* 表格提交功能 */</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">form</span><span style="color:#B392F0"> onSubmit</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{</span><span style="color:#B392F0">handleSubmit</span><span style="color:#E1E4E8">(onSubmit)} </span><span style="color:#B392F0">className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">""</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t&#x3C;</span><span style="color:#85E89D">input</span></span>\n<span class="line"><span style="color:#B392F0">\t\ttype</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"submit"</span></span>\n<span class="line"><span style="color:#B392F0">\t\tclassName</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"shadow bg-yellow-500 hover:bg-yellow-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded cursor-pointer"</span></span>\n<span class="line"><span style="color:#E1E4E8">\t/></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">form</span><span style="color:#E1E4E8">>;</span></span>\n<span class="line"></span></code></pre>\n<h4 id="2-获取表格提交数据将数据推送至-api-后台">2. 获取表格提交数据，将数据推送至 API 后台<a class="anchor" href="#2-获取表格提交数据将数据推送至-api-后台"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">function</span><span style="color:#B392F0"> Post</span><span style="color:#E1E4E8">({ </span><span style="color:#FFAB70">post</span><span style="color:#E1E4E8"> }</span><span style="color:#F97583">:</span><span style="color:#B392F0"> Props</span><span style="color:#E1E4E8">) {</span></span>\n<span class="line"><span style="color:#6A737D">\t// Get Form Submit Data</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#B392F0"> onSubmit</span><span style="color:#F97583">:</span><span style="color:#B392F0"> SubmitHandler</span><span style="color:#E1E4E8">&#x3C;</span><span style="color:#B392F0">IFormInput</span><span style="color:#E1E4E8">> </span><span style="color:#F97583">=</span><span style="color:#F97583"> async</span><span style="color:#E1E4E8"> (</span><span style="color:#FFAB70">data</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#F97583">\t\tawait</span><span style="color:#B392F0"> fetch</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">"/api/createComment"</span><span style="color:#E1E4E8">, {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tmethod: </span><span style="color:#9ECBFF">"POST"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tbody: </span><span style="color:#79B8FF">JSON</span><span style="color:#E1E4E8">.</span><span style="color:#B392F0">stringify</span><span style="color:#E1E4E8">(data),</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t})</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t.</span><span style="color:#B392F0">then</span><span style="color:#E1E4E8">(() </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\tconsole.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(data);</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t})</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t.</span><span style="color:#B392F0">catch</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">err</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\tconsole.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(err);</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t});</span></span>\n<span class="line"><span style="color:#E1E4E8">\t};</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"></span></code></pre>\n<h4 id="3-打开-api--新建-createcommentts">3. 打开 /api > 新建 createComment.ts<a class="anchor" href="#3-打开-api--新建-createcommentts"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>根目录安装：<code>npm i @sanity/client</code></li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">import</span><span style="color:#F97583"> type</span><span style="color:#E1E4E8"> { NextApiRequest, NextApiResponse } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "next"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#F97583">import</span><span style="color:#E1E4E8"> sanityClient </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "@sanity/client"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#F97583">const</span><span style="color:#79B8FF"> config</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\tdataset: process.env.</span><span style="color:#79B8FF">NEXT_PUBLIC_SANITY_DATASET</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\tprojectId: process.env.</span><span style="color:#79B8FF">NEXT_PUBLIC_SANITY_PROJECT_ID</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\tuseCdn: process.env.</span><span style="color:#79B8FF">NODE_ENV</span><span style="color:#F97583"> ===</span><span style="color:#9ECBFF"> "production"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\ttoken: process.env.</span><span style="color:#79B8FF">SANITY_API_TOKEN</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"><span style="color:#F97583">const</span><span style="color:#79B8FF"> client</span><span style="color:#F97583"> =</span><span style="color:#B392F0"> sanityClient</span><span style="color:#E1E4E8">(config);</span></span>\n<span class="line"></span></code></pre>\n<h4 id="4-获取-token得到-api-数据库读写权限">4. 获取 TOKEN，得到 API 数据库读写权限<a class="anchor" href="#4-获取-token得到-api-数据库读写权限"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li><a href="https://www.sanity.io/manage">sanity.io</a> > log in> API > Add API token</li>\n<li>Permission> Editor > Save</li>\n<li>将 TOKEN 复制到 /.env.local 文件：<code>SANITY_API_TOKEN=...</code></li>\n<li>重启 Next.js Server：<code>npm run dev</code></li>\n</ul>\n<h4 id="5-将前端数据传送至后台">5. 将前端数据传送至后台<a class="anchor" href="#5-将前端数据传送至后台"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> default</span><span style="color:#F97583"> async</span><span style="color:#F97583"> function</span><span style="color:#B392F0"> createComment</span><span style="color:#E1E4E8">(</span></span>\n<span class="line"><span style="color:#FFAB70">\treq</span><span style="color:#F97583">:</span><span style="color:#B392F0"> NextApiRequest</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#FFAB70">\tres</span><span style="color:#F97583">:</span><span style="color:#B392F0"> NextApiResponse</span></span>\n<span class="line"><span style="color:#E1E4E8">) {</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#E1E4E8"> { </span><span style="color:#79B8FF">_id</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">name</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">email</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">comment</span><span style="color:#E1E4E8"> } </span><span style="color:#F97583">=</span><span style="color:#79B8FF"> JSON</span><span style="color:#E1E4E8">.</span><span style="color:#B392F0">parse</span><span style="color:#E1E4E8">(req.body);</span></span>\n<span class="line"><span style="color:#F97583">\ttry</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#F97583">\t\tawait</span><span style="color:#E1E4E8"> client.</span><span style="color:#B392F0">create</span><span style="color:#E1E4E8">({</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t_type: </span><span style="color:#9ECBFF">"comment"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tpost: {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\t_type: </span><span style="color:#9ECBFF">"reference"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\t_ref: _id,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tname,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\temail,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tcomment,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t});</span></span>\n<span class="line"><span style="color:#E1E4E8">\t} </span><span style="color:#F97583">catch</span><span style="color:#E1E4E8"> (err) {</span></span>\n<span class="line"><span style="color:#F97583">\t\treturn</span><span style="color:#E1E4E8"> res.</span><span style="color:#B392F0">status</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">500</span><span style="color:#E1E4E8">).</span><span style="color:#B392F0">json</span><span style="color:#E1E4E8">({ message: </span><span style="color:#9ECBFF">`Couldn\'t submit comment`</span><span style="color:#E1E4E8">, err });</span></span>\n<span class="line"><span style="color:#E1E4E8">\t}</span></span>\n<span class="line"><span style="color:#E1E4E8">\tconsole.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">"Comment submitted"</span><span style="color:#E1E4E8">);</span></span>\n<span class="line"><span style="color:#E1E4E8">\tres.</span><span style="color:#B392F0">status</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">200</span><span style="color:#E1E4E8">).</span><span style="color:#B392F0">json</span><span style="color:#E1E4E8">({ message: </span><span style="color:#9ECBFF">"Comment submitted"</span><span style="color:#E1E4E8"> });</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"></span></code></pre>\n<h4 id="6-调整后台表单条目-schemas--新建-commentjs-后台-网址查看">6. 调整后台表单条目> /schemas > 新建 comment.js> <a href="http://localhost:3333">后台</a> 网址查看<a class="anchor" href="#6-调整后台表单条目-schemas--新建-commentjs-后台-网址查看"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>表单报错：<code>Parsing error: Cannot find module \'@babel/preset-env\'</code>\n<ul>\n<li>解决办法：</li>\n</ul>\n</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> default</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">\tname: </span><span style="color:#9ECBFF">"comment"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\ttitle: </span><span style="color:#9ECBFF">"Comment"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\ttype: </span><span style="color:#9ECBFF">"document"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\tfields: [</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t{</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tname: </span><span style="color:#9ECBFF">"name"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\ttype: </span><span style="color:#9ECBFF">"string"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t{</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\ttitle: </span><span style="color:#9ECBFF">"Approved"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tname: </span><span style="color:#9ECBFF">"approved"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\ttype: </span><span style="color:#9ECBFF">"boolean"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tdecription: </span><span style="color:#9ECBFF">"Comments won\'t show on the site without approval"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t{</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tname: </span><span style="color:#9ECBFF">"email"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\ttype: </span><span style="color:#9ECBFF">"string"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t{</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tname: </span><span style="color:#9ECBFF">"comment"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\ttype: </span><span style="color:#9ECBFF">"text"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t{</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tname: </span><span style="color:#9ECBFF">"post"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\ttype: </span><span style="color:#9ECBFF">"reference"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tto: [{ type: </span><span style="color:#9ECBFF">"post"</span><span style="color:#E1E4E8"> }],</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t},</span></span>\n<span class="line"><span style="color:#E1E4E8">\t],</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span></code></pre>\n<h2 id="前端提交成功提示获取后台审核过的评论">前端提交成功提示>获取后台审核过的评论<a class="anchor" href="#前端提交成功提示获取后台审核过的评论"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h4 id="1-提交成功状态提示">1. 提交成功状态提示<a class="anchor" href="#1-提交成功状态提示"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>运用 React：useState</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">import</span><span style="color:#E1E4E8"> { useState } </span><span style="color:#F97583">from</span><span style="color:#9ECBFF"> "react"</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#6A737D">// To check submit state</span></span>\n<span class="line"><span style="color:#F97583">const</span><span style="color:#E1E4E8"> [</span><span style="color:#79B8FF">submitted</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">setSubmitted</span><span style="color:#E1E4E8">] </span><span style="color:#F97583">=</span><span style="color:#B392F0"> useState</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">false</span><span style="color:#E1E4E8">);</span></span>\n<span class="line"><span style="color:#F97583">const</span><span style="color:#B392F0"> onSubmit</span><span style="color:#F97583">:</span><span style="color:#B392F0"> SubmitHandler</span><span style="color:#E1E4E8">&#x3C;</span><span style="color:#B392F0">IFormInput</span><span style="color:#E1E4E8">> </span><span style="color:#F97583">=</span><span style="color:#F97583"> async</span><span style="color:#E1E4E8"> (</span><span style="color:#FFAB70">data</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#F97583">\t\tawait</span><span style="color:#B392F0"> fetch</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">"/api/createComment"</span><span style="color:#E1E4E8">, {</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tmethod: </span><span style="color:#9ECBFF">"POST"</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\tbody: </span><span style="color:#79B8FF">JSON</span><span style="color:#E1E4E8">.</span><span style="color:#B392F0">stringify</span><span style="color:#E1E4E8">(data),</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t})</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t.</span><span style="color:#B392F0">then</span><span style="color:#E1E4E8">(() </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#B392F0">\t\t\t\tsetSubmitted</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8">);</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t})</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t.</span><span style="color:#B392F0">catch</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">err</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#B392F0">\t\t\t\tsetSubmitted</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">false</span><span style="color:#E1E4E8">);</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t});</span></span>\n<span class="line"><span style="color:#E1E4E8">\t};</span></span>\n<span class="line"><span style="color:#6A737D">// To display submit success message</span></span>\n<span class="line"><span style="color:#E1E4E8">{submitted</span><span style="color:#F97583">?</span><span style="color:#E1E4E8"> (&#x3C;</span><span style="color:#B392F0">成功界面</span><span style="color:#E1E4E8">>)</span><span style="color:#F97583">:</span><span style="color:#E1E4E8">(&#x3C;</span><span style="color:#B392F0">未提交界面</span><span style="color:#E1E4E8">>)}</span></span>\n<span class="line"></span></code></pre>\n<h4 id="2-前端获取后台审核后的评论">2. 前端获取后台审核后的评论<a class="anchor" href="#2-前端获取后台审核后的评论"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h4>\n<ul>\n<li>打开 /typings.d.ts，定义 comment 类型</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> interface</span><span style="color:#B392F0"> Post</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#FFAB70">\tcomments</span><span style="color:#F97583">:</span><span style="color:#B392F0"> Comment</span><span style="color:#E1E4E8">[];</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> interface</span><span style="color:#B392F0"> Comment</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#FFAB70">\tapproved</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> boolean</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\tcomment</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\temail</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\tname</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\tpost</span><span style="color:#F97583">:</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#FFAB70">\t\t_ref</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\t\t_type</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">\t};</span></span>\n<span class="line"><span style="color:#FFAB70">\t_createdAt</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\t_id</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\t_rev</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\t_type</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#FFAB70">\t_updatedAt</span><span style="color:#F97583">:</span><span style="color:#79B8FF"> string</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"></span></code></pre>\n<ul>\n<li>更新 getStaticProps，添加 comment</li>\n</ul>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> const</span><span style="color:#B392F0"> getStaticProps</span><span style="color:#F97583">:</span><span style="color:#B392F0"> GetStaticProps</span><span style="color:#F97583"> =</span><span style="color:#F97583"> async</span><span style="color:#E1E4E8"> ({ </span><span style="color:#FFAB70">params</span><span style="color:#E1E4E8"> }) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#F97583">\tconst</span><span style="color:#79B8FF"> query</span><span style="color:#F97583"> =</span><span style="color:#9ECBFF"> `*[_type =="post" &#x26;&#x26; slug.current == $slug][0]{</span></span>\n<span class="line"><span style="color:#9ECBFF">    _id,</span></span>\n<span class="line"><span style="color:#9ECBFF">    _createdAt,</span></span>\n<span class="line"><span style="color:#9ECBFF">    title,</span></span>\n<span class="line"><span style="color:#9ECBFF">    author->{</span></span>\n<span class="line"><span style="color:#9ECBFF">    name,</span></span>\n<span class="line"><span style="color:#9ECBFF">    image</span></span>\n<span class="line"><span style="color:#9ECBFF">  },</span></span>\n<span class="line"><span style="color:#9ECBFF">\t\'comment\': *[</span></span>\n<span class="line"><span style="color:#9ECBFF">\t\t_type== "comment" &#x26;&#x26; </span></span>\n<span class="line"><span style="color:#9ECBFF">\t\tpost._ref ==^._id &#x26;&#x26; </span></span>\n<span class="line"><span style="color:#9ECBFF">\t\tapproved == true],</span></span>\n<span class="line"><span style="color:#9ECBFF">  description,</span></span>\n<span class="line"><span style="color:#9ECBFF">  mainImage,</span></span>\n<span class="line"><span style="color:#9ECBFF">  slug,</span></span>\n<span class="line"><span style="color:#9ECBFF">  body</span></span>\n<span class="line"><span style="color:#9ECBFF">  }`</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span></code></pre>\n<h2 id="前端展示评论">前端展示评论<a class="anchor" href="#前端展示评论"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">{</span></span>\n<span class="line"><span style="color:#6A737D">\t/* Comments */</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">div</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"flex flex-col p-10 my-10 max-w-2xl mx-auto shadow-yellow-500 shadow space-y-2"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t&#x3C;</span><span style="color:#85E89D">h3</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-4xl"</span><span style="color:#E1E4E8">>Comments&#x3C;/</span><span style="color:#85E89D">h3</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t&#x3C;</span><span style="color:#85E89D">hr</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"pb-2"</span><span style="color:#E1E4E8"> /></span></span>\n<span class="line"><span style="color:#E1E4E8">\t{post.comments.</span><span style="color:#B392F0">map</span><span style="color:#E1E4E8">((</span><span style="color:#FFAB70">comment</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> (</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t&#x3C;</span><span style="color:#85E89D">div</span><span style="color:#B392F0"> key</span><span style="color:#F97583">=</span><span style="color:#E1E4E8">{comment._id}></span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t&#x3C;</span><span style="color:#85E89D">p</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\t&#x3C;</span><span style="color:#85E89D">span</span><span style="color:#B392F0"> className</span><span style="color:#F97583">=</span><span style="color:#9ECBFF">"text-yellow-500"</span><span style="color:#E1E4E8">>{comment.name}: &#x3C;/</span><span style="color:#85E89D">span</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t\t{comment.comment}</span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t\t&#x3C;/</span><span style="color:#85E89D">p</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t\t&#x3C;/</span><span style="color:#85E89D">div</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">\t))}</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">div</span><span style="color:#E1E4E8">>;</span></span>\n<span class="line"></span></code></pre>',frontmatter={topic:null,category:"Front-End Frameworks",Datereviewed:null,reviewed:null,difficulty:null,comment:null,type:"Note",DateModified:"2024-04-19T00:00:00.000Z",title:"04-如何实现评论功能？",tags:["NextJS"],status:[""],DateStarted:"2022-11-10T00:00:00.000Z","sr-due":"2023-07-02T00:00:00.000Z","sr-interval":4,"sr-ease":277,draft:!0,minutes:5,words:938},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/front-end-frameworks/next.js/04-如何实现评论功能？.md",url=void 0;function rawContent(){return'\nUp:: [Front-End Frameworks](Front-End-Frameworks)  \n创作时间：2022 年 11 月 10 日\n\n## 前言\n\n评论区/表单功能逻辑一般包括：输入校验 > 提交 > 提交成功提示 > 后台审核 > 前端展示。  \n本文将分享 React Hook Forms, Next.js 实现评论功能的步骤与方法。\n\n## 技术栈\n\n前端：React, Next.js, Tailwind CSS , TypeScript  \n后端 -CMS：Sanity\n\n## 工具安装\n\n- 工具参考：React Hook Forms-\n- 根目录安装：`npm install react-hook-form`\n\n## 评论区表格：样式\n\n```tsx\n{/* Comment Form */}\n<hr className="max-w-lg my-5 mx-auto border border-yellow-500" />\n<form className="flex flex-col p-5 max-w-2xl mx-auto mb-10">\n  <h3 className="text-sm text-yellow-500">Enjoyed this article?</h3>\n  <h4 className="text-3xl font-bold">Leave a comment below</h4>\n  <hr className="py-3 mt-2" />\n  <label className="block mb-5">\n    <span className="text-grey-700">Name</span>\n    <input\n      className="shadow border rounded py-2 px-3 form-input mt-1 block w-full ring-yellow-500 outline-none focus:ring"\n      placeholder="John"\n      type="text"\n    />\n  </label>\n  <label className="block mb-5">\n    <span className="text-grey-700">Email</span>\n    <input\n      className="shadow border rounded py-2 px-3 form-input mt-1 block w-full ring-yellow-500 outline-none focus:ring"\n      placeholder="John"\n      type="text"\n    />\n  </label>\n  <label className="block mb-5">\n    <span className="text-grey-700">Comment</span>\n    <textarea\n      className="shadow border rounded py-2 px-3 form-textarea mt-1 block w-full ring-yellow-500 outline-none focus:ring"\n      placeholder="John"\n      rows={8}\n    />\n  </label>\n</form>\n```\n\n## 输入校验功能\n\n#### 1. 打开 [slug].tsx， 加入 react-hook-form 组件\n\n```tsx\nimport { useForm, SubmitHandler } from "react-hook-form";\n```\n\n#### 2. 定义表格域数据类型（TypeScript）\n\n```tsx\ninterface IFormInput {\n\t_id: string;\n\tname: string;\n\temail: string;\n\tcomment: string;\n}\nfunction Post({ post }: Props) {\n\t// Use react hook form\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<IFormInput>(); // Form will know it can only have the defined type\n}\n```\n\n#### 3. 将表格与 react-hook-form 连接，实现：输入不合法提示\n\n- 在 `<input>` 中添加 `{...register("<域>"), {required: true}}`\n\n```tsx\n{/* Connect to React Hook Form, enable easy data pull */}\n<input {...register("_id")} type="hidden" name="_id" value={post._id} />\n<label className="">\n  <span className="">Name</span>\n  <input\n    {...register("name", { required: true })}\n  />\n</label>\n{/* errors will return when field validation fails  */}\n<div className="flex flex-col p-5">\n  {errors.name && (\n    <span className="text-red-500">The Name Field is required</span>\n  )}\n</div>\n```\n\n## 评论提交功能\n\n#### 1. 设置表格提交按钮功能\n\n```tsx\n{\n\t/* 表格提交功能 */\n}\n<form onSubmit={handleSubmit(onSubmit)} className="">\n\t<input\n\t\ttype="submit"\n\t\tclassName="shadow bg-yellow-500 hover:bg-yellow-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded cursor-pointer"\n\t/>\n</form>;\n```\n\n#### 2. 获取表格提交数据，将数据推送至 API 后台\n\n```tsx\nfunction Post({ post }: Props) {\n\t// Get Form Submit Data\n\tconst onSubmit: SubmitHandler<IFormInput> = async (data) => {\n\t\tawait fetch("/api/createComment", {\n\t\t\tmethod: "POST",\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n}\n```\n\n#### 3. 打开 /api > 新建 createComment.ts\n\n- 根目录安装：`npm i @sanity/client`\n\n```typescript\nimport type { NextApiRequest, NextApiResponse } from "next";\nimport sanityClient from "@sanity/client";\nconst config = {\n\tdataset: process.env.NEXT_PUBLIC_SANITY_DATASET,\n\tprojectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n\tuseCdn: process.env.NODE_ENV === "production",\n\ttoken: process.env.SANITY_API_TOKEN,\n};\nconst client = sanityClient(config);\n```\n\n#### 4. 获取 TOKEN，得到 API 数据库读写权限\n\n- [sanity.io](https://www.sanity.io/manage) > log in> API > Add API token\n- Permission> Editor > Save\n- 将 TOKEN 复制到 /.env.local 文件：`SANITY_API_TOKEN=...`\n- 重启 Next.js Server：`npm run dev`\n\n#### 5. 将前端数据传送至后台\n\n```typescript\nexport default async function createComment(\n\treq: NextApiRequest,\n\tres: NextApiResponse\n) {\n\tconst { _id, name, email, comment } = JSON.parse(req.body);\n\ttry {\n\t\tawait client.create({\n\t\t\t_type: "comment",\n\t\t\tpost: {\n\t\t\t\t_type: "reference",\n\t\t\t\t_ref: _id,\n\t\t\t},\n\t\t\tname,\n\t\t\temail,\n\t\t\tcomment,\n\t\t});\n\t} catch (err) {\n\t\treturn res.status(500).json({ message: `Couldn\'t submit comment`, err });\n\t}\n\tconsole.log("Comment submitted");\n\tres.status(200).json({ message: "Comment submitted" });\n}\n```\n\n#### 6. 调整后台表单条目> /schemas > 新建 comment.js> [后台](http://localhost:3333) 网址查看\n\n- 表单报错：`Parsing error: Cannot find module \'@babel/preset-env\'`\n  - 解决办法：\n\n```typescript\nexport default {\n\tname: "comment",\n\ttitle: "Comment",\n\ttype: "document",\n\tfields: [\n\t\t{\n\t\t\tname: "name",\n\t\t\ttype: "string",\n\t\t},\n\t\t{\n\t\t\ttitle: "Approved",\n\t\t\tname: "approved",\n\t\t\ttype: "boolean",\n\t\t\tdecription: "Comments won\'t show on the site without approval",\n\t\t},\n\t\t{\n\t\t\tname: "email",\n\t\t\ttype: "string",\n\t\t},\n\t\t{\n\t\t\tname: "comment",\n\t\t\ttype: "text",\n\t\t},\n\t\t{\n\t\t\tname: "post",\n\t\t\ttype: "reference",\n\t\t\tto: [{ type: "post" }],\n\t\t},\n\t],\n};\n```\n\n## 前端提交成功提示>获取后台审核过的评论\n\n#### 1. 提交成功状态提示\n\n- 运用 React：useState\n\n```typescript\nimport { useState } from "react";\n// To check submit state\nconst [submitted, setSubmitted] = useState(false);\nconst onSubmit: SubmitHandler<IFormInput> = async (data) => {\n\t\tawait fetch("/api/createComment", {\n\t\t\tmethod: "POST",\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tsetSubmitted(true);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetSubmitted(false);\n\t\t\t});\n\t};\n// To display submit success message\n{submitted? (<成功界面>):(<未提交界面>)}\n```\n\n#### 2. 前端获取后台审核后的评论\n\n- 打开 /typings.d.ts，定义 comment 类型\n\n```typescript\nexport interface Post {\n\tcomments: Comment[];\n}\nexport interface Comment {\n\tapproved: boolean;\n\tcomment: string;\n\temail: string;\n\tname: string;\n\tpost: {\n\t\t_ref: string;\n\t\t_type: string;\n\t};\n\t_createdAt: string;\n\t_id: string;\n\t_rev: string;\n\t_type: string;\n\t_updatedAt: string;\n}\n```\n\n- 更新 getStaticProps，添加 comment\n\n```typescript\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n\tconst query = `*[_type =="post" && slug.current == $slug][0]{\n    _id,\n    _createdAt,\n    title,\n    author->{\n    name,\n    image\n  },\n\t\'comment\': *[\n\t\t_type== "comment" && \n\t\tpost._ref ==^._id && \n\t\tapproved == true],\n  description,\n  mainImage,\n  slug,\n  body\n  }`;\n};\n```\n\n## 前端展示评论\n\n```tsx\n{\n\t/* Comments */\n}\n<div className="flex flex-col p-10 my-10 max-w-2xl mx-auto shadow-yellow-500 shadow space-y-2">\n\t<h3 className="text-4xl">Comments</h3>\n\t<hr className="pb-2" />\n\t{post.comments.map((comment) => (\n\t\t<div key={comment._id}>\n\t\t\t<p>\n\t\t\t\t<span className="text-yellow-500">{comment.name}: </span>\n\t\t\t\t{comment.comment}\n\t\t\t</p>\n\t\t</div>\n\t))}\n</div>;\n```\n'}function compiledContent(){return html}function getHeadings(){return[{depth:2,slug:"前言",text:"前言#"},{depth:2,slug:"技术栈",text:"技术栈#"},{depth:2,slug:"工具安装",text:"工具安装#"},{depth:2,slug:"评论区表格样式",text:"评论区表格：样式#"},{depth:2,slug:"输入校验功能",text:"输入校验功能#"},{depth:4,slug:"1-打开-slugtsx-加入-react-hook-form-组件",text:"1. 打开 [slug].tsx， 加入 react-hook-form 组件#"},{depth:4,slug:"2-定义表格域数据类型typescript",text:"2. 定义表格域数据类型（TypeScript）#"},{depth:4,slug:"3-将表格与-react-hook-form-连接实现输入不合法提示",text:"3. 将表格与 react-hook-form 连接，实现：输入不合法提示#"},{depth:2,slug:"评论提交功能",text:"评论提交功能#"},{depth:4,slug:"1-设置表格提交按钮功能",text:"1. 设置表格提交按钮功能#"},{depth:4,slug:"2-获取表格提交数据将数据推送至-api-后台",text:"2. 获取表格提交数据，将数据推送至 API 后台#"},{depth:4,slug:"3-打开-api--新建-createcommentts",text:"3. 打开 /api > 新建 createComment.ts#"},{depth:4,slug:"4-获取-token得到-api-数据库读写权限",text:"4. 获取 TOKEN，得到 API 数据库读写权限#"},{depth:4,slug:"5-将前端数据传送至后台",text:"5. 将前端数据传送至后台#"},{depth:4,slug:"6-调整后台表单条目-schemas--新建-commentjs-后台-网址查看",text:"6. 调整后台表单条目> /schemas > 新建 comment.js> 后台 网址查看#"},{depth:2,slug:"前端提交成功提示获取后台审核过的评论",text:"前端提交成功提示>获取后台审核过的评论#"},{depth:4,slug:"1-提交成功状态提示",text:"1. 提交成功状态提示#"},{depth:4,slug:"2-前端获取后台审核后的评论",text:"2. 前端获取后台审核后的评论#"},{depth:2,slug:"前端展示评论",text:"前端展示评论#"}]}const Content=createComponent(((s,n,a)=>{const{layout:l,...p}=frontmatter;return p.file=file,p.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};