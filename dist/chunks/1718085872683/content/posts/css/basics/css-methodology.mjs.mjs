import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="css-methodology">CSS Methodology<a class="anchor" href="#css-methodology"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="bem">BEM<a class="anchor" href="#bem"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="block">Block<a class="anchor" href="#block"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="element">Element<a class="anchor" href="#element"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="modifier">Modifier<a class="anchor" href="#modifier"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h2 id="smacss">SMACSS<a class="anchor" href="#smacss"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="scalable-and-modular-architecture-for-css">💡Scalable and Modular Architecture for CSS<a class="anchor" href="#scalable-and-modular-architecture-for-css"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="base">Base<a class="anchor" href="#base"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="theme">Theme<a class="anchor" href="#theme"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="module">Module<a class="anchor" href="#module"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="layout">Layout<a class="anchor" href="#layout"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h3 id="state">State<a class="anchor" href="#state"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h2 id="oocss-object-oriented-css">OOCSS (Object-Oriented CSS)<a class="anchor" href="#oocss-object-oriented-css"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="separates-container-elements-or-skins-from-content">Separates container elements, or “skins,” from content<a class="anchor" href="#separates-container-elements-or-skins-from-content"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<h2 id="utility-first-css">Utility-first CSS<a class="anchor" href="#utility-first-css"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="️o-tailwindcss">🏷️<a href="O-TailwindCSS">O-TailwindCSS</a><a class="anchor" href="#️o-tailwindcss"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>',frontmatter={category:"Web Design",Datereviewed:null,reviewed:null,aliases:["CSS Methodology"],draft:!1,title:"CSS Methodology",type:"D",topic:"Basics",tags:["CSS"],DateStarted:"2024-01-19T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",status:null,difficulty:"Good",comment:"⭐⭐","linter-yaml-title-alias":"CSS Methodology",minutes:1,words:16},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/css/basics/css-methodology.md",url=void 0;function rawContent(){return"\n# CSS Methodology\n\n## BEM\n\n### Block\n\n### Element\n\n### Modifier\n\n## SMACSS\n\n### 💡Scalable and Modular Architecture for CSS\n\n### Base\n\n### Theme\n\n### Module\n\n### Layout\n\n### State\n\n## OOCSS (Object-Oriented CSS)\n\n### Separates container elements, or “skins,” from content\n\n## Utility-first CSS\n\n### 🏷️[O-TailwindCSS](O-TailwindCSS)\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"css-methodology",text:"CSS Methodology#"},{depth:2,slug:"bem",text:"BEM#"},{depth:3,slug:"block",text:"Block#"},{depth:3,slug:"element",text:"Element#"},{depth:3,slug:"modifier",text:"Modifier#"},{depth:2,slug:"smacss",text:"SMACSS#"},{depth:3,slug:"scalable-and-modular-architecture-for-css",text:"💡Scalable and Modular Architecture for CSS#"},{depth:3,slug:"base",text:"Base#"},{depth:3,slug:"theme",text:"Theme#"},{depth:3,slug:"module",text:"Module#"},{depth:3,slug:"layout",text:"Layout#"},{depth:3,slug:"state",text:"State#"},{depth:2,slug:"oocss-object-oriented-css",text:"OOCSS (Object-Oriented CSS)#"},{depth:3,slug:"separates-container-elements-or-skins-from-content",text:"Separates container elements, or “skins,” from content#"},{depth:2,slug:"utility-first-css",text:"Utility-first CSS#"},{depth:3,slug:"️o-tailwindcss",text:"🏷️O-TailwindCSS#"}]}const Content=createComponent(((e,a,n)=>{const{layout:t,...s}=frontmatter;return s.file=file,s.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};