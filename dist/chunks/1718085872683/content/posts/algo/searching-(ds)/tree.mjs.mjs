import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h2 id="tree-树">Tree (树)<a class="anchor" href="#tree-树"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<ul>\n<li>==树==\n<ul>\n<li>6.2 　树的定义</li>\n<li>6.3 　树的抽象数据类型</li>\n<li>6.4 　树的存储结构</li>\n</ul>\n</li>\n<li>==二叉树==\n<ul>\n<li>6.5 　二叉树的定义</li>\n<li>6.6 　二叉树的性质</li>\n<li>6.7 　二叉树的存储结构</li>\n<li>6.8 　遍历二叉树</li>\n<li>6.9 　二叉树的建立</li>\n<li>6.10 　线索二叉树 (Threaded Binary Tree）</li>\n<li>6.11 　树、森林与二叉树的转换</li>\n</ul>\n</li>\n<li>6.12 　赫夫曼树及其应用\n<ul>\n<li>6.12.1 　赫夫曼树</li>\n<li>6.12.2 　赫夫曼树定义与原理</li>\n<li>6.12.3 　赫夫曼编码</li>\n</ul>\n</li>\n<li>==二叉堆==</li>\n<li>==优先队列==</li>\n</ul>',frontmatter={Datereviewed:null,reviewed:null,difficulty:null,comment:null,draft:!0,title:"tree",type:"D",topic:["Tree"],DateStarted:"2023-09-07T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",status:null,aliases:["树"],category:"Programming",tags:["Algo"],minutes:1,words:134},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/algo/searching-(ds)/tree.md",url=void 0;function rawContent(){return"\n## Tree (树)\n\n- ==树==\n  - 6.2 　树的定义\n  - 6.3 　树的抽象数据类型\n  - 6.4 　树的存储结构\n- ==二叉树==\n  - 6.5 　二叉树的定义\n  - 6.6 　二叉树的性质\n  - 6.7 　二叉树的存储结构\n  - 6.8 　遍历二叉树\n  - 6.9 　二叉树的建立\n  - 6.10 　线索二叉树 (Threaded Binary Tree）\n  - 6.11 　树、森林与二叉树的转换\n- 6.12 　赫夫曼树及其应用\n  - 6.12.1 　赫夫曼树\n  - 6.12.2 　赫夫曼树定义与原理\n  - 6.12.3 　赫夫曼编码\n- ==二叉堆==\n- ==优先队列==\n"}function compiledContent(){return html}function getHeadings(){return[{depth:2,slug:"tree-树",text:"Tree (树)#"}]}const Content=createComponent(((n,e,l)=>{const{layout:t,...i}=frontmatter;return i.file=file,i.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};