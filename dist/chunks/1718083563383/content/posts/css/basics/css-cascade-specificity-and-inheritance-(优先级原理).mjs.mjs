import{createComponent,renderTemplate,maybeRenderHead,unescapeHTML}from"../../../../astro.mjs";import"kleur/colors";import"clsx";import"html-escaper";import"cssesc";const html='<h1 id="css-cascade-specificity-and-inheritance-优先级原理">CSS Cascade, Specificity and Inheritance (优先级原理)<a class="anchor" href="#css-cascade-specificity-and-inheritance-优先级原理"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h1>\n<h2 id="cascade">Cascade<a class="anchor" href="#cascade"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="source-order">Source order<a class="anchor" href="#source-order"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>When have equal specificity, the rule <strong>that is defined last in the stylesheet</strong> is the one that will be used</li>\n<li>Source order only matters when the specificity weight of the rules is the same</li>\n</ul>\n<h3 id="specificity">Specificity<a class="anchor" href="#specificity"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>ID, CLASS, and ELEMENT columns in the hundreds, tens, and ones place</li>\n</ul>\n<h3 id="inline-styles">Inline Styles<a class="anchor" href="#inline-styles"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Take precedence over all normal styles, no matter the specificity</li>\n</ul>\n<h3 id="importance">Importance<a class="anchor" href="#importance"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>!important</code>\n<ul>\n<li>overrule all of the above calculations, even inline styles</li>\n<li>recommend that you never use it unless you absolutely have to</li>\n<li>make debugging CSS problems really hard to work out</li>\n</ul>\n</li>\n</ul>\n<h3 id="order-of-overriding-declarations-with-later-ones-overriding-earlier-ones-d682bc08-36f6-6872">📌Order of overriding declarations: with later ones overriding earlier ones ^d682bc08-36f6-6872<a class="anchor" href="#order-of-overriding-declarations-with-later-ones-overriding-earlier-ones-d682bc08-36f6-6872"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li>Normal declarations in user style sheets (custom styles set by a user).</li>\n<li>Normal declarations in author style sheets (these are the styles set by us, the web developers)</li>\n<li>Important declarations in author style sheets</li>\n<li>Important declarations in user style sheets.</li>\n<li>Important declarations in user agent style sheets.</li>\n</ul>\n<h2 id="cascade-layers">Cascade Layers<a class="anchor" href="#cascade-layers"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="order-of-cascade-layers">Order of cascade layers<a class="anchor" href="#order-of-cascade-layers"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>@layer firstLayer, secondLayer;</code>\n<ul>\n<li><code>@layer firstLayer { }</code></li>\n</ul>\n</li>\n<li>Normal Styles Precedence\n<ul>\n<li>non-layered normal styles take precedence over layered normal styles, no matter the specificity</li>\n<li>With competing normal (not important) styles, later layers take precedence over earlier defined layers</li>\n</ul>\n</li>\n<li>Important Styles Precedence\n<ul>\n<li>For styles flagged with <code>!important</code>, however, earlier defined layers take precedence over later defined layers.</li>\n</ul>\n</li>\n<li>Inline styles take precedence over all author styles, no matter the layer</li>\n</ul>\n<h3 id="reference">Reference<a class="anchor" href="#reference"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_layers">https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_layers</a></li>\n</ul>\n<h2 id="inheritance">Inheritance<a class="anchor" href="#inheritance"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<h3 id="inherited-properties">Inherited properties<a class="anchor" href="#inherited-properties"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>color</code></li>\n</ul>\n<h3 id="non-inherited-properties">Non-Inherited properties<a class="anchor" href="#non-inherited-properties"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>width</code></li>\n<li><code>margin</code></li>\n<li><code>padding</code></li>\n<li><code>border</code></li>\n</ul>\n<h3 id="controlling-inheritance">Controlling inheritance<a class="anchor" href="#controlling-inheritance"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><code>inherit</code>\n<ul>\n<li>Sets the property value applied to a selected element to be the same as that of its parent element</li>\n</ul>\n</li>\n<li><code>initial</code>\n<ul>\n<li>Sets the property value applied to a selected element to the initial value of that property</li>\n</ul>\n</li>\n<li><code>revert</code>\n<ul>\n<li>Resets the property value applied to a selected element to the browser’s default styling</li>\n</ul>\n</li>\n<li><code>revert-layer</code>\n<ul>\n<li>Resets the property value applied to a selected element to the value established in a previous cascade layer</li>\n</ul>\n</li>\n<li><code>unset</code>\n<ul>\n<li>Resets the property to its natural value, which means that if the property is naturally inherited it acts like inherit, otherwise it acts like initial.</li>\n</ul>\n</li>\n<li>Resetting all property values\n<ul>\n<li><code>all: unset;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id="reference-1">Reference<a class="anchor" href="#reference-1"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<ul>\n<li><a href="https://www.w3.org/TR/CSS22/cascade.html#specified-value">https://www.w3.org/TR/CSS22/cascade.html#specified-value</a></li>\n</ul>',frontmatter={category:"Web Design",aliases:["CSS Cascade, Specificity and Inheritance (优先级原理)"],draft:!1,title:"CSS Cascade, Specificity and Inheritance (优先级原理)",type:"D",tags:["CSS"],DateStarted:"2023-09-19T00:00:00.000Z",DateModified:"2024-04-19T00:00:00.000Z",status:null,comment:"⭐⭐",difficulty:"Good",Datereviewed:"2023-09-22T16:00:00.000Z",reviewed:1,topic:"Basics","linter-yaml-title-alias":"CSS Cascade, Specificity and Inheritance (优先级原理)",minutes:2,words:301},file="E:/SynologyDrive/Codespace/blog-site/mynote/my-fuwari-blog/src/content/posts/css/basics/css-cascade-specificity-and-inheritance-(优先级原理).md",url=void 0;function rawContent(){return"\n# CSS Cascade, Specificity and Inheritance (优先级原理)\n\n## Cascade\n\n### Source order\n\n- When have equal specificity, the rule **that is defined last in the stylesheet** is the one that will be used\n- Source order only matters when the specificity weight of the rules is the same\n\n### Specificity\n\n- ID, CLASS, and ELEMENT columns in the hundreds, tens, and ones place\n\n### Inline Styles\n\n- Take precedence over all normal styles, no matter the specificity\n\n### Importance\n\n- `!important`\n  - overrule all of the above calculations, even inline styles\n  - recommend that you never use it unless you absolutely have to\n  - make debugging CSS problems really hard to work out\n\n### 📌Order of overriding declarations: with later ones overriding earlier ones ^d682bc08-36f6-6872\n\n- Normal declarations in user style sheets (custom styles set by a user).\n- Normal declarations in author style sheets (these are the styles set by us, the web developers)\n- Important declarations in author style sheets\n- Important declarations in user style sheets.\n- Important declarations in user agent style sheets.\n\n## Cascade Layers\n\n### Order of cascade layers\n\n- `@layer firstLayer, secondLayer;`\n  - `@layer firstLayer { }`\n- Normal Styles Precedence\n  - non-layered normal styles take precedence over layered normal styles, no matter the specificity\n  - With competing normal (not important) styles, later layers take precedence over earlier defined layers\n- Important Styles Precedence\n  - For styles flagged with `!important`, however, earlier defined layers take precedence over later defined layers.\n- Inline styles take precedence over all author styles, no matter the layer\n\n### Reference\n\n- https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_layers\n\n## Inheritance\n\n### Inherited properties\n\n- `color`\n\n### Non-Inherited properties\n\n- `width`\n- `margin`\n- `padding`\n- `border`\n\n### Controlling inheritance\n\n- `inherit`\n  - Sets the property value applied to a selected element to be the same as that of its parent element\n- `initial`\n  - Sets the property value applied to a selected element to the initial value of that property\n- `revert`\n  - Resets the property value applied to a selected element to the browser's default styling\n- `revert-layer`\n  - Resets the property value applied to a selected element to the value established in a previous cascade layer\n- `unset`\n  - Resets the property to its natural value, which means that if the property is naturally inherited it acts like inherit, otherwise it acts like initial.\n- Resetting all property values\n  - `all: unset;`\n\n### Reference\n\n- https://www.w3.org/TR/CSS22/cascade.html#specified-value\n"}function compiledContent(){return html}function getHeadings(){return[{depth:1,slug:"css-cascade-specificity-and-inheritance-优先级原理",text:"CSS Cascade, Specificity and Inheritance (优先级原理)#"},{depth:2,slug:"cascade",text:"Cascade#"},{depth:3,slug:"source-order",text:"Source order#"},{depth:3,slug:"specificity",text:"Specificity#"},{depth:3,slug:"inline-styles",text:"Inline Styles#"},{depth:3,slug:"importance",text:"Importance#"},{depth:3,slug:"order-of-overriding-declarations-with-later-ones-overriding-earlier-ones-d682bc08-36f6-6872",text:"📌Order of overriding declarations: with later ones overriding earlier ones ^d682bc08-36f6-6872#"},{depth:2,slug:"cascade-layers",text:"Cascade Layers#"},{depth:3,slug:"order-of-cascade-layers",text:"Order of cascade layers#"},{depth:3,slug:"reference",text:"Reference#"},{depth:2,slug:"inheritance",text:"Inheritance#"},{depth:3,slug:"inherited-properties",text:"Inherited properties#"},{depth:3,slug:"non-inherited-properties",text:"Non-Inherited properties#"},{depth:3,slug:"controlling-inheritance",text:"Controlling inheritance#"},{depth:3,slug:"reference-1",text:"Reference#"}]}const Content=createComponent(((e,n,t)=>{const{layout:a,...r}=frontmatter;return r.file=file,r.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};